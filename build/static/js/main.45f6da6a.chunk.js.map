{"version":3,"sources":["lib/transfer-list-component.tsx","const.ts","hooks/role/useUpdateRole.tsx","helpers/control-errors.ts","config/config.ts","components/module/module-transfer-list.tsx","components/progress/progress.tsx","lib/local-storage.ts","hooks/login/useRefreshToken.tsx","apollo-client.ts","store/auth/action.tsx","hooks/user/useMe.tsx","components/header/header.component.tsx","pages/404.page.tsx","components/acceso/filter-access.component.tsx","hooks/billing/useGetBilling.tsx","hooks/billing/useCreateBilling.tsx","hooks/billing/useUpdateBilling.tsx","components/textfield/reddit.tsx","components/billing/billing-form.tsx","hooks/billing/useDeleteBilling.tsx","components/dialog/dialog.component.tsx","components/billing/billing-list.tsx","pages/billing.page.tsx","hooks/category/useGetCategorys.tsx","hooks/brand/useGetBrands.tsx","hooks/brand/useUpdateBrand.tsx","hooks/brand/useCreateBrand.tsx","components/brand/brand-form.tsx","components/brand/brand-list.tsx","pages/brand.page.tsx","hooks/category/useCreateCategory.tsx","hooks/category/useUpdateCategory.tsx","components/category/category-form.tsx","components/category/category-list.tsx","pages/category.page.tsx","lib/currency/money.ts","hooks/egress/useGetEgress.tsx","hooks/egress/useDeleteEgress.tsx","hooks/egress/useUpdateEgress.tsx","hooks/egress/useCreateEgress.tsx","components/egress/EgressForm.tsx","components/egress/EgressList.tsx","context/caja-context.tsx","pages/egress.page.tsx","hooks/ingress/useGetIngress.tsx","hooks/ingress/useDeleteIngress.tsx","hooks/ingress/useUpdateIngress.tsx","hooks/ingress/useCreateIngress.tsx","components/ingress/IngressForm.tsx","components/ingress/IngresList.tsx","pages/ingress.page.tsx","pages/summary-box.page.tsx","hooks/summary-box/useGetEgerssByDates.tsx","hooks/summary-box/useGetIngressByDates.tsx","pages/check-money.page.tsx","hooks/brand/useBrandsByCategory.tsx","hooks/model/useGetModelsByBrand.tsx","hooks/product/useGetProductByCMM.tsx","hooks/product/useProductByName.tsx","hooks/service/useGetServicesByCategory.tsx","hooks/service/useServiceByName.tsx","pages/check-products.tsx","hooks/customer/useGetCustomer.tsx","hooks/customer/useUpdateCustomer.tsx","hooks/customer/useCreateCustomer.tsx","components/customer/customer-form.tsx","hooks/customer/useDeleteCustomer.tsx","components/customer/customer-list.tsx","pages/customer.page.tsx","hooks/device/useGetDevice.tsx","hooks/device/useUpdateDevice.tsx","hooks/device/useCreateDevice.tsx","components/device/device-form.tsx","hooks/device/useDeleteDevice.tsx","components/device/device-list.tsx","pages/device.page.tsx","hooks/model/useGetModels.tsx","hooks/model/useUpdateModel.tsx","hooks/model/useCreateModel.tsx","components/model/model-form.tsx","components/model/model-list.tsx","pages/model.page.tsx","components/table/item-module-menu.tsx","components/table/item-module-access.tsx","hooks/module/useUpdateModule.tsx","hooks/module/useCreateModule.tsx","hooks/access/useGetAllAceess.tsx","hooks/menu/useGetMenus.tsx","components/module/module-form.component.tsx","components/acceso/access-form.component.tsx","components/menu/menu-form.component.tsx","components/table/item-module.component.tsx","pages/module.page.tsx","hooks/product/useGetProducts.tsx","hooks/product/useUpdateProduct.tsx","hooks/product/useCreateProduct.tsx","components/product/product-form.tsx","hooks/product/useDeleteProduct.tsx","components/product/product-list.tsx","pages/product.page.tsx","hooks/role/useGetRoles.tsx","components/role/role-module-item.tsx","hooks/role/useCreateRole.tsx","components/role/rol-form.tsx","components/role/role-list.tsx","pages/role.page.tsx","hooks/service/useGetServices.tsx","hooks/service/useUpdateService.tsx","hooks/service/useCreateService.tsx","components/service/service-form.tsx","hooks/service/useDeleteService.tsx","components/service/service-list.tsx","pages/service.page.tsx","hooks/user/useGetUsers.tsx","hooks/user/useUpdateUser.tsx","hooks/user/useCreateUser.tsx","components/user/user-form.tsx","hooks/user/useUpdateAccessToLogin.tsx","hooks/password/useChangePassword.tsx","components/password/password-form.tsx","components/user/user-list.tsx","pages/user.page.tsx","hooks/vehicle/useGetVehicle.tsx","hooks/vehicle/useDeleteVehicle.tsx","hooks/vehicle/useCreateVehicle.tsx","hooks/vehicle/useUpdateVehicle.tsx","components/vehicle/vehicle-form.tsx","hooks/renew/useCreateRenew.tsx","hooks/billing/useGetBillingByName.tsx","components/renew/renew-form.tsx","components/vehicle/vehicle-list.tsx","pages/vehicles.page.tsx","lib/item-switch.component.tsx","lib/switch-container.tsx","components/wrapper/wrapper.component.tsx","components/footer/footer.component.tsx","store/page/action.tsx","components/wrapper/list-item-menus.tsx","components/wrapper/list-item-modules.tsx","assets/logo_kemay_antena.png","components/aside/aside.tsx","pages/home.page.tsx","assets/B_logo_kemay.png","hooks/login/useLogin.tsx","pages/login.page.tsx","components/app/app.component.tsx","store/auth/reducer.tsx","store/page/reducer.tsx","store/alert/reducer.tsx","store/index.ts","index.tsx","hooks/module/useGetModules.tsx","store/alert/action.tsx"],"names":["not","a","b","filter","value","indexOf","intersection","TrasnferList","setListAvailable","setListCurrent","listAvailable","setChecked","checked","titleAvailable","listCurrent","titleCurrent","loading","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","customList","title","avatar","onClick","indeterminate","disabled","inputProps","subheader","dense","component","role","map","labelId","name","button","tabIndex","disableRipple","id","primary","container","spacing","justify","alignItems","item","direction","variant","size","concat","aria-label","PERMIT_ONE","PERMIT_TWO","PERMIT_TREE","PERMIT_FOUR","ROLSA","MODULE_FORBIDDEN","MENU_FORBIDDEN","UDATE_ROL","gql","useUpdateRole","useMutation","update","cache","updateRole","data","modify","fields","existingRoles","newRolesRef","writeFragment","fragment","error","findError","index","graphQLErrors","element","extensions","exception","response","message","index1","dotenv","path","__dirname","console","log","process","URLC","ModuleTransferList","handleClose","useState","dispatch","useDispatch","optionsGetModules","useGetModules","optionsUpdateRole","alert","useSelector","state","type","text","onSubmit","authReducer","authUser","e","preventDefault","newData","module","variables","roleInput","modules","setAlert","loadModuleAvailable","useCallback","listModulesAvailableNoModulo","getModules","dispo","some","actual","useEffect","listModulesCurrentNoModulo","xs","style","width","color","autoFocus","Progress","display","justifyContent","disableShrink","getLocal","val","localStorage","getItem","setLocal","key","setItem","POST_REFRESH","isRefreshing","pendingRequests","errorLink","onError","networkError","operation","forward","err","status","forward$","fromPromise","Promise","resolve","client","mutate","mutation","authInput","email","refresh_token","then","access_token","refreshToken","callback","catch","finally","flatMap","locations","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","authorization","ApolloClient","link","from","InMemoryCache","LOGIN_USER","LOGOUT_USER","LOADING_USER","ERROR_USER","initialValue","lastName","setLoading","payload","logout","clear","resetStore","window","location","href","ME","connect","whoisme","me","useLazyQuery","pollInterval","useMe","className","NoMatch","loadAccess","auth","page","Component","Notify","filterAccessbyModuleCreate","access","myaccess","i","filterAccessbyModuleEdit","filterAccessbyModuleDelete","filterAccessbyModuleView","GET_BILLINGS","useGetBilling","useQuery","CREATE_BILLING","UPDATE_BILLING","useStylesReddit","makeStyles","theme","createStyles","root","border","overflow","borderRadius","backgroundColor","transition","transitions","create","borderColor","palette","main","focused","RedditTextField","props","classes","TextField","InputProps","disableUnderline","BillingForm","billing","initialStateUpdate","day","billingForm","setBillingForm","optionsUpdate","refetchQueries","query","updateBilling","useUpdateBilling","optionsCreate","registerBilling","useCreateBilling","handleInput","target","billingInput","Number","Grid","fullWidth","onChange","autoComplete","label","DialogActions","Button","DELETE_BILLING","DialogTitle","withStyles","margin","padding","closeButton","position","right","top","grey","children","onClose","other","disableTypography","Typography","IconButton","DialogForm","open","dialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","Alert","severity","DialogContent","dividers","overflowY","initialAlert","initialDialog","active","BillingList","user","setDialog","optionsBilling","deleteBilling","useDeleteBilling","showOptionsForDelete","Tooltip","showOptionsForEdit","TableRow","TableCell","scope","moment","createdAt","format","updatedAt","align","BillingPage","billings","setBillings","getBillings","TableContainer","Paper","marginTop","whiteSpace","Table","TableHead","TableBody","GET_CATEGORYS","useGetCategorys","GET_BRANDS","useGetBrands","UPDATE_BRAND","CREATE_BRAND","BrandForm","brand","initialValueUpdate","category","brandForm","setBrandForm","categorys","setCategorys","optionsUpdateBrand","updateBrand","useUpdateBrand","optionsCreateBrand","registerBrand","useCreateBrand","brandInput","getCategorys","FormControl","InputLabel","Select","MenuItem","BrandList","BrandPage","brands","setBrands","getBrands","CREATE_CATEGORY","UPDATE_CATEGORY","CategoryForm","categoryForm","setCategoryForm","optionsUpdateCategory","updateCategory","useUpdateCategory","optionsCreateCategory","registerCategory","useCreateCategory","categoryInput","CategoryList","CategooryPage","formatMoney","Intl","NumberFormat","currency","GET_EGRESS","DELETE_EGRESS","UPDATE_EGRESS","CREATE_EGRESS","initialAutoCompleteInput","EgressForm","egress","initialValueCreate","detail","amount","units","observation","egressForm","setEgressForm","valueInput","setValueInput","optionsUpdateEgress","updateEgress","useUpdateEgress","optionsCreateEgress","registerEgress","useCreateEgress","dataCategorys","egressInput","Autocomplete","event","inputValue","onInputChange","newValue","options","getOptionLabel","getOptionSelected","option","renderInput","params","startAdornment","InputAdornment","readOnly","multiline","rows","EgressList","egres","optionsEgress","deleteEgress","useDeleteEgress","wordBreak","PagoContext","createContext","summaryIngress","ingress","setSummaryIngress","summaryEgress","setSummaryEgress","PagoProvider","Provider","Consumer","EgressPage","checkMoney","resultEgress","setEgress","useGetEgress","useContext","totalHoy","reduce","sum","undefined","getEgress","background","colSpan","GET_INGRESS","DELETE_INGRESS","UPDATE_INGRESS","CREATE_INGRESS","IngressForm","ingres","ingressForm","setIngressForm","optionsUpdateIngress","updateIngress","useUpdateIngress","optionsCreateIngress","registerIngress","useCreateIngress","ingressInput","useStyles","row","cell_long","fontSize","minWidth","cell_default","cell_short","IngressList","optionsIngress","deleteIngress","useDeleteIngress","IngressPage","resultIngress","setIngress","useGetIngress","getIngress","SummaryBoxPage","marginRight","GET_DATE","CheckMoneyPage","now","utc","local","getIngressByDates","useGetIngressByDate","getEgressByDates","useGetEgressByDate","initialState","dateStart","dateEnd","setCheckMoney","setResultIngress","setResultEgress","start","end","GET_BRANDS_BY_CATEGORY","useGetBrandsByCategory","GET_MODELS_BY_BRAND","useGetModelsByBrand","GET_PRODUCTS_BY_CMM","GET_PRODUCTS_BY_NAME","GET_SERVICES_BY_CATEGORY","GET_SERVICE_BY_NAME","model","product","service","intialValue","CheckProducts","checkProduct","setCheckProduct","models","setModels","products","setProducts","services","setServices","isActiveRadio","setActiveRadio","optionsGetBrandsByCategory","optionsGetServiceByCategory","useGetServicesByCategory","optionsGetModelsByBrand","optionsGetProductsCMM","useGetProductsCMM","optionGetProduct","getProductByName","useGetProductByName","optionGetService","getServiceByName","useGetServiceByName","changeBrandByCategory","getBrandsByCategory","changeServiceByCategory","getServicesByCategory","changeModelByBrand","getModelsByBrand","changeProductCMM","getProductsByCategoryBrandModel","getProduct","getService","RadioGroup","FormControlLabel","control","Radio","flexDirection","height","description","price","GET_CUSTOMERS","useGetCustomers","UPDATE_CUSTOMER","CREATE_CUSTOMER","CustomerForm","customer","document","numDocument","cellphone_1","cellphone_2","username","password","customerForm","setCustomerForm","updateCustomer","useUpdateCustomer","registerCustomer","useCreateCustomer","customerInput","DELETE_CUSTOMER","CustomerList","optionsCustomer","deleteCustomer","useDeleteCustomer","CustomerPage","customers","setCustomers","getCustomer","GET_DEVICES","useGetDevices","UPDATE_DEVICE","CREATE_DEVICE","DeviceForm","device","deviceForm","setDeviceForm","updateDevice","useUpdateDevice","registerDevice","useCreateDevice","deviceInput","DELETE_DEVICE","DeviceList","deleteDevice","useDeleteDevice","DevicePage","devices","setDevices","getDevices","GET_MODELS","UPDATE_MODEL","CREATE_MODEL","ModelForm","modelForm","setModelForm","optionsUpdateModel","updateModel","useUpdateModel","optionsCreateModel","registerModel","useCreateModel","modelInput","ModelList","ModelPage","useGetModels","getModels","ItemModuleMenu","menu","Chip","onDelete","ItemModuleAccess","UDATE_MODULE","useUpdateModule","GET_MODULES","updateModule","CREATE_MODULE","GET_ACCESS","useGetAllAccess","GET_MENUS","useGetMenus","formControl","maxWidth","chips","flexWrap","chip","noLabel","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","ModuleForm","optionsUpdateModule","optionsCreateModule","registerModule","useCreateModule","optionsGetAccess","optionsGetMenus","menuSelected","setMenuSelected","accessSelected","setAccessSelected","listMenus","setListMenus","listAccess","setListAccess","moduleForm","setModuleForm","sentToAddMenus","sentToAddAccess","getStyles","personName","fontWeight","typography","fontWeightRegular","fontWeightMedium","moduleInput","menus","listMenusNoModulos","getMenus","getAccess","multiple","input","Input","renderValue","selected","AccesoForm","optionsGetAllAccess","loadAccessAvailable","res","MenuForm","loadMenusAvailable","listMenusAvailableNoModulos","listMenusCurrentNoModulos","initialValueButton","ItemModule","table","ModulePage","setModules","GET_PRODUCTS","UPDATE_PRODUCT","CREATE_PRODUCT","ProductForm","cant","productForm","setProductForm","optionsUpdateProduct","updateProduct","useUpdateProduct","optionsCreateProduct","registerProduct","useCreateProduct","productInput","onKeyUp","defaultValue","DELETE_PRODUCT","ProductList","optionsProduct","deleteProduct","useDeleteProduct","ProductPage","useGetProducts","getProducts","GET_ROLES","useGetRoles","RoleModuleItem","CREATE_ROL","RoleForm","optionsCreateRole","registerRole","useCreateRole","roleForm","setRoleForm","modulesSelected","setModulesSelected","listModules","setListModules","sentToAddModules","listModulesNoModulos","RoleList","RolePage","roles","setRoles","getRoles","GET_SERVICES","UPDATE_SERVICE","CREATE_SERVICE","ServiceForm","serviceForm","setServiceForm","optionsUpdateService","updateService","useUpdateService","optionsCreateService","registerService","useCreateService","serviceInput","DELETE_SERVICE","ServiceList","optionsService","deleteService","useDeleteService","ServicePage","useGetServices","getServices","GET_USERS","UPDATE_USER","CREATE_USER","UserForm","confirmPassword","userForm","setUserForm","listRoles","setListRoles","optionsUpdateUser","updateUser","useUpdateUser","optionsCreateUser","registerUser","useCreateUser","userInput","UPDATE_ACTIVATE_USER","UPDATE_DESACTIVATE_USER","UPDATE_PASSWORD_TO_ADMIN","PasswordForm","newPassword","confirmNewPassword","changePasswordToAdmin","useChangePasswordToAdmin","UserList","optionsActivate","activateUser","useActivateUser","optionsDesactivate","desactivateUser","useDesactivateUser","UserPage","users","setUsers","useGetUsers","getUsers","GET_VEHICLES","DELETE_VEHICLE","VehicleForm","vehicle","initialStateCreate","plate","nroGPS","billigStart","vehicleForm","setVehicleForm","updateVehicle","useUpdateVehicle","registerVehicle","useCreateVehicle","setCustomer","setDevice","setBilling","optionCustomer","optionDevice","optionBilling","vehicleInput","loadingText","noOptionsText","CREATE_RENEW","BILLING_BY_NAME","RenewForm","isActive","setActive","renew","setRenew","setState","optionsBillings","getBillingByName","useBillingByName","registerRenew","useCreateRenew","today","startOfDay","Date","newDate","add","days","getBilling","renewInput","Divider","float","billigEnd","userSelect","VehicleList","optionsVehicle","deleteVehicle","useDeleteVehicle","VehiclesPage","vehicles","setVehicles","useGetVehicles","getVehicles","useLocation","formatedLink","pathname","replace","PrivateRoute","toLogin","rest","render","to","createElement","exact","PAGES","SwitchContainer","Wrapper","firsCaracter","charAt","toUpperCase","restCaracter","substr","subTitle","toLowerCase","Footer","rel","LINK_USER","setLink","history","useHistory","goToPage","ListItemModules","isArrowActive","setArrowActive","isTextModuleActive","setTextModuleActive","findMenus","React","setMenu","ExpandMore","ChevronRight","Aside","findModules","src","logo","alt","Home","POST_LOGIN","initialUser","initialError","setError","setUser","loginForm","useLogin","handleInputChange","handleSubmit","login","helperText","CircularProgress","App","reducers","combineReducers","action","ALERT","persistConfig","storage","whitelist","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45f6da6a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Progress from \"../components/progress/progress\";\r\n\r\nfunction not(a: any[], b: any[]) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a: any[], b: any[]) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a: any[], b: any[]) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nconst TrasnferList = ({\r\n  setListAvailable,\r\n  setListCurrent,\r\n  listAvailable,\r\n  setChecked,\r\n  checked,\r\n  titleAvailable,\r\n  listCurrent,\r\n  titleCurrent,\r\n  loading,\r\n}: any) => {\r\n  const leftChecked = intersection(checked, listAvailable);\r\n  const rightChecked = intersection(checked, listCurrent);\r\n\r\n  const handleToggle = (value: any) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items: any[]) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: any[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setListCurrent(listCurrent.concat(leftChecked));\r\n    setListAvailable(not(listAvailable, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setListAvailable(listAvailable.concat(rightChecked));\r\n    setListCurrent(not(listCurrent, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: any[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        //className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n            inputProps={{ \"aria-label\": \"all items selected\" }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List\r\n        //className={classes.list}\r\n        dense\r\n        component=\"div\"\r\n        role=\"list\"\r\n      >\r\n        {loading ? (\r\n          <Progress />\r\n        ) : (\r\n          items.map((value: any) => {\r\n            const labelId = `transfer-list-all-item-${value.name}-label`;\r\n\r\n            return (\r\n              <ListItem\r\n                key={value.id}\r\n                role=\"listitem\"\r\n                button\r\n                onClick={handleToggle(value)}\r\n              >\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    checked={checked.indexOf(value) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{ \"aria-labelledby\": labelId }}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText id={labelId} primary={`${value.name}`} />\r\n              </ListItem>\r\n            );\r\n          })\r\n        )}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n      <Grid item>{customList(titleAvailable, listAvailable)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(titleCurrent, listCurrent)}</Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TrasnferList;\r\n","export const PERMIT_ONE = \"Crear\";\r\nexport const PERMIT_TWO = \"Editar\";\r\nexport const PERMIT_TREE = \"Eliminar\";\r\nexport const PERMIT_FOUR = \"Ver\";\r\nexport const ROLSA = \"SuperAdmin\";\r\nexport const MODULE_FORBIDDEN = \"Administración de modulos\";\r\nexport const MENU_FORBIDDEN = \"Modulos\";\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\n\r\ninterface RoleUpdateInput {\r\n  variables: {\r\n    roleInput: Role;\r\n  };\r\n}\r\n\r\nconst UDATE_ROL = gql`\r\n  mutation updateRole($roleInput: RoleUpdateInput!) {\r\n    updateRole(roleInput: $roleInput) {\r\n      id\r\n      name\r\n      description\r\n      modules {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateRole = () => {\r\n  const [updateRole, { error, loading }] = useMutation(UDATE_ROL, {\r\n    update(cache, { data: { updateRole } }) {\r\n      cache.modify({\r\n        fields: {\r\n          updateRole(existingRoles = []) {\r\n            const newRolesRef = cache.writeFragment({\r\n              data: updateRole,\r\n              fragment: gql`\r\n                fragment NewRole on Role {\r\n                  id\r\n                  name\r\n                  description\r\n                  modules {\r\n                    id\r\n                    name\r\n                  }\r\n                }\r\n              `,\r\n            });\r\n            return [...existingRoles, newRolesRef];\r\n          },\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  return { updateRole, error, loading };\r\n};\r\n","export const findError = (error: any) => {\r\n  for (let index = 0; index < error.graphQLErrors.length; index++) {\r\n    const element =\r\n      error.graphQLErrors[index].extensions.exception.response.message;\r\n    for (let index1 = 0; index1 < element.length; index1++) {\r\n      const element1 = element[index1];\r\n      return element1;\r\n    }\r\n  }\r\n};\r\n","import * as dotenv from \"dotenv\";\r\ndotenv.config({ path: __dirname + \"/.env\" });\r\n\r\nconsole.log(process.env.REACT_APP_URL);\r\nexport const URLC =\r\n  process.env.REACT_APP_URL || \"http://localhost:3000/graphql\";\r\n","import React, { useState, useEffect, FormEvent, useCallback } from \"react\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { useGetModules } from \"../../hooks/module/useGetModules\";\r\nimport { useUpdateRole } from \"../../hooks/role/useUpdateRole\";\r\nimport TrasnferList from \"../../lib/transfer-list-component\";\r\nimport { MODULE_FORBIDDEN, ROLSA } from \"../../const\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst ModuleTransferList = ({\r\n  role,\r\n  handleClose,\r\n}: {\r\n  role: Role;\r\n  handleClose: () => void;\r\n}) => {\r\n  const [listAvailable, setListAvailable] = useState<Module[]>([]);\r\n  const [listCurrent, setListCurrent] = useState<Module[]>([]);\r\n  const [checked, setChecked] = useState<Module[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsGetModules = useGetModules();\r\n  const optionsUpdateRole = useUpdateRole();\r\n  const alert = useSelector((state: any) => state.message);\r\n  const { type, text } = alert;\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    const newData = listCurrent.map((module) => {\r\n      return {\r\n        name: module.name,\r\n      };\r\n    });\r\n\r\n    try {\r\n      await optionsUpdateRole.updateRole({\r\n        variables: {\r\n          roleInput: {\r\n            id: role.id,\r\n            modules: newData,\r\n          },\r\n        },\r\n      });\r\n      return dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"El rol actualizó sus modulos correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadModuleAvailable = useCallback(() => {\r\n    let res: Module[];\r\n\r\n    res = optionsGetModules.data.getModules.filter(\r\n      (dispo: Module) =>\r\n        !role.modules?.some((actual) => dispo.name === actual.name)\r\n    );\r\n\r\n    const listModulesAvailableNoModulo = res.filter(\r\n      (module) => module.name !== MODULE_FORBIDDEN\r\n    );\r\n\r\n    // if (auth?.role?.name === ROLSA) {\r\n    //   setListAvailable(res);\r\n    // } else {\r\n    //   const resNotSA = res.filter((module) => module.name !== MODULE_FORBIDDEN);\r\n    //   setListAvailable(resNotSA);\r\n    // }\r\n\r\n    setListAvailable(listModulesAvailableNoModulo);\r\n  }, [role, optionsGetModules.data]);\r\n\r\n  useEffect(() => {\r\n    if (role && optionsGetModules.data) {\r\n      const listModulesCurrentNoModulo = role.modules?.filter(\r\n        (module) => module.name !== MODULE_FORBIDDEN\r\n      );\r\n      setListCurrent(listModulesCurrentNoModulo || []);\r\n      loadModuleAvailable();\r\n    }\r\n  }, [role, optionsGetModules.data, loadModuleAvailable]);\r\n\r\n  if (type === \"error\") {\r\n    return <h1>{text}</h1>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TrasnferList\r\n            setListAvailable={setListAvailable}\r\n            setListCurrent={setListCurrent}\r\n            setChecked={setChecked}\r\n            checked={checked}\r\n            listAvailable={listAvailable}\r\n            titleAvailable=\"Modulos disponibles\"\r\n            listCurrent={listCurrent}\r\n            titleCurrent=\"Modulos actuales\"\r\n            loading={optionsGetModules.loading}\r\n          />\r\n        </Grid>\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disabled={optionsUpdateRole.loading ? true : false}\r\n          >\r\n            {module.id ? \"Actualizar\" : \"Registrar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ModuleTransferList;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Progress = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CircularProgress disableShrink />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","export const getLocal = (val: string) => {\r\n  return localStorage.getItem(val);\r\n};\r\n\r\nexport const setLocal = (key: string, val: string) => {\r\n  return localStorage.setItem(key, val);\r\n};\r\n\r\nexport const deleteLocal = (val: string) => {\r\n  return localStorage.removeItem(val);\r\n};\r\n\r\nexport const clearAllLocal = () => {\r\n  return localStorage.clear();\r\n};\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.get(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: any) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(`En localstorage ${e}`);\r\n  }\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Token } from \"../../interfaces/auth.interface\";\r\n\r\ninterface AuthRefreshTokenInput {\r\n  variables: {\r\n    authInput: Token;\r\n  };\r\n}\r\n\r\nexport const POST_REFRESH = gql`\r\n  mutation refreshToken($authInput: AuthRefreshTokenInput!) {\r\n    refreshToken(authInput: $authInput) {\r\n      access_token\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable no-loop-func */\r\nimport {\r\n  ApolloClient,\r\n  createHttpLink,\r\n  InMemoryCache,\r\n  from,\r\n  fromPromise,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { getLocal, setLocal } from \"./lib/local-storage\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { POST_REFRESH } from \"./hooks/login/useRefreshToken\";\r\nimport { URLC } from \"./config/config\";\r\n\r\nlet isRefreshing = false;\r\nlet pendingRequests: any = [];\r\n\r\nconst resolvePendingRequests = () => {\r\n  pendingRequests.map((callback: any) => callback());\r\n  pendingRequests = [];\r\n};\r\n\r\nconst errorLink = onError(\r\n  ({ graphQLErrors, networkError, operation, forward }) => {\r\n    if (graphQLErrors) {\r\n      for (let err of graphQLErrors) {\r\n        switch (err.extensions!.exception.status) {\r\n          case 401:\r\n            let forward$;\r\n            if (!isRefreshing) {\r\n              isRefreshing = true;\r\n              forward$ = fromPromise(\r\n                client\r\n                  .mutate({\r\n                    mutation: POST_REFRESH,\r\n                    variables: {\r\n                      authInput: {\r\n                        email: getLocal(\"username\"),\r\n                        refresh_token: getLocal(\"refreshToken\"),\r\n                      },\r\n                    },\r\n                  })\r\n                  .then(\r\n                    ({\r\n                      data: {\r\n                        refreshToken: { access_token },\r\n                      },\r\n                    }) => {\r\n                      setLocal(\"accessToken\", access_token);\r\n                      return true;\r\n                    }\r\n                  )\r\n                  .then(() => {\r\n                    resolvePendingRequests();\r\n                    return true;\r\n                  })\r\n                  .catch(() => {\r\n                    pendingRequests = [];\r\n                    return false;\r\n                  })\r\n                  .finally(() => {\r\n                    isRefreshing = false;\r\n                  })\r\n              );\r\n            } else {\r\n              forward$ = fromPromise(\r\n                new Promise((resolve: any) => {\r\n                  pendingRequests.push(() => resolve());\r\n                })\r\n              );\r\n            }\r\n\r\n            return forward$.flatMap(() => forward(operation));\r\n          default:\r\n            console.log(\r\n              `[ERROR]: Message: ${err.message}, Location: ${err.locations}, Path: ${err.path}`\r\n            );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (networkError) console.log(`[Network error]: ${networkError}`);\r\n  }\r\n);\r\n//http://localhost:3000/graphql\r\nconst httpLink = createHttpLink({\r\n  uri: URLC,\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = getLocal(\"accessToken\");\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: from([errorLink, authLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { clearAllLocal } from \"../../lib/local-storage\";\r\nimport client from \"../../apollo-client\";\r\n\r\nexport const LOGIN_USER = \"@auth/LOGIN_USER\";\r\nexport const LOGOUT_USER = \"@auth/LOGOUT_USER\";\r\nexport const LOADING_USER = \"@auth/LOADING_USER\";\r\nexport const ERROR_USER = \"@auth/ERROR_USER\";\r\n\r\nconst initialValue = {\r\n  name: \"Anonimo\",\r\n  lastName: \"\",\r\n};\r\n\r\nexport const setLoading = (loading: boolean) => {\r\n  return {\r\n    type: LOADING_USER,\r\n    payload: loading,\r\n  };\r\n};\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n  clearAllLocal();\r\n  client.resetStore();\r\n  window.location.href = \"/\";\r\n  await dispatch({\r\n    type: LOGOUT_USER,\r\n    payload: initialValue,\r\n  });\r\n};\r\n\r\nexport const whoisme = (payload: any) => async (dispatch: any) => {\r\n  try {\r\n    await dispatch(setLoading(true));\r\n    await dispatch({\r\n      type: LOGIN_USER,\r\n      payload: payload.me,\r\n    });\r\n    await dispatch(setLoading(false));\r\n  } catch (e) {\r\n    await dispatch({\r\n      type: ERROR_USER,\r\n      payload: e.message,\r\n    });\r\n  }\r\n};\r\n","import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport { logout } from \"../../store/auth/action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ME = gql`\r\n  query me {\r\n    me {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      status\r\n      role {\r\n        name\r\n        modules {\r\n          id\r\n          name\r\n          access {\r\n            name\r\n          }\r\n          menus {\r\n            id\r\n            name\r\n            link\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useMe = () => {\r\n  const [me, { data, loading, error }] = useLazyQuery(ME, {\r\n    pollInterval: 500,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (error && error?.graphQLErrors[0].extensions?.exception.status === 401) {\r\n    alert(error.graphQLErrors[0].extensions.exception.response.message);\r\n    dispatch(logout());\r\n  }\r\n\r\n  return { me, data, loading };\r\n};\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { useEffect } from \"react\";\r\nimport { useMe } from \"../../hooks/user/useMe\";\r\nimport { connect } from \"react-redux\";\r\nimport { whoisme, setLoading, logout } from \"../../store/auth/action\";\r\nimport { setLocal } from \"../../lib/local-storage\";\r\nimport \"./header.css\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    loading: state.authReducer.loading,\r\n    authUser: state.authReducer.authUser,\r\n  };\r\n};\r\n\r\nconst Header = ({ authUser, loading, whoisme, logout }: any) => {\r\n  const { me, data } = useMe();\r\n\r\n  useEffect(() => {\r\n    me();\r\n    whoisme(data);\r\n    setLocal(\"username\", data?.me?.email);\r\n  }, [me, whoisme, data]);\r\n\r\n  if (data?.me?.status === 2) {\r\n    logout();\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <a>\r\n        {loading ? (\r\n          `Cargando usuario...`\r\n        ) : (\r\n          <>\r\n            <strong>Bienvenido, </strong>\r\n            {authUser?.name} {authUser?.lastName}\r\n          </>\r\n        )}\r\n      </a>\r\n      &nbsp;&nbsp;\r\n      <button className=\"buttonLogout\" onClick={() => logout()}>\r\n        Cerrar sesion\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setLoading,\r\n  whoisme,\r\n  logout,\r\n})(Header);\r\n","import React from \"react\";\r\n\r\nconst NoMatch = () => {\r\n  return <>4040404040404040</>;\r\n};\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\r\nimport {\r\n  PERMIT_ONE,\r\n  PERMIT_TWO,\r\n  PERMIT_TREE,\r\n  PERMIT_FOUR,\r\n  ROLSA,\r\n} from \"../../const\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\nexport const loadAccess = (\r\n  value: string,\r\n  auth: User,\r\n  page: any,\r\n  Component: any,\r\n  Notify?: any\r\n) => {\r\n  switch (value) {\r\n    case PERMIT_ONE:\r\n      //find access by modules\r\n      const filterAccessbyModuleCreate = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleCreate?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    case PERMIT_TWO:\r\n      //find access by modules\r\n      const filterAccessbyModuleEdit = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleEdit?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    case PERMIT_TREE:\r\n      //find access by modules\r\n      const filterAccessbyModuleDelete = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleDelete?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    case PERMIT_FOUR:\r\n      //find access by modules\r\n      const filterAccessbyModuleView = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleView?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_BILLINGS = gql`\r\n  query getBillings {\r\n    getBillings {\r\n      id\r\n      name\r\n      day\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetBilling = () => {\r\n  const { data, error, loading } = useQuery(GET_BILLINGS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Billing } from \"../../interfaces/billing.interface\";\r\nimport { GET_BILLINGS } from \"./useGetBilling\";\r\n\r\ninterface CreateBillingInput {\r\n  variables: {\r\n    billingInput: Billing;\r\n  };\r\n}\r\n\r\nconst CREATE_BILLING = gql`\r\n  mutation registerBilling($billingInput: CreateBillingInput!) {\r\n    registerBilling(billingInput: $billingInput) {\r\n      id\r\n      name\r\n      day\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateBilling = () => {\r\n  const [registerBilling, { error, loading }] = useMutation(CREATE_BILLING, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_BILLINGS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerBilling, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Billing } from \"../../interfaces/billing.interface\";\r\nimport { GET_BILLINGS } from \"./useGetBilling\";\r\n\r\ninterface UpdateBillingInput {\r\n  variables: {\r\n    billingInput: Billing;\r\n  };\r\n}\r\n\r\nconst UPDATE_BILLING = gql`\r\n  mutation updateBilling($billingInput: UpdateBillingInput!) {\r\n    updateBilling(billingInput: $billingInput) {\r\n      id\r\n      name\r\n      day\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateBilling = () => {\r\n  const [updateBilling, { error, loading }] = useMutation(UPDATE_BILLING, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_BILLINGS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateBilling, error, loading };\r\n};\r\n","import { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport { OutlinedInputProps } from \"@material-ui/core/OutlinedInput\";\r\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\r\n\r\nconst useStylesReddit = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #e2e2e1\",\r\n      overflow: \"hidden\",\r\n      borderRadius: 4,\r\n      backgroundColor: \"#fcfcfb\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n      \"&$focused\": {\r\n        backgroundColor: \"#fff\",\r\n        //boxShadow: `${apha(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n    focused: {},\r\n  })\r\n);\r\n\r\nconst RedditTextField = (props: TextFieldProps) => {\r\n  const classes = useStylesReddit();\r\n\r\n  return (\r\n    <TextField\r\n      InputProps={\r\n        { classes, disableUnderline: true } as Partial<OutlinedInputProps>\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RedditTextField;\r\n","import { Billing } from \"../../interfaces/billing.interface\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCreateBilling } from \"../../hooks/billing/useCreateBilling\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { useUpdateBilling } from \"../../hooks/billing/useUpdateBilling\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RedditTextField from \"../textfield/reddit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\n\r\ninterface Option {\r\n  handleClose?: () => void;\r\n  billing?: Billing;\r\n}\r\n\r\nconst BillingForm = ({ handleClose, billing }: Option) => {\r\n  const initialStateCreate: Billing = {\r\n    name: \"\",\r\n    day: 0,\r\n  };\r\n\r\n  const initialStateUpdate: Billing = {\r\n    id: billing?.id || \"\",\r\n    name: billing?.name || \"\",\r\n    day: billing?.day || 0,\r\n  };\r\n\r\n  const [billingForm, setBillingForm] = useState<Billing>(\r\n    initialStateUpdate.id ? initialStateUpdate : initialStateCreate\r\n  );\r\n  const dispatch = useDispatch();\r\n  const optionsUpdate = useUpdateBilling();\r\n  const optionsCreate = useCreateBilling();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setBillingForm({\r\n      ...billingForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (billingForm.id) {\r\n      try {\r\n        await optionsUpdate.updateBilling({\r\n          variables: {\r\n            billingInput: {\r\n              ...billingForm,\r\n              day: Number(billingForm.day),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El plan se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreate.registerBilling({\r\n          variables: {\r\n            billingInput: {\r\n              ...billingForm,\r\n              day: Number(billingForm.day),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La plan ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"name\"\r\n              autoComplete=\"off\"\r\n              id=\"idName\"\r\n              label=\"Nombre\"\r\n              variant=\"filled\"\r\n              value={billingForm.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"number\"\r\n              onChange={handleInput}\r\n              name=\"day\"\r\n              autoComplete=\"off\"\r\n              id=\"idDay\"\r\n              label=\"Dias\"\r\n              variant=\"filled\"\r\n              value={billingForm.day}\r\n            />\r\n          </Grid>\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {billingForm.id ? (\r\n              optionsUpdate.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreate.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillingForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_BILLINGS } from \"./useGetBilling\";\r\n\r\nconst DELETE_BILLING = gql`\r\n  mutation deleteBilling($id: String!) {\r\n    deleteBilling(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteBilling = () => {\r\n  const [deleteBilling, { error, loading }] = useMutation(DELETE_BILLING, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_BILLINGS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteBilling, error, loading };\r\n};\r\n","import React from \"react\";\r\n//dialog\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//fullscreen\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useSelector } from \"react-redux\";\r\n//icons\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\ninterface DialogOption {\r\n  open: boolean;\r\n  dialog?: any;\r\n  title: string;\r\n  component?: JSX.Element;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: \"absolute\",\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogForm = ({\r\n  open,\r\n  dialog,\r\n  title,\r\n  component,\r\n  handleClose,\r\n}: DialogOption) => {\r\n  const alert = useSelector((state: any) => state.message);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  /*  https://thoughtbot.com/blog/using-redux-with-react-hooks\r\n    const { count, user } = useSelector(state => ({\r\n      count: state.counter.count,\r\n      user: state.user,\r\n    }));\r\n  */\r\n  return (\r\n    <Dialog\r\n      fullScreen={fullScreen}\r\n      open={open}\r\n      aria-labelledby=\"idModal\"\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n    >\r\n      <DialogTitle id=\"idModal\" onClose={handleClose}>\r\n        {title} {dialog?.name}\r\n      </DialogTitle>\r\n      {alert.type && <Alert severity={alert.type}>{alert.text}</Alert>}\r\n      <DialogContent dividers style={{ overflowY: \"visible\" }}>\r\n        {component}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DialogForm;\r\n","import { findError } from \"../../helpers/control-errors\";\r\nimport { useDeleteBilling } from \"../../hooks/billing/useDeleteBilling\";\r\nimport { Billing } from \"../../interfaces/billing.interface\";\r\nimport BillingForm from \"./billing-form\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { useState } from \"react\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport moment from \"moment\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst BillingList = ({ billing }: { billing: Billing }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const optionsBilling = useDeleteBilling();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Plan\":\r\n        return <BillingForm billing={billing} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const deleteBilling = async (id: string | undefined) => {\r\n    try {\r\n      await optionsBilling.deleteBilling({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar Cliente\"\r\n        onClick={() => deleteBilling(billing.id)}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar plan de facturación\"\r\n        onClick={() => setDialog({ name: \"Plan\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"billing\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {billing.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {billing.day}\r\n        </TableCell>\r\n        <TableCell>{moment(billing.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(billing.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell align=\"right\">\r\n          {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          {loadAccess(PERMIT_TREE, auth, page, showOptionsForDelete)}\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={billing}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, page, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillingList;\r\n","import { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport BillingForm from \"../components/billing/billing-form\";\r\nimport BillingList from \"../components/billing/billing-list\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { Billing } from \"../interfaces/billing.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useGetBilling } from \"../hooks/billing/useGetBilling\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst BillingPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const [billings, setBillings] = useState<Billing[]>([]);\r\n  const { data, loading, error } = useGetBilling();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <BillingForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBillings(data.getBillings);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear plan de facturación\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Plan de facturación`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ marginTop: 10, whiteSpace: \"nowrap\" }}\r\n      >\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nombre</TableCell>\r\n              <TableCell>Dias</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"right\">Opciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {billings.map((billing) => (\r\n              <BillingList key={billing.id} billing={billing} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BillingPage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_CATEGORYS = gql`\r\n  query getCategorys {\r\n    getCategorys {\r\n      id\r\n      name\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetCategorys = () => {\r\n  const { data, error, loading }: any = useQuery(GET_CATEGORYS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_BRANDS = gql`\r\n  query getBrands {\r\n    getBrands {\r\n      id\r\n      name\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetBrands = () => {\r\n  const { data, error, loading } = useQuery(GET_BRANDS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { GET_BRANDS } from \"./useGetBrands\";\r\n\r\ninterface UpdateBrandInput {\r\n  variables: {\r\n    brandInput: Brand;\r\n  };\r\n}\r\n\r\nconst UPDATE_BRAND = gql`\r\n  mutation updateBrand($brandInput: UpdateBrandInput!) {\r\n    updateBrand(brandInput: $brandInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateBrand = () => {\r\n  const [updateBrand, { error, loading }] = useMutation(UPDATE_BRAND, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_BRANDS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateBrand, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { GET_BRANDS } from \"./useGetBrands\";\r\n\r\ninterface CreateBrandInput {\r\n  variables: {\r\n    brandInput: Brand;\r\n  };\r\n}\r\n\r\nconst CREATE_BRAND = gql`\r\n  mutation registerBrand($brandInput: CreateBrandInput!) {\r\n    registerBrand(brandInput: $brandInput) {\r\n      id\r\n      name\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateBrand = () => {\r\n  const [registerBrand, { error, loading }] = useMutation(CREATE_BRAND, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_BRANDS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerBrand, error, loading };\r\n};\r\n","import { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { useUpdateBrand } from \"../../hooks/brand/useUpdateBrand\";\r\nimport { useCreateBrand } from \"../../hooks/brand/useCreateBrand\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  brand?: Brand;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst BrandForm = ({ handleClose, brand }: Options) => {\r\n  const initialValueCreate: Brand = {\r\n    name: \"\",\r\n    category: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Brand = {\r\n    id: brand?.id || \"\",\r\n    name: brand?.name || \"\",\r\n    category: brand?.category?.name || \"\",\r\n  };\r\n\r\n  const [brandForm, setBrandForm] = useState<Brand>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateBrand = useUpdateBrand();\r\n  const optionsCreateBrand = useCreateBrand();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setBrandForm({ ...brandForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setBrandForm({\r\n      ...brandForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (brandForm.id) {\r\n      try {\r\n        await optionsUpdateBrand.updateBrand({\r\n          variables: {\r\n            brandInput: brandForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La marca se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateBrand.registerBrand({\r\n          variables: {\r\n            brandInput: brandForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La marca ha sido registrada correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategorys(data.getCategorys);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel id=\"idCategory\">Categoria</InputLabel>\r\n            <Select\r\n              labelId=\"Categoria\"\r\n              id=\"idCategory\"\r\n              value={brandForm.category}\r\n              onChange={handleSelect}\r\n              label=\"Categoria\"\r\n              name=\"category\"\r\n            >\r\n              {categorys.map((category) => (\r\n                <MenuItem key={category.id} value={category.name}>\r\n                  {category.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Marca\"\r\n            variant=\"outlined\"\r\n            value={brandForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {brandForm.id ? (\r\n            optionsUpdateBrand.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateBrand.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BrandForm;\r\n","import { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useState } from \"react\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport BrandForm from \"./brand-form\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst BrandList = ({ brand }: { brand: Brand }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Marca\":\r\n        return <BrandForm brand={brand} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={brand}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar Marca\"\r\n          onClick={() => setDialog({ name: \"Marca\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {brand.category!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {brand.name}\r\n        </TableCell>\r\n        <TableCell>{moment(brand.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(brand.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default BrandList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport BrandList from \"../components/brand/brand-list\";\r\nimport BrandForm from \"../components/brand/brand-form\";\r\nimport { Brand } from \"../interfaces/brand.interface\";\r\nimport { useGetBrands } from \"../hooks/brand/useGetBrands\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst BrandPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetBrands();\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <BrandForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBrands(data.getBrands);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Marca`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Marca\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ whiteSpace: \"nowrap\", marginTop: 10 }}\r\n      >\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Marca</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {brands.map((brand) => (\r\n              <BrandList key={brand.id} brand={brand} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrandPage;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_CATEGORYS } from \"./useGetCategorys\";\r\n\r\ninterface CreateCategoryInput {\r\n  variables: {\r\n    categoryInput: Category;\r\n  };\r\n}\r\n\r\nconst CREATE_CATEGORY = gql`\r\n  mutation registerCategory($categoryInput: CreateCategoryInput!) {\r\n    registerCategory(categoryInput: $categoryInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateCategory = () => {\r\n  const [registerCategory, { error, loading }] = useMutation(CREATE_CATEGORY, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_CATEGORYS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerCategory, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_CATEGORYS } from \"./useGetCategorys\";\r\n\r\ninterface UpdateCategoryInput {\r\n  variables: {\r\n    categoryInput: Category;\r\n  };\r\n}\r\n\r\nconst UPDATE_CATEGORY = gql`\r\n  mutation updateCategory($categoryInput: UpdateCategoryInput!) {\r\n    updateCategory(categoryInput: $categoryInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateCategory = () => {\r\n  const [updateCategory, { error, loading }] = useMutation(\r\n    UPDATE_CATEGORY\r\n    //   , {\r\n    //   refetchQueries: () => [\r\n    //     {\r\n    //       query: GET_CATEGORYS,\r\n    //     },\r\n    //   ],\r\n    // }\r\n  );\r\n\r\n  return { updateCategory, error, loading };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { useCreateCategory } from \"../../hooks/category/useCreateCategory\";\r\nimport { useUpdateCategory } from \"../../hooks/category/useUpdateCategory\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst CategoryForm = ({ handleClose, category }: any) => {\r\n  const initialValueCreate: Category = {\r\n    name: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Category = {\r\n    id: category?.id || \"\",\r\n    name: category?.name || \"\",\r\n  };\r\n\r\n  const [categoryForm, setCategoryForm] = useState<Category>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateCategory = useUpdateCategory();\r\n  const optionsCreateCategory = useCreateCategory();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setCategoryForm({ ...categoryForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (categoryForm.id) {\r\n      try {\r\n        await optionsUpdateCategory.updateCategory({\r\n          variables: {\r\n            categoryInput: categoryForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La categoria se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateCategory.registerCategory({\r\n          variables: {\r\n            categoryInput: categoryForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La categoria ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Nombre\"\r\n            variant=\"outlined\"\r\n            value={categoryForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {categoryForm.id ? (\r\n            optionsUpdateCategory.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateCategory.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n","import { useState } from \"react\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport CategoryForm from \"./category-form\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst CategoryList = ({ category }: { category: Category }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Categoria\":\r\n        return <CategoryForm category={category} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={category}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar categoria\"\r\n          onClick={() => setDialog({ name: \"Categoria\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {category.name}\r\n        </TableCell>\r\n        <TableCell>{moment(category.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(category.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default CategoryList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport { Category } from \"../interfaces/category.interface\";\r\nimport CategoryForm from \"../components/category/category-form\";\r\nimport CategoryList from \"../components/category/category-list\";\r\nimport { useGetCategorys } from \"../hooks/category/useGetCategorys\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst CategooryPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetCategorys();\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <CategoryForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategorys(data.getCategorys);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Categoria`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Categoria\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ whiteSpace: \"nowrap\", marginTop: 10 }}\r\n      >\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categorys.map((category) => (\r\n              <CategoryList key={category.id} category={category} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategooryPage;\r\n","export const formatMoney = (value: any) =>\r\n  new Intl.NumberFormat(\"de-DE\", {\r\n    style: \"currency\",\r\n    currency: \"PEN\",\r\n  }).format(value);\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_EGRESS = gql`\r\n  query getEgress {\r\n    getEgress {\r\n      id\r\n      category {\r\n        name\r\n      }\r\n      user {\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetEgress = () => {\r\n  const { data, error, loading }: any = useQuery(GET_EGRESS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_EGRESS } from \"./useGetEgress\";\r\n\r\nconst DELETE_EGRESS = gql`\r\n  mutation deleteEgress($id: String!) {\r\n    deleteEgress(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteEgress = () => {\r\n  const [deleteEgress, { error, loading }] = useMutation(DELETE_EGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_EGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteEgress, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_EGRESS } from \"./useGetEgress\";\r\n\r\ninterface UpdateEgressInput {\r\n  variables: {\r\n    egressInput: Category;\r\n  };\r\n}\r\n\r\nconst UPDATE_EGRESS = gql`\r\n  mutation updateEgress($egressInput: UpdateEgressInput!) {\r\n    updateEgress(egressInput: $egressInput) {\r\n      id\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useUpdateEgress = () => {\r\n  const [updateEgress, { error, loading }] = useMutation(UPDATE_EGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_EGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateEgress, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_EGRESS } from \"./useGetEgress\";\r\n\r\ninterface CreateEgressInput {\r\n  variables: {\r\n    egressInput: Category;\r\n  };\r\n}\r\n\r\nconst CREATE_EGRESS = gql`\r\n  mutation registerEgress($egressInput: CreateEgressInput!) {\r\n    registerEgress(egressInput: $egressInput) {\r\n      id\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateEgress = () => {\r\n  const [registerEgress, { error, loading }] = useMutation(CREATE_EGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_EGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerEgress, error, loading };\r\n};\r\n","import { Egress } from \"../../interfaces/egress.interface\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Progress from \"../progress/progress\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { useUpdateEgress } from \"../../hooks/egress/useUpdateEgress\";\r\nimport { useCreateEgress } from \"../../hooks/egress/useCreateEgress\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { AutoCompleteInput } from \"../../interfaces/autocompleteinput.interface\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  egress?: Egress;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialAutoCompleteInput = {\r\n  category: \"\",\r\n};\r\n\r\nconst EgressForm = ({ handleClose, egress }: Options) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const initialValueCreate: Egress = {\r\n    detail: \"\",\r\n    amount: 0,\r\n    units: 0,\r\n    category: \"\",\r\n    user: auth.name,\r\n  };\r\n\r\n  const initialValueUpdate: Egress = {\r\n    id: egress?.id || \"\",\r\n    detail: egress?.detail || \"\",\r\n    amount: egress?.amount || 0,\r\n    units: egress?.units || 0,\r\n    category: egress?.category?.name || \"\",\r\n    observation: egress?.observation || \"\",\r\n    //user: auth.name\r\n  };\r\n\r\n  const [egressForm, setEgressForm] = useState<Egress>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [valueInput, setValueInput] = useState<AutoCompleteInput>(\r\n    initialAutoCompleteInput\r\n  );\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const optionsUpdateEgress = useUpdateEgress();\r\n  const optionsCreateEgress = useCreateEgress();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setEgressForm({\r\n      ...egressForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const dataCategorys = useCallback(() => {\r\n    setCategorys(data?.getCategorys || []);\r\n  }, [data]);\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (egressForm.id) {\r\n      try {\r\n        await optionsUpdateEgress.updateEgress({\r\n          variables: {\r\n            egressInput: {\r\n              ...egressForm,\r\n              units: Number(egressForm.units),\r\n              amount: Number(egressForm.amount),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El egreso se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateEgress.registerEgress({\r\n          variables: {\r\n            egressInput: {\r\n              ...egressForm,\r\n              units: Number(egressForm.units),\r\n              amount: Number(egressForm.amount),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El egreso ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataCategorys();\r\n  }, [dataCategorys]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Autocomplete\r\n            id=\"idCategory\"\r\n            value={egressForm.category}\r\n            onChange={(event, value) => {\r\n              setEgressForm({\r\n                ...egressForm,\r\n                category: value?.name || \"\",\r\n              });\r\n\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            inputValue={\r\n              valueInput.category ? valueInput.category : egressForm.category\r\n            }\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, category: newValue });\r\n            }}\r\n            options={categorys}\r\n            getOptionLabel={(category) => (category.name ? category.name : \"\")}\r\n            getOptionSelected={(option, value) => option.name === value}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"category\"\r\n                label=\"Categoria\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"units\"\r\n            autoComplete=\"off\"\r\n            id=\"idUnits\"\r\n            label=\"Unidades\"\r\n            variant=\"outlined\"\r\n            value={egressForm.units}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"amount\"\r\n            autoComplete=\"off\"\r\n            id=\"idAmount\"\r\n            label=\"Monto\"\r\n            variant=\"outlined\"\r\n            value={egressForm.amount}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            id=\"idTotal\"\r\n            label=\"Total\"\r\n            variant=\"outlined\"\r\n            value={egressForm.units * egressForm.amount}\r\n            InputProps={{\r\n              readOnly: true,\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"detail\"\r\n            autoComplete=\"off\"\r\n            id=\"idDetail\"\r\n            multiline\r\n            rows={3}\r\n            label=\"Detalle\"\r\n            variant=\"outlined\"\r\n            value={egressForm.detail}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"observation\"\r\n            autoComplete=\"off\"\r\n            id=\"idObservation\"\r\n            multiline\r\n            rows={5}\r\n            label=\"Observación\"\r\n            variant=\"outlined\"\r\n            value={egressForm.observation}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {egressForm.id ? (\r\n            optionsUpdateEgress.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateEgress.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EgressForm;\r\n","import { Egress } from \"../../interfaces/egress.interface\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useState } from \"react\";\r\nimport { useDeleteEgress } from \"../../hooks/egress/useDeleteEgress\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport EgressForm from \"./EgressForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst EgressList = ({ egres }: { egres: Egress }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const optionsEgress = useDeleteEgress();\r\n\r\n  const deleteEgress = async (id: string | undefined) => {\r\n    try {\r\n      await optionsEgress.deleteEgress({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Egreso\":\r\n        return <EgressForm egress={egres} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar egreso\"\r\n        onClick={() => setDialog({ name: \"Egreso\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip title=\"Eliminar egreso\" onClick={() => deleteEgress(egres.id)}>\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell\r\n          component=\"th\"\r\n          scope=\"row\"\r\n          style={{\r\n            wordBreak: \"break-all\",\r\n          }}\r\n        >\r\n          {egres.category.name}\r\n        </TableCell>\r\n        <TableCell\r\n          component=\"th\"\r\n          scope=\"row\"\r\n          style={{ wordBreak: \"break-all\" }}\r\n        >\r\n          {egres.detail}\r\n        </TableCell>\r\n        {page === \"RESUMEN-CAJA\" || (\r\n          <>\r\n            <TableCell\r\n              component=\"th\"\r\n              scope=\"row\"\r\n              style={{ wordBreak: \"break-all\" }}\r\n            >\r\n              {egres.observation}\r\n            </TableCell>\r\n\r\n            {/* <TableCell>\r\n              {moment(egres.createdAt).format(\"DD/MM/YYYY\")}\r\n            </TableCell>\r\n            <TableCell>\r\n              {moment(egres.updatedAt).format(\"DD/MM/YYYY\")}\r\n            </TableCell> */}\r\n          </>\r\n        )}\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {egres?.user?.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n          {egres.units}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n          {formatMoney(egres.amount)}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n          {formatMoney(egres.units * egres.amount)}\r\n        </TableCell>\r\n        {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n          \"\"\r\n        ) : (\r\n          <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n            <>\r\n              {loadAccess(PERMIT_TWO, auth, module, showOptionsForEdit)}\r\n              {loadAccess(PERMIT_TREE, auth, module, showOptionsForDelete)}\r\n            </>\r\n          </TableCell>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={egres}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, module, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EgressList;\r\n","import { createContext } from \"react\";\r\n\r\ninterface OptionI {\r\n  ingress: number;\r\n}\r\n\r\nconst initialIngress = {\r\n  ingress: 0,\r\n};\r\n\r\ninterface OptionE {\r\n  egress: number;\r\n}\r\n\r\nconst initialEgress = {\r\n  egress: 0,\r\n};\r\n\r\nconst PagoContext = createContext({\r\n  summaryIngress: initialIngress,\r\n  setSummaryIngress: (value: OptionI) => {},\r\n  summaryEgress: initialEgress,\r\n  setSummaryEgress: (value: OptionE) => {},\r\n});\r\n\r\nconst PagoProvider = PagoContext.Provider;\r\nconst PagoConsumer = PagoContext.Consumer;\r\n\r\nexport { PagoProvider, PagoConsumer, PagoContext };\r\n","import Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Egress } from \"../interfaces/egress.interface\";\r\nimport EgressList from \"../components/egress/EgressList\";\r\nimport { useGetEgress } from \"../hooks/egress/useGetEgress\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EgressForm from \"../components/egress/EgressForm\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { formatMoney } from \"../lib/currency/money\";\r\nimport { PagoContext } from \"../context/caja-context\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\ninterface Option {\r\n  checkMoney?: any;\r\n  resultIngress?: any;\r\n  resultEgress?: any;\r\n}\r\n\r\nconst EgressPage = ({ checkMoney, resultEgress }: Option) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { page, module } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const [egress, setEgress] = useState<Egress[]>([]);\r\n  const { data, loading, error } = useGetEgress();\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const { summaryEgress, setSummaryEgress } = useContext(PagoContext);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const calTotalHoy = (items: Egress[]) => {\r\n    return items\r\n      .map((item) => item.units * item.amount)\r\n      .reduce((sum, i) => sum + i, 0);\r\n  };\r\n\r\n  const totalHoy = calTotalHoy(egress);\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <EgressForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (checkMoney === undefined) {\r\n      if (data) {\r\n        setEgress(data.getEgress);\r\n      }\r\n    } else {\r\n      setEgress(resultEgress);\r\n    }\r\n    setSummaryEgress({ ...summaryEgress, egress: totalHoy });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, setSummaryEgress, totalHoy]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showOptionsToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear Egreso\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Egreso`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\"\r\n        ? \"\"\r\n        : loadAccess(PERMIT_ONE, auth, module, showOptionsToCreate)}\r\n\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{\r\n          whiteSpace: \"nowrap\",\r\n          marginTop: page === \"CONSULTAR-CAJA\" ? 20 : 0,\r\n        }}\r\n      >\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ background: \"#dc3545\" }}>\r\n              <TableCell\r\n                style={{ color: \"#fff\" }}\r\n                align=\"center\"\r\n                colSpan={page === \"RESUMEN-CAJA\" ? 4 : 5}\r\n              >\r\n                {page === \"CONSULTAR-CAJA\" ? `Egreso Total` : `Ingreso de hoy`}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ color: \"#fff\" }}\r\n                align=\"center\"\r\n                colSpan={page === \"RESUMEN-CAJA\" ? 2 : 3}\r\n              >\r\n                Costo\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Detalle</TableCell>\r\n              {page === \"RESUMEN-CAJA\" || (\r\n                <>\r\n                  <TableCell>Observación</TableCell>\r\n                  {/* <TableCell>Fecha creada</TableCell>\r\n                  <TableCell>Fecha modificada</TableCell> */}\r\n                </>\r\n              )}\r\n              <TableCell>Usuario</TableCell>\r\n              <TableCell align=\"center\">Unidades</TableCell>\r\n              <TableCell align=\"right\">Monto</TableCell>\r\n              <TableCell align=\"right\">Monto total</TableCell>\r\n              {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n                \"\"\r\n              ) : (\r\n                <TableCell align=\"right\">Opciones</TableCell>\r\n              )}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {egress.map((egres) => (\r\n              <EgressList key={egres.id} egres={egres} />\r\n            ))}\r\n\r\n            <TableRow>\r\n              <TableCell\r\n                colSpan={\r\n                  page === \"RESUMEN-CAJA\"\r\n                    ? 4\r\n                    : page === \"CONSULTAR-CAJA\"\r\n                    ? 5\r\n                    : 5\r\n                }\r\n              />\r\n              <TableCell>\r\n                <strong>Total</strong>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <strong style={{ color: \"red\" }}>\r\n                  {formatMoney(totalHoy)}\r\n                </strong>\r\n              </TableCell>\r\n              {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n                \"\"\r\n              ) : (\r\n                <TableCell colSpan={3} />\r\n              )}\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EgressPage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_INGRESS = gql`\r\n  query getIngress {\r\n    getIngress {\r\n      id\r\n      category {\r\n        name\r\n      }\r\n      user {\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetIngress = () => {\r\n  const { data, error, loading }: any = useQuery(GET_INGRESS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_INGRESS } from \"./useGetIngress\";\r\n\r\nconst DELETE_INGRESS = gql`\r\n  mutation deleteIngress($id: String!) {\r\n    deleteIngress(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteIngress = () => {\r\n  const [deleteIngress, { error, loading }] = useMutation(DELETE_INGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_INGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteIngress, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_INGRESS } from \"./useGetIngress\";\r\n\r\ninterface UpdateIngressInput {\r\n  variables: {\r\n    ingressInput: Category;\r\n  };\r\n}\r\n\r\nconst UPDATE_INGRESS = gql`\r\n  mutation updateIngress($ingressInput: UpdateIngressInput!) {\r\n    updateIngress(ingressInput: $ingressInput) {\r\n      id\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useUpdateIngress = () => {\r\n  const [updateIngress, { error, loading }] = useMutation(UPDATE_INGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_INGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateIngress, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_INGRESS } from \"./useGetIngress\";\r\n\r\ninterface CreateIngressInput {\r\n  variables: {\r\n    ingressInput: Category;\r\n  };\r\n}\r\n\r\nconst CREATE_INGRESS = gql`\r\n  mutation registerIngress($ingressInput: CreateIngressInput!) {\r\n    registerIngress(ingressInput: $ingressInput) {\r\n      id\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateIngress = () => {\r\n  const [registerIngress, { error, loading }] = useMutation(CREATE_INGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_INGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerIngress, error, loading };\r\n};\r\n","import { Ingress } from \"../../interfaces/ingress.interface\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Progress from \"../progress/progress\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { useUpdateIngress } from \"../../hooks/ingress/useUpdateIngress\";\r\nimport { useCreateIngress } from \"../../hooks/ingress/useCreateIngress\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { AutoCompleteInput } from \"../../interfaces/autocompleteinput.interface\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  ingres?: Ingress;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialAutoCompleteInput = {\r\n  category: \"\",\r\n};\r\n\r\nconst IngressForm = ({ handleClose, ingres }: Options) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const initialValueCreate: Ingress = {\r\n    detail: \"\",\r\n    amount: 0,\r\n    units: 0,\r\n    category: \"\",\r\n    user: auth.name,\r\n  };\r\n\r\n  const initialValueUpdate: Ingress = {\r\n    id: ingres?.id || \"\",\r\n    detail: ingres?.detail || \"\",\r\n    amount: ingres?.amount || 0,\r\n    units: ingres?.units || 0,\r\n    category: ingres?.category?.name || \"\",\r\n    observation: ingres?.observation || \"\",\r\n    //user:auth.name\r\n  };\r\n\r\n  const [ingressForm, setIngressForm] = useState<Ingress>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [valueInput, setValueInput] = useState<AutoCompleteInput>(\r\n    initialAutoCompleteInput\r\n  );\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const optionsUpdateIngress = useUpdateIngress();\r\n  const optionsCreateIngress = useCreateIngress();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setIngressForm({\r\n      ...ingressForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const dataCategorys = useCallback(() => {\r\n    setCategorys(data?.getCategorys || []);\r\n  }, [data]);\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (ingressForm.id) {\r\n      try {\r\n        await optionsUpdateIngress.updateIngress({\r\n          variables: {\r\n            ingressInput: {\r\n              ...ingressForm,\r\n              units: Number(ingressForm.units),\r\n              amount: Number(ingressForm.amount),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El ingreso se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateIngress.registerIngress({\r\n          variables: {\r\n            ingressInput: {\r\n              ...ingressForm,\r\n              units: Number(ingressForm.units),\r\n              amount: Number(ingressForm.amount),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El ingreso ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataCategorys();\r\n  }, [dataCategorys]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Autocomplete\r\n            id=\"idCategory\"\r\n            value={ingressForm.category}\r\n            onChange={(event, value) => {\r\n              setIngressForm({\r\n                ...ingressForm,\r\n                category: value?.name || \"\",\r\n              });\r\n\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            inputValue={\r\n              valueInput.category ? valueInput.category : ingressForm.category\r\n            }\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, category: newValue });\r\n            }}\r\n            options={categorys}\r\n            getOptionLabel={(category) => (category.name ? category.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"category\"\r\n                label=\"Categoria\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"units\"\r\n            autoComplete=\"off\"\r\n            id=\"idUnits\"\r\n            label=\"Unidades\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.units}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"amount\"\r\n            autoComplete=\"off\"\r\n            id=\"idAmount\"\r\n            label=\"Monto\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.amount}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            id=\"idTotal\"\r\n            label=\"Total\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.units * ingressForm.amount}\r\n            InputProps={{\r\n              readOnly: true,\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"detail\"\r\n            autoComplete=\"off\"\r\n            id=\"idDetail\"\r\n            multiline\r\n            rows={3}\r\n            label=\"Detalle\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.detail}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"observation\"\r\n            autoComplete=\"off\"\r\n            id=\"idObservation\"\r\n            multiline\r\n            rows={5}\r\n            label=\"Observación\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.observation}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {ingressForm.id ? (\r\n            optionsUpdateIngress.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateIngress.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default IngressForm;\r\n","import moment from \"moment\";\r\nimport { Ingress } from \"../../interfaces/ingress.interface\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useState } from \"react\";\r\nimport { useDeleteIngress } from \"../../hooks/ingress/useDeleteIngress\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport IngressForm from \"./IngressForm\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  row: {\r\n    width: 700,\r\n    backgroundColor: \"grey\",\r\n  },\r\n  cell_long: {\r\n    fontSize: \"10px\",\r\n    width: 150,\r\n    minWidth: 1,\r\n    backgroundColor: \"#ee82ee\",\r\n  },\r\n  cell_default: {\r\n    fontSize: \"10px\",\r\n    width: 200,\r\n    minWidth: 1,\r\n    backgroundColor: \"#ee82ee\",\r\n  },\r\n  cell_short: {\r\n    fontSize: \"10px\",\r\n    width: 80,\r\n    backgroundColor: \"yellow\",\r\n  },\r\n}));\r\n\r\nconst IngressList = ({ ingres }: { ingres: Ingress }) => {\r\n  const classes = useStyles();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const optionsIngress = useDeleteIngress();\r\n\r\n  const deleteIngress = async (id: string | undefined) => {\r\n    try {\r\n      await optionsIngress.deleteIngress({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Ingreso\":\r\n        return <IngressForm ingres={ingres} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar ingreso\"\r\n        onClick={() => setDialog({ name: \"Ingreso\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar ingreso\"\r\n        onClick={() => deleteIngress(ingres.id)}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell\r\n          component=\"th\"\r\n          scope=\"row\"\r\n          style={{\r\n            wordBreak: \"break-all\",\r\n          }}\r\n        >\r\n          {ingres.category.name}\r\n        </TableCell>\r\n        <TableCell\r\n          component=\"th\"\r\n          scope=\"row\"\r\n          style={{ wordBreak: \"break-all\" }}\r\n        >\r\n          {ingres.detail}\r\n        </TableCell>\r\n        {page === \"RESUMEN-CAJA\" || (\r\n          <>\r\n            <TableCell\r\n              component=\"th\"\r\n              scope=\"row\"\r\n              style={{ wordBreak: \"break-all\" }}\r\n            >\r\n              {ingres.observation}\r\n            </TableCell>\r\n\r\n            {/* <TableCell>\r\n              {moment(ingres.createdAt).format(\"DD/MM/YYYY\")}\r\n            </TableCell>\r\n            <TableCell>\r\n              {moment(ingres.updatedAt).format(\"DD/MM/YYYY\")}\r\n            </TableCell> */}\r\n          </>\r\n        )}\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {ingres?.user?.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n          {ingres.units}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n          {formatMoney(ingres.amount)}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n          {formatMoney(ingres.units * ingres.amount)}\r\n        </TableCell>\r\n\r\n        {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n          \"\"\r\n        ) : (\r\n          <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n            <>\r\n              {loadAccess(PERMIT_TWO, auth, module, showOptionsForEdit)}\r\n              {loadAccess(PERMIT_TREE, auth, module, showOptionsForDelete)}\r\n            </>\r\n          </TableCell>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={ingres}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, module, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngressList;\r\n","import Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { Ingress } from \"../interfaces/ingress.interface\";\r\nimport IngressList from \"../components/ingress/IngresList\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { useGetIngress } from \"../hooks/ingress/useGetIngress\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport IngressForm from \"../components/ingress/IngressForm\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport { formatMoney } from \"../lib/currency/money\";\r\nimport { PagoContext } from \"../context/caja-context\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\ninterface Option {\r\n  checkMoney?: any;\r\n  resultIngress?: any;\r\n  resultEgress?: any;\r\n}\r\n\r\nconst IngressPage = ({ checkMoney, resultIngress }: Option) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const [ingress, setIngress] = useState<Ingress[]>([]);\r\n  const { data, loading, error } = useGetIngress();\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const { summaryIngress, setSummaryIngress } = useContext(PagoContext);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <IngressForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const calTotalHoy = (items: Ingress[]) => {\r\n    return items\r\n      .map((item) => item.units * item.amount)\r\n      .reduce((sum, i) => sum + i, 0);\r\n  };\r\n\r\n  const totalHoy = calTotalHoy(ingress);\r\n\r\n  useEffect(() => {\r\n    if (checkMoney === undefined) {\r\n      if (data) {\r\n        setIngress(data.getIngress);\r\n      }\r\n    } else {\r\n      setIngress(resultIngress);\r\n    }\r\n\r\n    setSummaryIngress({ ...summaryIngress, ingress: totalHoy });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, setSummaryIngress, totalHoy]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showOptionsToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear Ingreso\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Ingreso`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n\r\n      {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\"\r\n        ? \"\"\r\n        : loadAccess(PERMIT_ONE, auth, module, showOptionsToCreate)}\r\n\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{\r\n          whiteSpace: \"nowrap\",\r\n          marginTop: page === \"CONSULTAR-CAJA\" ? 20 : 0,\r\n        }}\r\n      >\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ background: \"#28a745\" }}>\r\n              <TableCell\r\n                style={{ color: \"#fff\" }}\r\n                align=\"center\"\r\n                colSpan={page === \"RESUMEN-CAJA\" ? 4 : 5}\r\n              >\r\n                {page === \"CONSULTAR-CAJA\" ? `Ingreso Total` : `Ingreso de hoy`}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ color: \"#fff\" }}\r\n                align=\"center\"\r\n                colSpan={page === \"RESUMEN-CAJA\" ? 2 : 4}\r\n              >\r\n                Costo\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Detalle</TableCell>\r\n              {page === \"RESUMEN-CAJA\" || (\r\n                <>\r\n                  <TableCell>Observación</TableCell>\r\n                  {/* <TableCell>Fecha creada</TableCell>\r\n                  <TableCell>Fecha modificada</TableCell> */}\r\n                </>\r\n              )}\r\n              <TableCell>Usuario</TableCell>\r\n              <TableCell align=\"center\">Unidades</TableCell>\r\n              <TableCell align=\"right\">Monto</TableCell>\r\n              <TableCell align=\"right\">Monto total</TableCell>\r\n              {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n                \"\"\r\n              ) : (\r\n                <TableCell align=\"right\">Opciones</TableCell>\r\n              )}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {ingress.map((ingres) => (\r\n              <IngressList key={ingres.id} ingres={ingres} />\r\n            ))}\r\n            <TableRow>\r\n              <TableCell\r\n                colSpan={\r\n                  page === \"RESUMEN-CAJA\"\r\n                    ? 4\r\n                    : page === \"CONSULTAR-CAJA\"\r\n                    ? 5\r\n                    : 5\r\n                }\r\n              />\r\n              <TableCell>\r\n                <strong>Total</strong>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <strong style={{ color: \"green\" }}>\r\n                  {formatMoney(totalHoy)}\r\n                </strong>\r\n              </TableCell>\r\n              {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n                \"\"\r\n              ) : (\r\n                <TableCell colSpan={3} />\r\n              )}\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngressPage;\r\n","import EgressPage from \"./egress.page\";\r\nimport IngressPage from \"./ingress.page\";\r\nimport \"./css/summary-box.css\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { PagoProvider } from \"../context/caja-context\";\r\nimport { useState } from \"react\";\r\nimport { formatMoney } from \"../lib/currency/money\";\r\n\r\ninterface Option {\r\n  checkMoney?: any;\r\n  resultIngress?: any;\r\n  resultEgress?: any;\r\n}\r\n\r\nconst SummaryBoxPage = ({\r\n  checkMoney,\r\n  resultIngress,\r\n  resultEgress,\r\n}: Option) => {\r\n  const [summaryIngress, setSummaryIngress] = useState({\r\n    ingress: 0,\r\n  });\r\n\r\n  const [summaryEgress, setSummaryEgress] = useState({\r\n    egress: 0,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <PagoProvider\r\n        value={{\r\n          summaryIngress,\r\n          setSummaryIngress,\r\n          summaryEgress,\r\n          setSummaryEgress,\r\n        }}\r\n      >\r\n        <div className=\"content-tables-i-e\">\r\n          <div className=\"card-table\" style={{ marginRight: \"4%\" }}>\r\n            <IngressPage\r\n              checkMoney={checkMoney}\r\n              resultIngress={resultIngress}\r\n              resultEgress={resultEgress}\r\n            />\r\n          </div>\r\n          <div className=\"card-table\">\r\n            <EgressPage\r\n              checkMoney={checkMoney}\r\n              resultIngress={resultIngress}\r\n              resultEgress={resultEgress}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: 20 }}>\r\n          <TableContainer component={Paper}>\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  {/* <TableCell colSpan={page === \"RESUMEN-CAJA\" ? 3 : 6} /> */}\r\n                  <TableCell>\r\n                    <strong>Resumen total</strong>\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"right\">\r\n                    <strong\r\n                      style={\r\n                        summaryIngress.ingress - summaryEgress.egress < 0\r\n                          ? { color: \"red\" }\r\n                          : { color: \"green\" }\r\n                      }\r\n                    >\r\n                      {summaryIngress.ingress - summaryEgress.egress < 0\r\n                        ? formatMoney(\r\n                            summaryIngress.ingress - summaryEgress.egress\r\n                          )\r\n                        : `+${formatMoney(\r\n                            summaryIngress.ingress - summaryEgress.egress\r\n                          )}`}\r\n                    </strong>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </PagoProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SummaryBoxPage;\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_DATE = gql`\r\n  query getEgressByDates($start: String!, $end: String!) {\r\n    getEgressByDates(start: $start, end: $end) {\r\n      id\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        name\r\n      }\r\n      user {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetEgressByDate = () => {\r\n  const [getEgressByDates, { error, loading, data }] = useLazyQuery(GET_DATE);\r\n\r\n  return { getEgressByDates, data, error, loading };\r\n};\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_DATE = gql`\r\n  query getIngressByDates($start: String!, $end: String!) {\r\n    getIngressByDates(start: $start, end: $end) {\r\n      id\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        name\r\n      }\r\n      user {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetIngressByDate = () => {\r\n  const [getIngressByDates, { error, loading, data }] = useLazyQuery(GET_DATE);\r\n\r\n  return { getIngressByDates, data, error, loading };\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RedditTextField from \"../components/textfield/reddit\";\r\nimport moment from \"moment\";\r\nimport { InputChange } from \"../lib/types\";\r\nimport { CheckMoney } from \"../interfaces/check-money.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport SummaryBoxPage from \"./summary-box.page\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_FOUR } from \"../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { useGetEgressByDate } from \"../hooks/summary-box/useGetEgerssByDates\";\r\nimport { useGetIngressByDate } from \"../hooks/summary-box/useGetIngressByDates\";\r\nimport { Ingress } from \"../interfaces/ingress.interface\";\r\nimport { Egress } from \"../interfaces/egress.interface\";\r\n\r\nconst CheckMoneyPage = () => {\r\n  const now = moment().utc().local().format(\"YYYY-MM-DD\");\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n\r\n  const optionsIngress = useGetIngressByDate();\r\n  const optionsEgress = useGetEgressByDate();\r\n\r\n  const initialState: CheckMoney = {\r\n    dateStart: now,\r\n    dateEnd: now,\r\n  };\r\n\r\n  const [checkMoney, setCheckMoney] = useState<CheckMoney>(initialState);\r\n  const [resultIngress, setResultIngress] = useState<Ingress[]>([]);\r\n  const [resultEgress, setResultEgress] = useState<Egress[]>([]);\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setCheckMoney({\r\n      ...checkMoney,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const getIngress = async (start: string | Date, end: string | Date) => {\r\n    try {\r\n      await optionsIngress.getIngressByDates({\r\n        variables: {\r\n          start: start,\r\n          end: end,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getEgress = async (start: string | Date, end: string | Date) => {\r\n    try {\r\n      await optionsEgress.getEgressByDates({\r\n        variables: {\r\n          start: start,\r\n          end: end,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionsIngress.data) {\r\n      setResultIngress(optionsIngress?.data?.getIngressByDates || []);\r\n    }\r\n    if (optionsEgress.data) {\r\n      setResultEgress(optionsEgress?.data?.getEgressByDates || []);\r\n    }\r\n  }, [optionsIngress.data, optionsEgress.data]);\r\n\r\n  const showData = () => (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={3}>\r\n          <RedditTextField\r\n            fullWidth\r\n            type=\"date\"\r\n            onChange={handleInput}\r\n            name=\"dateStart\"\r\n            autoComplete=\"off\"\r\n            id=\"idStart\"\r\n            label=\"Desde\"\r\n            variant=\"filled\"\r\n            value={checkMoney.dateStart}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <RedditTextField\r\n            fullWidth\r\n            type=\"date\"\r\n            onChange={handleInput}\r\n            name=\"dateEnd\"\r\n            autoComplete=\"off\"\r\n            id=\"idEnd\"\r\n            label=\"Hasta\"\r\n            variant=\"filled\"\r\n            value={checkMoney.dateEnd}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Button\r\n            onClick={() =>\r\n              getIngress(checkMoney.dateStart, checkMoney.dateEnd) &&\r\n              getEgress(checkMoney.dateStart, checkMoney.dateEnd)\r\n            }\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n          >\r\n            Consultar\r\n          </Button>\r\n        </Grid>\r\n        {/* {optionsIngress!.data &&\r\n          alert(optionsIngress!.data.getIngressByDates[0].detail)} */}\r\n      </Grid>\r\n      <SummaryBoxPage\r\n        checkMoney={checkMoney}\r\n        resultIngress={resultIngress}\r\n        resultEgress={resultEgress}\r\n      />\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, module, showData)}</>;\r\n};\r\n\r\nexport default CheckMoneyPage;\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_BRANDS_BY_CATEGORY = gql`\r\n  query getBrandsByCategory($category: String!) {\r\n    getBrandsByCategory(category: $category) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetBrandsByCategory = (category: string) => {\r\n  const { error, loading, data } = useQuery(GET_BRANDS_BY_CATEGORY, {\r\n    variables: { category },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst GET_MODELS_BY_BRAND = gql`\r\n  query getModelsByBrand($brand: String!) {\r\n    getModelsByBrand(brand: $brand) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetModelsByBrand = (brand: string) => {\r\n  const { error, loading, data } = useQuery(GET_MODELS_BY_BRAND, {\r\n    variables: { brand },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst GET_PRODUCTS_BY_CMM = gql`\r\n  query getProductsByCategoryBrandModel(\r\n    $category: String!\r\n    $brand: String!\r\n    $model: String!\r\n  ) {\r\n    getProductsByCategoryBrandModel(\r\n      category: $category\r\n      brand: $brand\r\n      model: $model\r\n    ) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetProductsCMM = (\r\n  category: string,\r\n  brand: string,\r\n  model: string\r\n) => {\r\n  const { error, loading, data } = useQuery(GET_PRODUCTS_BY_CMM, {\r\n    variables: {\r\n      category: category,\r\n      brand: brand,\r\n      model: model,\r\n    },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_PRODUCTS_BY_NAME = gql`\r\n  query getProductByName($product: String!) {\r\n    getProductByName(product: $product) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetProductByName = () => {\r\n  const [getProductByName, { error, loading, data }] =\r\n    useLazyQuery(GET_PRODUCTS_BY_NAME);\r\n\r\n  return { getProductByName, data, error, loading };\r\n};\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_SERVICES_BY_CATEGORY = gql`\r\n  query getServicesByCategory($category: String!) {\r\n    getServicesByCategory(category: $category) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetServicesByCategory = (category: string) => {\r\n  const { error, loading, data } = useQuery(GET_SERVICES_BY_CATEGORY, {\r\n    variables: { category },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_SERVICE_BY_NAME = gql`\r\n  query getServiceByName($service: String!) {\r\n    getServiceByName(service: $service) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetServiceByName = () => {\r\n  const [getServiceByName, { error, loading, data }] =\r\n    useLazyQuery(GET_SERVICE_BY_NAME);\r\n\r\n  return { getServiceByName, data, error, loading };\r\n};\r\n","/* eslint-disable no-use-before-define */\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RedditTextField from \"../components/textfield/reddit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_FOUR } from \"../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { CheckProduct } from \"../interfaces/check-product.interface\";\r\nimport { InputChange } from \"../lib/types\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { AutoCompleteInput } from \"../interfaces/autocompleteinput.interface\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Model } from \"../interfaces/model.interface\";\r\nimport { useGetCategorys } from \"../hooks/category/useGetCategorys\";\r\nimport { useGetBrandsByCategory } from \"../hooks/brand/useBrandsByCategory\";\r\nimport { useGetModelsByBrand } from \"../hooks/model/useGetModelsByBrand\";\r\nimport { Category } from \"../interfaces/category.interface\";\r\nimport { Brand } from \"../interfaces/brand.interface\";\r\nimport { useGetProductsCMM } from \"../hooks/product/useGetProductByCMM\";\r\nimport { Product } from \"../interfaces/product.interface\";\r\nimport { useGetProductByName } from \"../hooks/product/useProductByName\";\r\nimport Progress from \"../components/progress/progress\";\r\nimport { formatMoney } from \"../lib/currency/money\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Service } from \"../interfaces/service.interface\";\r\nimport { useGetServicesByCategory } from \"../hooks/service/useGetServicesByCategory\";\r\nimport { useGetServiceByName } from \"../hooks/service/useServiceByName\";\r\n\r\nconst initialAutoCompleteInput = {\r\n  category: \"\",\r\n  brand: \"\",\r\n  model: \"\",\r\n  product: \"\",\r\n  service: \"\",\r\n};\r\n\r\nconst initialState: CheckProduct = {\r\n  category: \"\",\r\n  brand: \"\",\r\n  model: \"\",\r\n  product: \"\",\r\n  service: \"\",\r\n};\r\n\r\nconst intialValue = {\r\n  product: true,\r\n  service: false,\r\n};\r\n\r\nconst CheckProducts = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n\r\n  const [checkProduct, setCheckProduct] = useState<CheckProduct>(initialState);\r\n  const [valueInput, setValueInput] = useState<AutoCompleteInput>(\r\n    initialAutoCompleteInput\r\n  );\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n  const [models, setModels] = useState<Model[]>([]);\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [services, setServices] = useState<Service[]>([]);\r\n  const [isActiveRadio, setActiveRadio] = useState(intialValue);\r\n  const { data } = useGetCategorys();\r\n  const optionsGetBrandsByCategory = useGetBrandsByCategory(\r\n    checkProduct.category || \"\"\r\n  );\r\n  const optionsGetServiceByCategory = useGetServicesByCategory(\r\n    checkProduct.category || \"\"\r\n  );\r\n  const optionsGetModelsByBrand = useGetModelsByBrand(checkProduct.brand || \"\");\r\n  const optionsGetProductsCMM = useGetProductsCMM(\r\n    checkProduct.category || \"\",\r\n    checkProduct.brand || \"\",\r\n    checkProduct.model || \"\"\r\n  );\r\n\r\n  const optionGetProduct = useGetProductByName();\r\n  const optionGetService = useGetServiceByName();\r\n\r\n  const dataCategorys = useCallback(() => {\r\n    setCategorys(data?.getCategorys || []);\r\n  }, [data]);\r\n\r\n  const changeBrandByCategory = useCallback(() => {\r\n    setBrands(optionsGetBrandsByCategory?.data?.getBrandsByCategory || []);\r\n  }, [optionsGetBrandsByCategory]);\r\n\r\n  const changeServiceByCategory = useCallback(() => {\r\n    setServices(optionsGetServiceByCategory?.data?.getServicesByCategory || []);\r\n  }, [optionsGetServiceByCategory]);\r\n\r\n  const changeModelByBrand = useCallback(() => {\r\n    setModels(optionsGetModelsByBrand?.data?.getModelsByBrand || []);\r\n  }, [optionsGetModelsByBrand]);\r\n\r\n  const changeProductCMM = useCallback(() => {\r\n    setProducts(\r\n      optionsGetProductsCMM?.data?.getProductsByCategoryBrandModel || []\r\n    );\r\n  }, [optionsGetProductsCMM]);\r\n\r\n  const getProduct = async (product: string | undefined) => {\r\n    try {\r\n      await optionGetProduct.getProductByName({\r\n        variables: {\r\n          product: product,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getService = async (service: string | undefined) => {\r\n    try {\r\n      await optionGetService.getServiceByName({\r\n        variables: {\r\n          service: service,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChangeRadio = (e: any) => {\r\n    if (e.target.name === \"product\") {\r\n      setActiveRadio({\r\n        product: isActiveRadio.service,\r\n        service: !isActiveRadio.service,\r\n      });\r\n    } else {\r\n      setActiveRadio({\r\n        product: !isActiveRadio.product,\r\n        service: isActiveRadio.product,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataCategorys();\r\n    changeBrandByCategory();\r\n    changeModelByBrand();\r\n    changeProductCMM();\r\n    changeServiceByCategory();\r\n  }, [\r\n    dataCategorys,\r\n    changeBrandByCategory,\r\n    changeModelByBrand,\r\n    changeProductCMM,\r\n    changeServiceByCategory,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          borderRadius: 6,\r\n          border: \"1px solid #e2e2e1\",\r\n        }}\r\n      >\r\n        <div style={{ margin: \"20px 20px 0px 20px\" }}>\r\n          <RadioGroup row aria-label=\"position\" onChange={handleChangeRadio}>\r\n            <FormControlLabel\r\n              value=\"product\"\r\n              checked={isActiveRadio.product}\r\n              control={<Radio color=\"primary\" name=\"product\" />}\r\n              label=\"Producto\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"service\"\r\n              checked={isActiveRadio.service}\r\n              control={<Radio color=\"primary\" name=\"service\" />}\r\n              label=\"Servicio\"\r\n            />\r\n          </RadioGroup>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            padding: 20,\r\n          }}\r\n        >\r\n          <div style={{ width: \"50%\" }}>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <Grid item xs={12}>\r\n                <Autocomplete\r\n                  id=\"idCategory\"\r\n                  onChange={(event, value) => {\r\n                    setCheckProduct({\r\n                      ...checkProduct,\r\n                      category: value?.name || \"\",\r\n                      brand: \"\",\r\n                      model: \"\",\r\n                      product: \"\",\r\n                    });\r\n                    setValueInput({\r\n                      ...valueInput,\r\n                      brand: \"\",\r\n                      model: \"\",\r\n                    });\r\n                  }}\r\n                  onInputChange={(e, newValue) => {\r\n                    setValueInput({ ...valueInput, category: newValue });\r\n                  }}\r\n                  options={categorys}\r\n                  getOptionLabel={(category) => category.name}\r\n                  getOptionSelected={(option, value) =>\r\n                    option.name === value.name\r\n                  }\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      name=\"category\"\r\n                      label=\"Categoria\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              {isActiveRadio.product ? (\r\n                <>\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"idBrand\"\r\n                      onChange={(event, value) => {\r\n                        setCheckProduct({\r\n                          ...checkProduct,\r\n                          brand: value?.name || \"\",\r\n                          model: \"\",\r\n                          product: \"\",\r\n                        });\r\n                        setValueInput({\r\n                          ...valueInput,\r\n                          model: \"\",\r\n                          product: \"\",\r\n                        });\r\n                      }}\r\n                      onInputChange={(e, newValue) => {\r\n                        setValueInput({ ...valueInput, brand: newValue });\r\n                      }}\r\n                      options={brands}\r\n                      getOptionLabel={(brand) => brand.name}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.name === value.name\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          name=\"brand\"\r\n                          label=\"Marca\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"idModel\"\r\n                      onChange={(event, value) => {\r\n                        setCheckProduct({\r\n                          ...checkProduct,\r\n                          model: value?.name || \"\",\r\n                          product: \"\",\r\n                        });\r\n                        setValueInput({\r\n                          ...valueInput,\r\n                          product: \"\",\r\n                        });\r\n                      }}\r\n                      onInputChange={(e, newValue) => {\r\n                        setValueInput({ ...valueInput, model: newValue });\r\n                      }}\r\n                      options={models}\r\n                      getOptionLabel={(model) => model.name}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.name === value.name\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          name=\"model\"\r\n                          label=\"Modelo\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"idProduct\"\r\n                      onChange={(event, value) => {\r\n                        setCheckProduct({\r\n                          ...checkProduct,\r\n                          product: value?.name || \"\",\r\n                        });\r\n                      }}\r\n                      onInputChange={(e, newValue) => {\r\n                        setValueInput({ ...valueInput, product: newValue });\r\n                      }}\r\n                      options={products}\r\n                      getOptionLabel={(product) => product.name}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.name === value.name\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          name=\"product\"\r\n                          label=\"Productos\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </>\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  <Autocomplete\r\n                    id=\"idService\"\r\n                    onChange={(event, value) => {\r\n                      setCheckProduct({\r\n                        ...checkProduct,\r\n                        service: value?.name || \"\",\r\n                      });\r\n                    }}\r\n                    onInputChange={(e, newValue) => {\r\n                      setValueInput({ ...valueInput, service: newValue });\r\n                    }}\r\n                    options={services}\r\n                    getOptionLabel={(service) => service.name}\r\n                    getOptionSelected={(option, value) =>\r\n                      option.name === value.name\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        name=\"service\"\r\n                        label=\"Servicios\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {isActiveRadio.product ? (\r\n                <Grid item xs={12}>\r\n                  {optionGetProduct.loading ? (\r\n                    <Progress />\r\n                  ) : (\r\n                    <Button\r\n                      fullWidth\r\n                      type=\"button\"\r\n                      onClick={() => getProduct(valueInput.product)}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Consultar\r\n                    </Button>\r\n                  )}\r\n                </Grid>\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  {optionGetService.loading ? (\r\n                    <Progress />\r\n                  ) : (\r\n                    <Button\r\n                      fullWidth\r\n                      type=\"button\"\r\n                      onClick={() => getService(valueInput.service)}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Consultar\r\n                    </Button>\r\n                  )}\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              padding: \"0px 0px 0px 20px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"80%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  height: \"10%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  background: optionGetProduct!.data\r\n                    ? \"yellow\"\r\n                    : optionGetService!.data\r\n                    ? \"yellow\"\r\n                    : \"#fff\",\r\n                }}\r\n              >\r\n                <strong>\r\n                  {isActiveRadio.product\r\n                    ? optionGetProduct!.data &&\r\n                      `Descripción del producto ${\r\n                        optionGetProduct!.data.getProductByName.name\r\n                      }`\r\n                    : optionGetService!.data &&\r\n                      `Descripción del servicio ${\r\n                        optionGetService!.data.getServiceByName.name\r\n                      }`}\r\n                </strong>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  height: \"90%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  wordBreak: \"break-all\",\r\n                  fontSize: \"15px\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                {isActiveRadio.product\r\n                  ? optionGetProduct!.data &&\r\n                    optionGetProduct!.data.getProductByName.description\r\n                  : optionGetService!.data &&\r\n                    optionGetService!.data.getServiceByName.description}\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: \"20%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label style={{ fontSize: 75 }}>\r\n                {isActiveRadio.product\r\n                  ? optionGetProduct!.data &&\r\n                    formatMoney(optionGetProduct!.data.getProductByName.price)\r\n                  : optionGetService!.data &&\r\n                    formatMoney(optionGetService!.data.getServiceByName.price)}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckProducts;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_CUSTOMERS = gql`\r\n  query getCustomer {\r\n    getCustomer {\r\n      id\r\n      name\r\n      lastName\r\n      document\r\n      numDocument\r\n      cellphone_1\r\n      cellphone_2\r\n      direction\r\n      username\r\n      password\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetCustomers = () => {\r\n  const { data, error, loading } = useQuery(GET_CUSTOMERS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Customer } from \"../../interfaces/customer.interface\";\r\nimport { GET_CUSTOMERS } from \"./useGetCustomer\";\r\n\r\ninterface UpdateCustomerInput {\r\n  variables: {\r\n    customerInput: Customer;\r\n  };\r\n}\r\n\r\nconst UPDATE_CUSTOMER = gql`\r\n  mutation updateCustomer($customerInput: UpdateCustomerInput!) {\r\n    updateCustomer(customerInput: $customerInput) {\r\n      id\r\n      name\r\n      lastName\r\n      document\r\n      numDocument\r\n      cellphone_1\r\n      cellphone_2\r\n      direction\r\n      username\r\n      password\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateCustomer = () => {\r\n  const [updateCustomer, { error, loading }] = useMutation(UPDATE_CUSTOMER, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_CUSTOMERS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateCustomer, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Customer } from \"../../interfaces/customer.interface\";\r\nimport { GET_CUSTOMERS } from \"./useGetCustomer\";\r\n\r\ninterface CreateCustomerInput {\r\n  variables: {\r\n    customerInput: Customer;\r\n  };\r\n}\r\n\r\nconst CREATE_CUSTOMER = gql`\r\n  mutation registerCustomer($customerInput: CreateCustomerInput!) {\r\n    registerCustomer(customerInput: $customerInput) {\r\n      id\r\n      name\r\n      lastName\r\n      document\r\n      numDocument\r\n      cellphone_1\r\n      cellphone_2\r\n      direction\r\n      username\r\n      password\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateCustomer = () => {\r\n  const [registerCustomer, { error, loading }] = useMutation(CREATE_CUSTOMER, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_CUSTOMERS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerCustomer, error, loading };\r\n};\r\n","import { Customer } from \"../../interfaces/customer.interface\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useState } from \"react\";\r\nimport RedditTextField from \"../textfield/reddit\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport { useUpdateCustomer } from \"../../hooks/customer/useUpdateCustomer\";\r\nimport { useCreateCustomer } from \"../../hooks/customer/useCreateCustomer\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ninterface Option {\r\n  handleClose?: () => void;\r\n  customer?: Customer;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst CustomerForm = ({ handleClose, customer }: Option) => {\r\n  const initialStateCreate: Customer = {\r\n    name: \"\",\r\n    lastName: \"\",\r\n    document: \"\",\r\n    numDocument: \"\",\r\n    cellphone_1: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const initialStateUpdate: Customer = {\r\n    id: customer?.id || \"\",\r\n    name: customer?.name || \"\",\r\n    lastName: customer?.lastName || \"\",\r\n    document: customer?.document || \"\",\r\n    numDocument: customer?.numDocument || \"\",\r\n    cellphone_1: customer?.cellphone_1 || \"\",\r\n    cellphone_2: customer?.cellphone_2 || \"\",\r\n    direction: customer?.direction || \"\",\r\n    username: customer?.username || \"\",\r\n    password: customer?.password || \"\",\r\n  };\r\n\r\n  const [customerForm, setCustomerForm] = useState<Customer>(\r\n    initialStateUpdate.id ? initialStateUpdate : initialStateCreate\r\n  );\r\n  const dispatch = useDispatch();\r\n  const optionsUpdate = useUpdateCustomer();\r\n  const optionsCreate = useCreateCustomer();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setCustomerForm({\r\n      ...customerForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setCustomerForm({\r\n      ...customerForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (customerForm.id) {\r\n      try {\r\n        await optionsUpdate.updateCustomer({\r\n          variables: {\r\n            customerInput: customerForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La cliente se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreate.registerCustomer({\r\n          variables: {\r\n            customerInput: customerForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La cliente ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <FormControl variant=\"outlined\" fullWidth>\r\n              <InputLabel id=\"idDocument\">Documento</InputLabel>\r\n              <Select\r\n                labelId=\"Document\"\r\n                id=\"idDocument\"\r\n                value={customerForm.document}\r\n                onChange={handleSelect}\r\n                label=\"Documento\"\r\n                name=\"document\"\r\n              >\r\n                <MenuItem value=\"DNI\">DNI</MenuItem>\r\n                <MenuItem value=\"RUC\">RUC</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"numDocument\"\r\n              autoComplete=\"off\"\r\n              id=\"idNumDocument\"\r\n              label=\"Nro de documento\"\r\n              variant=\"filled\"\r\n              value={customerForm.numDocument}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"name\"\r\n              autoComplete=\"off\"\r\n              id=\"idName\"\r\n              label=\"Nombres\"\r\n              variant=\"filled\"\r\n              value={customerForm.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"lastName\"\r\n              autoComplete=\"off\"\r\n              id=\"idLastName\"\r\n              label=\"Apellidos\"\r\n              variant=\"filled\"\r\n              value={customerForm.lastName}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"cellphone_1\"\r\n              autoComplete=\"off\"\r\n              id=\"idCellphone1\"\r\n              label=\"Celular\"\r\n              variant=\"filled\"\r\n              value={customerForm.cellphone_1}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"cellphone_2\"\r\n              autoComplete=\"off\"\r\n              id=\"idCellphonen2\"\r\n              label=\"Celular (opcional)\"\r\n              variant=\"filled\"\r\n              value={customerForm.cellphone_2}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"direction\"\r\n              autoComplete=\"off\"\r\n              id=\"idDirection\"\r\n              label=\"Dirección\"\r\n              variant=\"filled\"\r\n              value={customerForm.direction}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"username\"\r\n              autoComplete=\"off\"\r\n              id=\"idUserame\"\r\n              label=\"Usuario\"\r\n              variant=\"filled\"\r\n              value={customerForm.username}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"password\"\r\n              autoComplete=\"off\"\r\n              id=\"idPassword\"\r\n              label=\"Contraseña\"\r\n              variant=\"filled\"\r\n              value={customerForm.password}\r\n            />\r\n          </Grid>\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {customerForm.id ? (\r\n              optionsUpdate.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreate.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_CUSTOMERS } from \"./useGetCustomer\";\r\n\r\nconst DELETE_CUSTOMER = gql`\r\n  mutation deleteCustomer($id: String!) {\r\n    deleteCustomer(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteCustomer = () => {\r\n  const [deleteCustomer, { error, loading }] = useMutation(DELETE_CUSTOMER, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_CUSTOMERS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteCustomer, error, loading };\r\n};\r\n","import { Customer } from \"../../interfaces/customer.interface\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { useState } from \"react\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport CustomerForm from \"./customer-form\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport moment from \"moment\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { useDeleteCustomer } from \"../../hooks/customer/useDeleteCustomer\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst CustomerList = ({ customer }: { customer: Customer }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const optionsCustomer = useDeleteCustomer();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Cliente\":\r\n        return <CustomerForm customer={customer} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const deleteCustomer = async (id: string | undefined) => {\r\n    try {\r\n      await optionsCustomer.deleteCustomer({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar Cliente\"\r\n        onClick={() => deleteCustomer(customer.id)}\r\n      >\r\n        <IconButton aria-label=\"customer\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar Cliente\"\r\n        onClick={() => setDialog({ name: \"Cliente\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"customer\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {`${customer.name} ${customer.lastName}`}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {customer.document}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {customer.numDocument}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {customer.cellphone_2\r\n            ? `${customer.cellphone_1}, ${customer.cellphone_2}`\r\n            : `${customer.cellphone_1}`}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {customer.direction}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n          {customer.username}/{customer.password}\r\n        </TableCell>\r\n        <TableCell>{moment(customer.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(customer.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell align=\"right\">\r\n          {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          {loadAccess(PERMIT_TREE, auth, page, showOptionsForDelete)}\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={customer}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, page, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerList;\r\n","import Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CustomerForm from \"../components/customer/customer-form\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { Customer } from \"../interfaces/customer.interface\";\r\nimport CustomerList from \"../components/customer/customer-list\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { useGetCustomers } from \"../hooks/customer/useGetCustomer\";\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst CustomerPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const [customers, setCustomers] = useState<Customer[]>([]);\r\n  const { data, loading, error } = useGetCustomers();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <CustomerForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCustomers(data.getCustomer);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear Cliente\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Cliente`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ marginTop: 10, whiteSpace: \"nowrap\" }}\r\n      >\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nombres</TableCell>\r\n              <TableCell>Documento</TableCell>\r\n              <TableCell>Nro. Documento</TableCell>\r\n              <TableCell>Contacto</TableCell>\r\n              <TableCell>Dirección</TableCell>\r\n              <TableCell>Credenciales</TableCell>\r\n              {/* <TableCell>Plan</TableCell>\r\n              <TableCell>Placa</TableCell>\r\n              <TableCell>Nro GPS</TableCell> \r\n              <TableCell>Fecha de instalación</TableCell>\r\n              <TableCell>Fecha de termino</TableCell> */}\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell>Opciones</TableCell>\r\n              {/* {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)} */}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {customers.map((customer) => (\r\n              <CustomerList key={customer.id} customer={customer} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerPage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_DEVICES = gql`\r\n  query getDevices {\r\n    getDevices {\r\n      id\r\n      name\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetDevices = () => {\r\n  const { data, error, loading } = useQuery(GET_DEVICES);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Device } from \"../../interfaces/device.interface\";\r\nimport { GET_DEVICES } from \"./useGetDevice\";\r\n\r\ninterface UpdateDeviceInput {\r\n  variables: {\r\n    deviceInput: Device;\r\n  };\r\n}\r\n\r\nconst UPDATE_DEVICE = gql`\r\n  mutation updateDevice($deviceInput: UpdateDeviceInput!) {\r\n    updateDevice(deviceInput: $deviceInput) {\r\n      id\r\n      name\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateDevice = () => {\r\n  const [updateDevice, { error, loading }] = useMutation(UPDATE_DEVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_DEVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateDevice, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Device } from \"../../interfaces/device.interface\";\r\nimport { GET_DEVICES } from \"./useGetDevice\";\r\n\r\ninterface CreateDeviceInput {\r\n  variables: {\r\n    deviceInput: Device;\r\n  };\r\n}\r\n\r\nconst CREATE_DEVICE = gql`\r\n  mutation registerDevice($deviceInput: CreateDeviceInput!) {\r\n    registerDevice(deviceInput: $deviceInput) {\r\n      id\r\n      name\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateDevice = () => {\r\n  const [registerDevice, { error, loading }] = useMutation(CREATE_DEVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_DEVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerDevice, error, loading };\r\n};\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RedditTextField from \"../textfield/reddit\";\r\nimport { Device } from \"../../interfaces/device.interface\";\r\nimport { useUpdateDevice } from \"../../hooks/device/useUpdateDevice\";\r\nimport { useCreateDevice } from \"../../hooks/device/useCreateDevice\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\n\r\ninterface Option {\r\n  handleClose?: () => void;\r\n  device?: Device;\r\n}\r\n\r\nconst DeviceForm = ({ handleClose, device }: Option) => {\r\n  const initialStateCreate: Device = {\r\n    name: \"\",\r\n  };\r\n\r\n  const initialStateUpdate: Device = {\r\n    id: device?.id || \"\",\r\n    name: device?.name || \"\",\r\n  };\r\n\r\n  const [deviceForm, setDeviceForm] = useState<Device>(\r\n    initialStateUpdate.id ? initialStateUpdate : initialStateCreate\r\n  );\r\n  const dispatch = useDispatch();\r\n  const optionsUpdate = useUpdateDevice();\r\n  const optionsCreate = useCreateDevice();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setDeviceForm({\r\n      ...deviceForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (deviceForm.id) {\r\n      try {\r\n        await optionsUpdate.updateDevice({\r\n          variables: {\r\n            deviceInput: deviceForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El dispositivo se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreate.registerDevice({\r\n          variables: {\r\n            deviceInput: deviceForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La dispositivo ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"name\"\r\n              autoComplete=\"off\"\r\n              id=\"idName\"\r\n              label=\"Nombre\"\r\n              variant=\"filled\"\r\n              value={deviceForm.name}\r\n            />\r\n          </Grid>\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {deviceForm.id ? (\r\n              optionsUpdate.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreate.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeviceForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_DEVICES } from \"./useGetDevice\";\r\n\r\nconst DELETE_DEVICE = gql`\r\n  mutation deleteDevice($id: String!) {\r\n    deleteDevice(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteDevice = () => {\r\n  const [deleteDevice, { error, loading }] = useMutation(DELETE_DEVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_DEVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteDevice, error, loading };\r\n};\r\n","import { Device } from \"../../interfaces/device.interface\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { useState } from \"react\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport moment from \"moment\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport DeviceForm from \"./device-form\";\r\nimport { useDeleteDevice } from \"../../hooks/device/useDeleteDevice\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst DeviceList = ({ device }: { device: Device }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const optionsCustomer = useDeleteDevice();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Device\":\r\n        return <DeviceForm device={device} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const deleteDevice = async (id: string | undefined) => {\r\n    try {\r\n      await optionsCustomer.deleteDevice({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar dispositivo\"\r\n        onClick={() => deleteDevice(device.id)}\r\n      >\r\n        <IconButton aria-label=\"device\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar dispositivo\"\r\n        onClick={() => setDialog({ name: \"Device\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"device\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {device.name}\r\n        </TableCell>\r\n\r\n        <TableCell>{moment(device.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(device.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell align=\"right\">\r\n          {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          {loadAccess(PERMIT_TREE, auth, page, showOptionsForDelete)}\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={device}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, page, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeviceList;\r\n","import { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { Billing } from \"../interfaces/billing.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport DeviceList from \"../components/device/device-list\";\r\nimport { useGetDevices } from \"../hooks/device/useGetDevice\";\r\nimport DeviceForm from \"../components/device/device-form\";\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst DevicePage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const [devices, setDevices] = useState<Billing[]>([]);\r\n  const { data, loading, error } = useGetDevices();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <DeviceForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setDevices(data.getDevices);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear dispositivo\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Dispositivo`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ marginTop: 10, whiteSpace: \"nowrap\" }}\r\n      >\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nombre</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"right\">Opciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {devices.map((device) => (\r\n              <DeviceList key={device.id} device={device} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DevicePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_MODELS = gql`\r\n  query getModels {\r\n    getModels {\r\n      id\r\n      name\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetModels = () => {\r\n  const { data, error, loading } = useQuery(GET_MODELS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { GET_MODELS } from \"./useGetModels\";\r\n\r\ninterface UpdateModelInput {\r\n  variables: {\r\n    modelInput: Model;\r\n  };\r\n}\r\n\r\nconst UPDATE_MODEL = gql`\r\n  mutation updateModel($modelInput: UpdateModelInput!) {\r\n    updateModel(modelInput: $modelInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateModel = () => {\r\n  const [updateModel, { error, loading }] = useMutation(UPDATE_MODEL, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODELS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateModel, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { GET_MODELS } from \"./useGetModels\";\r\n\r\ninterface CreateModelInput {\r\n  variables: {\r\n    modelInput: Model;\r\n  };\r\n}\r\n\r\nconst CREATE_MODEL = gql`\r\n  mutation registerModel($modelInput: CreateModelInput!) {\r\n    registerModel(modelInput: $modelInput) {\r\n      id\r\n      name\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateModel = () => {\r\n  const [registerModel, { error, loading }] = useMutation(CREATE_MODEL, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODELS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerModel, error, loading };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport { useUpdateModel } from \"../../hooks/model/useUpdateModel\";\r\nimport { useCreateModel } from \"../../hooks/model/useCreateModel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useGetBrands } from \"../../hooks/brand/useGetBrands\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  model?: Model;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst ModelForm = ({ handleClose, model }: Options) => {\r\n  const initialValueCreate: Model = {\r\n    name: \"\",\r\n    brand: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Model = {\r\n    id: model?.id || \"\",\r\n    name: model?.name || \"\",\r\n    brand: model?.brand?.name || \"\",\r\n  };\r\n\r\n  const [modelForm, setModelForm] = useState<Model>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n  const { data } = useGetBrands();\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateModel = useUpdateModel();\r\n  const optionsCreateModel = useCreateModel();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setModelForm({ ...modelForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setModelForm({\r\n      ...modelForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (modelForm.id) {\r\n      try {\r\n        await optionsUpdateModel.updateModel({\r\n          variables: {\r\n            modelInput: modelForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modelo se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateModel.registerModel({\r\n          variables: {\r\n            modelInput: modelForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modelo ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBrands(data.getBrands);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel id=\"idMarca\">Marca</InputLabel>\r\n            <Select\r\n              labelId=\"Marca\"\r\n              id=\"idMarca\"\r\n              value={modelForm.brand}\r\n              onChange={handleSelect}\r\n              label=\"Marca\"\r\n              name=\"brand\"\r\n            >\r\n              {brands.map((brand) => (\r\n                <MenuItem key={brand.id} value={brand.name}>\r\n                  {brand.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Modelo\"\r\n            variant=\"outlined\"\r\n            value={modelForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {modelForm.id ? (\r\n            optionsUpdateModel.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateModel.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ModelForm;\r\n","import { Model } from \"../../interfaces/model.interface\";\r\n\r\nimport { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport ModelForm from \"./model-form\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ModelList = ({ model }: { model: Model }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Modelo\":\r\n        return <ModelForm model={model} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={model}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar Modelo\"\r\n          onClick={() => setDialog({ name: \"Modelo\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {model.brand?.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {model.name}\r\n        </TableCell>\r\n        <TableCell>{moment(model.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(model.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default ModelList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport ModelList from \"../components/model/model-list\";\r\nimport { Model } from \"../interfaces/model.interface\";\r\nimport ModelForm from \"../components/model/model-form\";\r\nimport { useGetModels } from \"../hooks/model/useGetModels\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ModelPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetModels();\r\n  const [models, setModels] = useState<Model[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ModelForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setModels(data.getModels);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Modelo`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Modelo\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ whiteSpace: \"nowrap\", marginTop: 10 }}\r\n      >\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Marca</TableCell>\r\n              <TableCell>Modelo</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {models.map((model) => (\r\n              <ModelList key={model.id} model={model} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelPage;\r\n","import React from \"react\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { MENU_FORBIDDEN } from \"../../const\";\r\n\r\n/**\r\n * @param columns:any\r\n * @returns {columns: Array(1)}\r\n **/\r\n\r\n/**\r\n * @param {columns}:any\r\n * @returns [{…}]\r\n **/\r\n\r\nconst ItemModuleMenu = ({ menu }: { menu: Menu }) => {\r\n  return (\r\n    <>\r\n      {menu.name === MENU_FORBIDDEN ? (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={menu.name}\r\n          color=\"primary\"\r\n        />\r\n      ) : (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={menu.name}\r\n          onDelete={() => alert(\"keiner\")}\r\n          color=\"primary\"\r\n        />\r\n      )}\r\n      &nbsp;\r\n    </>\r\n  );\r\n};\r\nexport default ItemModuleMenu;\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Access } from \"../../interfaces/access.interface\";\r\n/**\r\n * @param columns:any\r\n * @returns {columns: Array(1)}\r\n **/\r\n\r\n/**\r\n * @param {columns}:any\r\n * @returns [{…}]\r\n **/\r\n\r\nconst ItemModuleAccess = ({ access }: { access: Access }) => {\r\n  return (\r\n    <>\r\n      <Chip\r\n        style={{ margin: \"3px\" }}\r\n        size=\"small\"\r\n        label={access.name}\r\n        onDelete={() => alert(\"keiner\")}\r\n        color=\"primary\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ItemModuleAccess;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { GET_MODULES } from \"./useGetModules\";\r\n\r\ninterface UpdateModuleInput {\r\n  variables: {\r\n    moduleInput: Module;\r\n  };\r\n}\r\n\r\nconst UDATE_MODULE = gql`\r\n  mutation updateModule($moduleInput: UpdateModuleInput!) {\r\n    updateModule(moduleInput: $moduleInput) {\r\n      id\r\n      name\r\n      description\r\n      menus {\r\n        id\r\n        name\r\n      }\r\n      access {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateModule = () => {\r\n  const [updateModule, { error, loading }] = useMutation(UDATE_MODULE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODULES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateModule, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { GET_MODULES } from \"./useGetModules\";\r\n\r\ninterface CreateModuleInput {\r\n  variables: {\r\n    moduleInput: Module;\r\n  };\r\n}\r\n\r\nconst CREATE_MODULE = gql`\r\n  mutation registerModule($moduleInput: CreateModuleInput!) {\r\n    registerModule(moduleInput: $moduleInput) {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      menus {\r\n        id\r\n        name\r\n      }\r\n      access {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateModule = () => {\r\n  const [registerModule, { error, loading }] = useMutation(CREATE_MODULE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODULES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerModule, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\n\r\nconst GET_ACCESS = gql`\r\n  query getAccess {\r\n    getAccess {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetAllAccess = () => {\r\n  const { data, error, loading }: any = useQuery(GET_ACCESS);\r\n  const dispatch = useDispatch();\r\n\r\n  if (error) {\r\n    dispatch(\r\n      setAlert({\r\n        type: \"error\",\r\n        text: error.message,\r\n      })\r\n    );\r\n  }\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\n\r\nexport const GET_MENUS = gql`\r\n  query getMenus {\r\n    getMenus {\r\n      id\r\n      name\r\n      link\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetMenus = () => {\r\n  const { data, error, loading }: any = useQuery(GET_MENUS);\r\n  const dispatch = useDispatch();\r\n\r\n  if (error) {\r\n    dispatch(\r\n      setAlert({\r\n        type: \"error\",\r\n        text: error.message,\r\n      })\r\n    );\r\n  }\r\n  return { data, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useUpdateModule } from \"../../hooks/module/useUpdateModule\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { Access } from \"../../interfaces/access.interface\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Progress from \"../progress/progress\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport { useCreateModule } from \"../../hooks/module/useCreateModule\";\r\nimport { useGetAllAccess } from \"../../hooks/access/useGetAllAceess\";\r\nimport { useGetMenus } from \"../../hooks/menu/useGetMenus\";\r\nimport { MENU_FORBIDDEN, MODULE_FORBIDDEN } from \"../../const\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\ntype SelectChange = ChangeEvent<{ value: unknown } | any | HTMLSelectElement>;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst ModuleForm = ({\r\n  module,\r\n  handleClose,\r\n}: {\r\n  module?: Module;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValueUpdate: Module = {\r\n    id: module?.id || \"\",\r\n    name: module?.name || \"\",\r\n    description: module?.description || \"\",\r\n  };\r\n\r\n  const initialValueCreate: Module = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const optionsUpdateModule = useUpdateModule();\r\n  const optionsCreateModule = useCreateModule();\r\n  const optionsGetAccess = useGetAllAccess();\r\n  const optionsGetMenus = useGetMenus();\r\n  const [menuSelected, setMenuSelected] = useState<Menu[]>([]);\r\n  const [accessSelected, setAccessSelected] = useState<Access[]>([]);\r\n  const [listMenus, setListMenus] = useState<Menu[]>([]);\r\n  const [listAccess, setListAccess] = useState<Access[]>([]);\r\n  const [moduleForm, setModuleForm] = useState<Module>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setModuleForm({ ...moduleForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelectMenus = (e: SelectChange) => {\r\n    setMenuSelected(e.target.value);\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelectAccess = (e: SelectChange) => {\r\n    setAccessSelected(e.target.value);\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const sentToAddMenus = menuSelected.map((value) => {\r\n    return { name: value };\r\n  });\r\n\r\n  const sentToAddAccess = accessSelected.map((value) => {\r\n    return { name: value };\r\n  });\r\n\r\n  function getStyles(name: any, personName: Module[], theme: Theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    if (moduleForm.id) {\r\n      try {\r\n        await optionsUpdateModule.updateModule({\r\n          variables: {\r\n            moduleInput: moduleForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modulo se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateModule.registerModule({\r\n          variables: {\r\n            moduleInput: {\r\n              ...moduleForm,\r\n              access: sentToAddAccess,\r\n              menus: sentToAddMenus,\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modulo se registró correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionsGetMenus.data && optionsGetAccess.data) {\r\n      const listMenusNoModulos = optionsGetMenus.data.getMenus.filter(\r\n        (menu: any) => menu.name !== MENU_FORBIDDEN\r\n      );\r\n      setListMenus(listMenusNoModulos);\r\n      setListAccess(optionsGetAccess.data.getAccess);\r\n    }\r\n  }, [optionsGetMenus.data, optionsGetAccess.data, moduleForm.name]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          {moduleForm.id && moduleForm.name === MODULE_FORBIDDEN ? (\r\n            \"\"\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                onChange={handleInput}\r\n                name=\"name\"\r\n                id=\"idName\"\r\n                label=\"Modulo\"\r\n                variant=\"outlined\"\r\n                value={moduleForm.name}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"description\"\r\n              id=\"idDescription\"\r\n              label=\"Descripción\"\r\n              multiline\r\n              value={moduleForm.description}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          {!initialValueUpdate.id && (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"menus-mutiple-chip-label\">Menus</InputLabel>\r\n                  <Select\r\n                    labelId=\"menus-mutiple-chip-label\"\r\n                    id=\"menus-mutiple-chip\"\r\n                    multiple\r\n                    value={menuSelected}\r\n                    onChange={handleSelectMenus}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={(selected) => (\r\n                      <div className={classes.chips}>\r\n                        {(selected as any[]).map((menu) => {\r\n                          return (\r\n                            <Chip\r\n                              key={menu}\r\n                              label={menu}\r\n                              className={menu.chip}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {listMenus.map((menu) => (\r\n                      <MenuItem\r\n                        key={menu.id}\r\n                        value={menu.name}\r\n                        style={getStyles(\r\n                          menu.name,\r\n                          moduleForm.menus || [],\r\n                          theme\r\n                        )}\r\n                      >\r\n                        {menu.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"access-mutiple-chip-label\">\r\n                    Accesos\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"access-mutiple-chip-label\"\r\n                    id=\"access-mutiple-chip\"\r\n                    multiple\r\n                    value={accessSelected}\r\n                    onChange={handleSelectAccess}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={(selected) => (\r\n                      <div className={classes.chips}>\r\n                        {(selected as any[]).map((access) => {\r\n                          return (\r\n                            <Chip\r\n                              key={access}\r\n                              label={access}\r\n                              className={access.chip}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {listAccess.map((access) => (\r\n                      <MenuItem\r\n                        key={access.id}\r\n                        value={access.name}\r\n                        style={getStyles(\r\n                          access.name,\r\n                          moduleForm.access || [],\r\n                          theme\r\n                        )}\r\n                      >\r\n                        {access.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={() => handleClose()} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {moduleForm.id ? (\r\n              optionsUpdateModule.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreateModule.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModuleForm;\r\n","import React, { useState, FormEvent, useCallback, useEffect } from \"react\";\r\nimport { Access } from \"../../interfaces/access.interface\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useUpdateModule } from \"../../hooks/module/useUpdateModule\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useGetAllAccess } from \"../../hooks/access/useGetAllAceess\";\r\nimport TrasnferList from \"../../lib/transfer-list-component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst AccesoForm = ({\r\n  module,\r\n  handleClose,\r\n}: {\r\n  module: Module;\r\n  handleClose: () => void;\r\n}) => {\r\n  const [listAvailable, setListAvailable] = useState<Access[]>([]);\r\n  const [listCurrent, setListCurrent] = useState<Access[]>([]);\r\n  const [checked, setChecked] = useState<Access[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateModule = useUpdateModule();\r\n  const optionsGetAllAccess = useGetAllAccess();\r\n  const alert = useSelector((state: any) => state.message);\r\n  const { type, text } = alert;\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    const newData = listCurrent.map((access) => {\r\n      return {\r\n        name: access.name,\r\n      };\r\n    });\r\n\r\n    try {\r\n      await optionsUpdateModule.updateModule({\r\n        variables: {\r\n          moduleInput: {\r\n            id: module.id,\r\n            access: newData,\r\n          },\r\n        },\r\n      });\r\n      return dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"El modulo actualizó sus accesos correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadAccessAvailable = useCallback(() => {\r\n    const res = optionsGetAllAccess.data.getAccess.filter(\r\n      (dispo: Access) =>\r\n        !module.access?.some((actual) => dispo.name === actual.name)\r\n    );\r\n\r\n    setListAvailable(res);\r\n  }, [module, optionsGetAllAccess.data]);\r\n\r\n  useEffect(() => {\r\n    if (module && optionsGetAllAccess.data) {\r\n      setListCurrent(module.access || []);\r\n      loadAccessAvailable();\r\n    }\r\n  }, [module, optionsGetAllAccess.data, loadAccessAvailable]);\r\n\r\n  if (type === \"error\") {\r\n    return <h1>{text}</h1>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TrasnferList\r\n            setListAvailable={setListAvailable}\r\n            setListCurrent={setListCurrent}\r\n            setChecked={setChecked}\r\n            checked={checked}\r\n            listAvailable={listAvailable}\r\n            titleAvailable=\"Accesos disponibles\"\r\n            listCurrent={listCurrent}\r\n            titleCurrent=\"Accesos actuales\"\r\n            loading={optionsGetAllAccess.loading}\r\n          />\r\n        </Grid>\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disabled={optionsUpdateModule.loading ? true : false}\r\n          >\r\n            {module.id ? \"Actualizar\" : \"Registrar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccesoForm;\r\n","import React, { useState, useEffect, FormEvent, useCallback } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { useGetMenus } from \"../../hooks/menu/useGetMenus\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useUpdateModule } from \"../../hooks/module/useUpdateModule\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TrasnferList from \"../../lib/transfer-list-component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { MENU_FORBIDDEN } from \"../../const\";\r\n\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst MenuForm = ({\r\n  module,\r\n  handleClose,\r\n}: {\r\n  module: Module;\r\n  handleClose: () => void;\r\n}) => {\r\n  const [listAvailable, setListAvailable] = useState<Menu[]>([]);\r\n  const [listCurrent, setListCurrent] = useState<Menu[]>([]);\r\n  const [checked, setChecked] = useState<Menu[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsGetMenus = useGetMenus();\r\n  const optionsUpdateModule = useUpdateModule();\r\n  const alert = useSelector((state: any) => state.message);\r\n  const { type, text } = alert;\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    const newData = listCurrent.map((menu) => {\r\n      return {\r\n        name: menu.name,\r\n      };\r\n    });\r\n\r\n    try {\r\n      await optionsUpdateModule.updateModule({\r\n        variables: {\r\n          moduleInput: {\r\n            id: module.id,\r\n            menus: newData,\r\n          },\r\n        },\r\n      });\r\n      return dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"El modulo actualizó sus menu correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadMenusAvailable = useCallback(() => {\r\n    const res = optionsGetMenus.data.getMenus.filter(\r\n      (dispo: Menu) =>\r\n        !module.menus?.some((actual) => dispo.name === actual.name)\r\n    );\r\n\r\n    const listMenusAvailableNoModulos = res.filter(\r\n      (menu: any) => menu.name !== MENU_FORBIDDEN\r\n    );\r\n\r\n    setListAvailable(listMenusAvailableNoModulos);\r\n  }, [module, optionsGetMenus.data]);\r\n\r\n  useEffect(() => {\r\n    if (module && optionsGetMenus.data) {\r\n      const listMenusCurrentNoModulos = module.menus?.filter(\r\n        (module) => module.name !== MENU_FORBIDDEN\r\n      );\r\n      setListCurrent(listMenusCurrentNoModulos || []);\r\n\r\n      loadMenusAvailable();\r\n    }\r\n  }, [module, optionsGetMenus.data, loadMenusAvailable]);\r\n\r\n  if (type === \"error\") {\r\n    return <h1>{text}</h1>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TrasnferList\r\n            setListAvailable={setListAvailable}\r\n            setListCurrent={setListCurrent}\r\n            setChecked={setChecked}\r\n            checked={checked}\r\n            listAvailable={listAvailable}\r\n            titleAvailable=\"Menus disponibles\"\r\n            listCurrent={listCurrent}\r\n            titleCurrent=\"Menus actuales\"\r\n            loading={optionsGetMenus.loading}\r\n          />\r\n        </Grid>\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disabled={optionsUpdateModule.loading ? true : false}\r\n          >\r\n            {module.id ? \"Actualizar\" : \"Registrar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MenuForm;\r\n","import React, { useState } from \"react\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport ItemModuleMenu from \"./item-module-menu\";\r\nimport ItemModuleAccess from \"./item-module-access\";\r\n//tables\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n//button\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n//icon\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport VerifiedUserRoundedIcon from \"@material-ui/icons/VerifiedUserRounded\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\n//dates\r\nimport moment from \"moment\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport ModuleForm from \"../module/module-form.component\";\r\nimport AccesoForm from \"../acceso/access-form.component\";\r\nimport MenuForm from \"../menu/menu-form.component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { MODULE_FORBIDDEN } from \"../../const\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ItemModule = ({ module }: { module: Module }) => {\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Modulo\":\r\n        return <ModuleForm module={module} handleClose={handleClose} />;\r\n\r\n      case \"Acceso\":\r\n        return <AccesoForm module={module} handleClose={handleClose} />;\r\n\r\n      case \"Menu\":\r\n        return <MenuForm module={module} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //[\"error\",\"info\",\"success\",\"warning\"]\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={module}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {module.name}\r\n        </TableCell>\r\n        <TableCell>{module.description}</TableCell>\r\n        <TableCell>{moment(module.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(module.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell align=\"center\">\r\n          {module.menus &&\r\n            module.menus.map((menu) => (\r\n              <ItemModuleMenu key={menu.id} menu={menu} />\r\n            ))}\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          {module.name === MODULE_FORBIDDEN ? (\r\n            <Chip\r\n              style={{ margin: \"3px\" }}\r\n              size=\"small\"\r\n              label=\"Todos los permisos\"\r\n              color=\"primary\"\r\n            />\r\n          ) : (\r\n            module.access &&\r\n            module.access.map((access) => (\r\n              <ItemModuleAccess key={access.id} access={access} />\r\n            ))\r\n          )}\r\n        </TableCell>\r\n\r\n        {module.name === MODULE_FORBIDDEN ? (\r\n          <TableCell align=\"center\">\r\n            <Tooltip\r\n              title=\"Asignar menu\"\r\n              onClick={() => setDialog({ name: \"Menu\", active: true })}\r\n            >\r\n              <IconButton aria-label=\"menu\" size=\"small\">\r\n                <MenuRoundedIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </TableCell>\r\n        ) : (\r\n          <>\r\n            <TableCell align=\"right\">\r\n              <Tooltip\r\n                title=\"Asignar menu\"\r\n                onClick={() => setDialog({ name: \"Menu\", active: true })}\r\n              >\r\n                <IconButton aria-label=\"menu\" size=\"small\">\r\n                  <MenuRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Asignar acceso\"\r\n                onClick={() => setDialog({ name: \"Acceso\", active: true })}\r\n              >\r\n                <IconButton aria-label=\"acceso\" size=\"small\">\r\n                  <VerifiedUserRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Editar modulo\"\r\n                onClick={() => setDialog({ name: \"Modulo\", active: true })}\r\n              >\r\n                <IconButton aria-label=\"acceso\" size=\"small\">\r\n                  <EditRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </TableCell>\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemModule;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGetModules } from \"../hooks/module/useGetModules\";\r\nimport { Module } from \"../interfaces/module.interface\";\r\n//css library materialui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//tables\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n//end tables\r\nimport ItemModule from \"../components/table/item-module.component\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ModuleForm from \"../components/module/module-form.component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { ROLSA } from \"../const\";\r\nimport { findError } from \"../helpers/control-errors\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ModulePage = () => {\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n  const { data, loading, error } = useGetModules();\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ModuleForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setModules(data.getModules);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {auth?.role?.name === ROLSA ? (\r\n        <>\r\n          <DialogForm\r\n            open={dialog.active}\r\n            title={`${dialog.name} Modulo`}\r\n            component={component(dialog.name)}\r\n            handleClose={handleClose}\r\n          />\r\n\r\n          <Tooltip title=\"Crear Rol\">\r\n            <IconButton\r\n              aria-label=\"add\"\r\n              size=\"small\"\r\n              onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n            >\r\n              <AddRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <TableContainer style={{ whiteSpace: \"nowrap\" }} component={Paper}>\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Modulo</TableCell>\r\n                  <TableCell>Descripción</TableCell>\r\n                  <TableCell>Fecha creada</TableCell>\r\n                  <TableCell>Fecha modificada</TableCell>\r\n                  <TableCell align=\"center\">Menus</TableCell>\r\n                  <TableCell align=\"center\">Permisos</TableCell>\r\n                  <TableCell align=\"right\">Opciones</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {modules.map((module) => (\r\n                  <ItemModule key={module.id} module={module} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1>No tiene permiso para acceder a este recurso.</h1>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModulePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_PRODUCTS = gql`\r\n  query getProducts {\r\n    getProducts {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      cant\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n      model {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetProducts = () => {\r\n  const { data, error, loading } = useQuery(GET_PRODUCTS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Product } from \"../../interfaces/product.interface\";\r\nimport { GET_PRODUCTS } from \"./useGetProducts\";\r\n\r\ninterface UpdateProductInput {\r\n  variables: {\r\n    productInput: Product;\r\n  };\r\n}\r\n\r\nconst UPDATE_PRODUCT = gql`\r\n  mutation updateService($productInput: UpdateProductInput!) {\r\n    updateProduct(productInput: $productInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n      model {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateProduct = () => {\r\n  const [updateProduct, { error, loading }] = useMutation(UPDATE_PRODUCT, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_PRODUCTS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateProduct, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Product } from \"../../interfaces/product.interface\";\r\nimport { GET_PRODUCTS } from \"./useGetProducts\";\r\n\r\ninterface CreateProductInput {\r\n  variables: {\r\n    productInput: Product;\r\n  };\r\n}\r\n\r\nconst CREATE_PRODUCT = gql`\r\n  mutation registerProduct($productInput: CreateProductInput!) {\r\n    registerProduct(productInput: $productInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n      model {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateProduct = () => {\r\n  const [registerProduct, { error, loading }] = useMutation(CREATE_PRODUCT, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_PRODUCTS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerProduct, error, loading };\r\n};\r\n","import { Product } from \"../../interfaces/product.interface\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Progress from \"../progress/progress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { useUpdateProduct } from \"../../hooks/product/useUpdateProduct\";\r\nimport { useCreateProduct } from \"../../hooks/product/useCreateProduct\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useGetBrandsByCategory } from \"../../hooks/brand/useBrandsByCategory\";\r\nimport { useGetModelsByBrand } from \"../../hooks/model/useGetModelsByBrand\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { AutoCompleteInput } from \"../../interfaces/autocompleteinput.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  product?: Product;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialAutoCompleteInput = {\r\n  category: \"\",\r\n  brand: \"\",\r\n  model: \"\",\r\n};\r\n\r\nconst ProductForm = ({ handleClose, product }: Options) => {\r\n  const initialValueCreate: Product = {\r\n    name: \"\",\r\n    price: 0,\r\n    category: \"\",\r\n    brand: \"\",\r\n    model: \"\",\r\n    cant: 0,\r\n  };\r\n\r\n  const initialValueUpdate: Product = {\r\n    id: product?.id || \"\",\r\n    name: product?.name || \"\",\r\n    description: product?.description || \"\",\r\n    price: product?.price || 0,\r\n    cant: product?.cant || 0,\r\n    category: product?.category?.name || \"\",\r\n    brand: product?.brand?.name || \"\",\r\n    model: product?.model?.name || \"\",\r\n  };\r\n\r\n  const [productForm, setProductForm] = useState<Product>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [valueInput, setValueInput] = useState<AutoCompleteInput>(\r\n    initialAutoCompleteInput\r\n  );\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n  const [models, setModels] = useState<Model[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateProduct = useUpdateProduct();\r\n  const optionsCreateProduct = useCreateProduct();\r\n  const optionsGetBrandsByCategory = useGetBrandsByCategory(\r\n    productForm.category || \"\"\r\n  );\r\n\r\n  const optionsGetModelsByBrand = useGetModelsByBrand(productForm.brand || \"\");\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setProductForm({\r\n      ...productForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  //https://stackoverflow.com/questions/62588055/how-to-get-the-name-of-material-ui-autocomplete-component\r\n\r\n  const dataCategorys = useCallback(() => {\r\n    setCategorys(data.getCategorys);\r\n  }, [data]);\r\n\r\n  const changeBrandByCategory = useCallback(() => {\r\n    setBrands(optionsGetBrandsByCategory?.data?.getBrandsByCategory || []);\r\n  }, [optionsGetBrandsByCategory]);\r\n\r\n  const changeModelByBrand = useCallback(() => {\r\n    setModels(optionsGetModelsByBrand?.data?.getModelsByBrand || []);\r\n  }, [optionsGetModelsByBrand]);\r\n\r\n  const handleKeyUpCategory = (e: any) => {\r\n    if (\r\n      e.target.value.length < productForm.category.length ||\r\n      e.target.value.length === 0\r\n    ) {\r\n      setProductForm({\r\n        ...productForm,\r\n        category: \"\",\r\n        brand: \"\",\r\n        model: \"\",\r\n      });\r\n      setValueInput({\r\n        ...valueInput,\r\n        category: \"\",\r\n        brand: \"\",\r\n        model: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleKeyUpBrand = (e: any) => {\r\n    if (\r\n      e.target.value.length < productForm.brand.length ||\r\n      e.target.value.length === 0\r\n    ) {\r\n      setProductForm({ ...productForm, brand: \"\", model: \"\" });\r\n      setValueInput({\r\n        ...valueInput,\r\n        brand: \"\",\r\n        model: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleKeyUpModel = (e: any) => {\r\n    if (\r\n      e.target.value.length < productForm.model.length ||\r\n      e.target.value.length === 0\r\n    ) {\r\n      setProductForm({ ...productForm, model: \"\" });\r\n      setValueInput({\r\n        ...valueInput,\r\n        model: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (productForm.id) {\r\n      try {\r\n        await optionsUpdateProduct.updateProduct({\r\n          variables: {\r\n            productInput: {\r\n              ...productForm,\r\n              price: Number(productForm.price),\r\n              cant: Number(productForm.cant),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El producto se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateProduct.registerProduct({\r\n          variables: {\r\n            productInput: {\r\n              ...productForm,\r\n              price: Number(productForm.price),\r\n              cant: Number(productForm.cant),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El producto ha sido registrada correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dataCategorys();\r\n      changeBrandByCategory();\r\n      changeModelByBrand();\r\n    }\r\n  }, [data, dataCategorys, changeBrandByCategory, changeModelByBrand]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Autocomplete\r\n            id=\"idCategory\"\r\n            onChange={(event, value) => {\r\n              setProductForm({\r\n                ...productForm,\r\n                category: value?.name || \"\",\r\n                brand: \"\",\r\n                model: \"\",\r\n              });\r\n              setValueInput({\r\n                ...valueInput,\r\n                brand: \"\",\r\n                model: \"\",\r\n              });\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            onKeyUp={handleKeyUpCategory}\r\n            inputValue={\r\n              valueInput.category ? valueInput.category : productForm.category\r\n            }\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, category: newValue });\r\n            }}\r\n            options={categorys}\r\n            getOptionLabel={(category) => (category.name ? category.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"category\"\r\n                label=\"Categoria\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Autocomplete\r\n            id=\"idBrand\"\r\n            onChange={(event, value) => {\r\n              setProductForm({\r\n                ...productForm,\r\n                brand: value?.name || \"\",\r\n                model: \"\",\r\n              });\r\n              setValueInput({\r\n                ...valueInput,\r\n                model: \"\",\r\n              });\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            onKeyUp={handleKeyUpBrand}\r\n            inputValue={valueInput.brand ? valueInput.brand : productForm.brand}\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, brand: newValue });\r\n            }}\r\n            options={brands}\r\n            getOptionLabel={(brand) => (brand.name ? brand.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"brand\"\r\n                label=\"Marca\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Autocomplete\r\n            id=\"idModel\"\r\n            onChange={(event, value) => {\r\n              setProductForm({ ...productForm, model: value?.name || \"\" });\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            onKeyUp={handleKeyUpModel}\r\n            inputValue={valueInput.model ? valueInput.model : productForm.model}\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, model: newValue });\r\n            }}\r\n            options={models}\r\n            getOptionLabel={(model) => (model.name ? model.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                name=\"model\"\r\n                {...params}\r\n                label=\"Modelo\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Producto\"\r\n            variant=\"outlined\"\r\n            value={productForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"description\"\r\n            onChange={handleInput}\r\n            id=\"idDescription\"\r\n            label=\"Descripción\"\r\n            multiline\r\n            rows={6}\r\n            defaultValue={productForm.description}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"price\"\r\n            autoComplete=\"off\"\r\n            id=\"idPrice\"\r\n            label=\"Precio\"\r\n            variant=\"outlined\"\r\n            value={productForm.price}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"cant\"\r\n            autoComplete=\"off\"\r\n            id=\"idCant\"\r\n            label=\"Cantidad\"\r\n            variant=\"outlined\"\r\n            value={productForm.cant}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {productForm.id ? (\r\n            optionsUpdateProduct.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateProduct.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_PRODUCTS } from \"./useGetProducts\";\r\n\r\nconst DELETE_PRODUCT = gql`\r\n  mutation deleteProduct($id: String!) {\r\n    deleteProduct(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteProduct = () => {\r\n  const [deleteProduct, { error, loading }] = useMutation(DELETE_PRODUCT, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_PRODUCTS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteProduct, error, loading };\r\n};\r\n","import { Product } from \"../../interfaces/product.interface\";\r\nimport ProductForm from \"./product-form\";\r\nimport { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { useDeleteProduct } from \"../../hooks/product/useDeleteProduct\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ProductList = ({ product }: { product: Product }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const optionsProduct = useDeleteProduct();\r\n\r\n  const deleteProduct = async (id: string | undefined) => {\r\n    try {\r\n      await optionsProduct.deleteProduct({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Producto\":\r\n        return <ProductForm product={product} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar Producto\"\r\n        onClick={() => setDialog({ name: \"Producto\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"product\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar Producto\"\r\n        onClick={() => deleteProduct(product.id)}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.category!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.brand!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.model!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {formatMoney(product.price)}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n          {product.cant}\r\n        </TableCell>\r\n        <TableCell>{moment(product.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(product.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell align=\"right\">\r\n          {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          {loadAccess(PERMIT_TREE, auth, page, showOptionsForDelete)}\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={product}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, page, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport { Product } from \"../interfaces/product.interface\";\r\nimport ProductList from \"../components/product/product-list\";\r\nimport ProductForm from \"../components/product/product-form\";\r\nimport { useGetProducts } from \"../hooks/product/useGetProducts\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ProductPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetProducts();\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ProductForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setProducts(data.getProducts);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear Producto\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Producto`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ whiteSpace: \"nowrap\", marginTop: 10 }}\r\n      >\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Marca</TableCell>\r\n              <TableCell>Model</TableCell>\r\n              <TableCell>Producto</TableCell>\r\n              <TableCell>Precio</TableCell>\r\n              <TableCell>Cantidad</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"right\">Opciones</TableCell>{\" \"}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map((product) => (\r\n              <ProductList key={product.id} product={product} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_ROLES = gql`\r\n  query getRoles {\r\n    getRoles {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      modules {\r\n        id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetRoles = () => {\r\n  const { data, loading, error } = useQuery(GET_ROLES);\r\n  return { data, loading, error };\r\n};\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { MODULE_FORBIDDEN } from \"../../const\";\r\n\r\nconst RoleModuleItem = ({ module }: { module: Module }) => {\r\n  return (\r\n    <>\r\n      {module.name === MODULE_FORBIDDEN ? (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={module.name}\r\n          color=\"primary\"\r\n        />\r\n      ) : (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={module.name}\r\n          onDelete={() => alert(\"keiner\")}\r\n          color=\"primary\"\r\n        />\r\n      )}\r\n      &nbsp;\r\n    </>\r\n  );\r\n};\r\nexport default RoleModuleItem;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { GET_ROLES } from \"./useGetRoles\";\r\n\r\ninterface RoleInput {\r\n  variables: {\r\n    roleInput: Role;\r\n  };\r\n}\r\n\r\nconst CREATE_ROL = gql`\r\n  mutation registerRole($roleInput: RoleInput!) {\r\n    registerRole(roleInput: $roleInput) {\r\n      id\r\n      name\r\n      description\r\n      modules {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateRole = () => {\r\n  const [registerRole, { error, loading }] = useMutation(CREATE_ROL, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_ROLES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerRole, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { useUpdateRole } from \"../../hooks/role/useUpdateRole\";\r\nimport { useCreateRole } from \"../../hooks/role/useCreateRole\";\r\nimport Progress from \"../progress/progress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { useGetModules } from \"../../hooks/module/useGetModules\";\r\nimport { MODULE_FORBIDDEN, ROLSA } from \"../../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\ntype SelectChange = ChangeEvent<{ value: unknown } | any | HTMLSelectElement>;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst RoleForm = ({\r\n  role,\r\n  handleClose,\r\n}: {\r\n  role?: Role;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValueUpdate: Role = {\r\n    id: role?.id || \"\",\r\n    name: role?.name || \"\",\r\n    description: role?.description || \"\",\r\n  };\r\n\r\n  const initialValueCreate: Role = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const optionsUpdateRole = useUpdateRole();\r\n  const optionsCreateRole = useCreateRole();\r\n  const optionsGetModules = useGetModules();\r\n  const [roleForm, setRoleForm] = useState<Role>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [modulesSelected, setModulesSelected] = useState<Module[]>([]);\r\n  const [listModules, setListModules] = useState<Module[]>([]);\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setRoleForm({ ...roleForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setModulesSelected(e.target.value);\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const sentToAddModules = modulesSelected.map((value) => {\r\n    return { name: value };\r\n  });\r\n\r\n  function getStyles(name: any, personName: Module[], theme: Theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    if (roleForm.id) {\r\n      try {\r\n        await optionsUpdateRole.updateRole({\r\n          variables: {\r\n            roleInput: roleForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El rol se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateRole.registerRole({\r\n          variables: {\r\n            roleInput: { ...roleForm, modules: sentToAddModules },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El rol se registró correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionsGetModules.data) {\r\n      const listModulesNoModulos = optionsGetModules.data.getModules.filter(\r\n        (menu: any) => menu.name !== MODULE_FORBIDDEN\r\n      );\r\n      setListModules(listModulesNoModulos);\r\n    }\r\n  }, [optionsGetModules.data]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          {roleForm.id && roleForm.name === ROLSA ? (\r\n            \"\"\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                onChange={handleInput}\r\n                name=\"name\"\r\n                id=\"idName\"\r\n                label=\"Role\"\r\n                variant=\"outlined\"\r\n                value={roleForm.name}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"description\"\r\n              id=\"idDescription\"\r\n              label=\"Descripción\"\r\n              multiline\r\n              value={roleForm.description}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          {!initialValueUpdate.id && (\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"outlined\" fullWidth>\r\n                <InputLabel id=\"module-mutiple-chip-label\">Modulos</InputLabel>\r\n                <Select\r\n                  labelId=\"module-mutiple-chip-label\"\r\n                  id=\"module-mutiple-chip\"\r\n                  multiple\r\n                  value={modulesSelected}\r\n                  onChange={handleSelect}\r\n                  input={<Input id=\"select-multiple-chip\" />}\r\n                  renderValue={(selected) => (\r\n                    <div className={classes.chips}>\r\n                      {(selected as any[]).map((module) => {\r\n                        return (\r\n                          <Chip\r\n                            key={module}\r\n                            label={module}\r\n                            className={classes.chip}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  MenuProps={MenuProps}\r\n                >\r\n                  {listModules.map((module) =>\r\n                    auth?.role?.name === ROLSA ? (\r\n                      <MenuItem\r\n                        key={module.id}\r\n                        value={module.name}\r\n                        style={getStyles(\r\n                          module.name,\r\n                          roleForm.modules || [],\r\n                          theme\r\n                        )}\r\n                      >\r\n                        {module.name}\r\n                      </MenuItem>\r\n                    ) : (\r\n                      module.name !== MODULE_FORBIDDEN && (\r\n                        <MenuItem\r\n                          key={module.id}\r\n                          value={module.name}\r\n                          style={getStyles(\r\n                            module.name,\r\n                            roleForm.modules || [],\r\n                            theme\r\n                          )}\r\n                        >\r\n                          {module.name}\r\n                        </MenuItem>\r\n                      )\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          )}\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={() => handleClose()} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {roleForm.id ? (\r\n              optionsUpdateRole.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreateRole.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleForm;\r\n","import React, { useState } from \"react\";\r\n//tables\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n//button\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n//icon\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\n//dates\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport RoleModuleItem from \"./role-module-item\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport RoleForm from \"./rol-form\";\r\nimport ModuleTransferList from \"../module/module-transfer-list\";\r\nimport ViewModuleRoundedIcon from \"@material-ui/icons/ViewModuleRounded\";\r\nimport { PERMIT_FOUR, PERMIT_TWO, ROLSA } from \"../../const\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst RoleList = ({ role }: { role: Role }) => {\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Modulo\":\r\n        return <ModuleTransferList role={role} handleClose={handleClose} />;\r\n\r\n      case \"Rol\":\r\n        return <RoleForm role={role} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={role}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {role.name === ROLSA ? (\r\n        <TableCell align=\"center\">\r\n          <Tooltip\r\n            title=\"Asignar modulos\"\r\n            onClick={() => setDialog({ name: \"Modulo\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"modules\" size=\"small\">\r\n              <ViewModuleRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      ) : (\r\n        <TableCell align=\"right\">\r\n          <Tooltip\r\n            title=\"Asignar modulos\"\r\n            onClick={() => setDialog({ name: \"Modulo\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"modules\" size=\"small\">\r\n              <ViewModuleRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip\r\n            title=\"Editar rol\"\r\n            onClick={() => setDialog({ name: \"Rol\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"role\" size=\"small\">\r\n              <EditRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        {auth?.role?.name === ROLSA ? (\r\n          <>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {role.name}\r\n            </TableCell>\r\n            <TableCell>{role.description}</TableCell>\r\n            <TableCell>{moment(role.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            <TableCell>{moment(role.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            <TableCell align=\"center\">\r\n              {role.modules &&\r\n                role.modules.map((module) => (\r\n                  <RoleModuleItem key={module.id} module={module} />\r\n                ))}\r\n            </TableCell>\r\n            {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {role.name === ROLSA || (\r\n              <>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {role.name}\r\n                </TableCell>\r\n                <TableCell>{role.description}</TableCell>\r\n                <TableCell>\r\n                  {moment(role.createdAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(role.updatedAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {role.modules &&\r\n                    role.modules.map((module) => (\r\n                      <RoleModuleItem key={module.id} module={module} />\r\n                    ))}\r\n                </TableCell>\r\n                {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default RoleList;\r\n","import React, { useState, useEffect } from \"react\";\r\n//css library materialui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//tables\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Role } from \"../interfaces/role.interface\";\r\nimport { useGetRoles } from \"../hooks/role/useGetRoles\";\r\n//end tables\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport RoleList from \"../components/role/role-list\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RoleForm from \"../components/role/rol-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { findError } from \"../helpers/control-errors\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst RolePage = () => {\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetRoles();\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <RoleForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setRoles(data.getRoles);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialog = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Rol`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n\r\n      <Tooltip title=\"Crear Rol\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialog)}\r\n      <TableContainer style={{ whiteSpace: \"nowrap\" }} component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Rol</TableCell>\r\n              <TableCell>Descripción</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"center\">Modulos</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {roles.map((role) => (\r\n              <RoleList key={role.id} role={role} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RolePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_SERVICES = gql`\r\n  query getServices {\r\n    getServices {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetServices = () => {\r\n  const { data, error, loading } = useQuery(GET_SERVICES);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Service } from \"../../interfaces/service.interface\";\r\nimport { GET_SERVICES } from \"./useGetServices\";\r\n\r\ninterface UpdateServiceInput {\r\n  variables: {\r\n    serviceInput: Service;\r\n  };\r\n}\r\n\r\nconst UPDATE_SERVICE = gql`\r\n  mutation updateService($serviceInput: UpdateServiceInput!) {\r\n    updateService(serviceInput: $serviceInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateService = () => {\r\n  const [updateService, { error, loading }] = useMutation(UPDATE_SERVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_SERVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateService, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Service } from \"../../interfaces/service.interface\";\r\nimport { GET_SERVICES } from \"./useGetServices\";\r\n\r\ninterface CreateServiceInput {\r\n  variables: {\r\n    serviceInput: Service;\r\n  };\r\n}\r\n\r\nconst CREATE_SERVICE = gql`\r\n  mutation registerService($serviceInput: CreateServiceInput!) {\r\n    registerService(serviceInput: $serviceInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateService = () => {\r\n  const [registerService, { error, loading }] = useMutation(CREATE_SERVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_SERVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerService, error, loading };\r\n};\r\n","import { Service } from \"../../interfaces/service.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useUpdateService } from \"../../hooks/service/useUpdateService\";\r\nimport { useCreateService } from \"../../hooks/service/useCreateService\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Progress from \"../progress/progress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  service?: Service;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst ServiceForm = ({ handleClose, service }: Options) => {\r\n  const initialValueCreate: Service = {\r\n    name: \"\",\r\n    price: 0,\r\n    category: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Service = {\r\n    id: service?.id || \"\",\r\n    name: service?.name || \"\",\r\n    description: service?.description || \"\",\r\n    price: service?.price || 0,\r\n    category: service?.category?.name || \"\",\r\n  };\r\n\r\n  const [serviceForm, setServiceForm] = useState<Service>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateService = useUpdateService();\r\n  const optionsCreateService = useCreateService();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setServiceForm({\r\n      ...serviceForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setServiceForm({\r\n      ...serviceForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (serviceForm.id) {\r\n      try {\r\n        await optionsUpdateService.updateService({\r\n          variables: {\r\n            serviceInput: { ...serviceForm, price: Number(serviceForm.price) },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El servicio se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateService.registerService({\r\n          variables: {\r\n            serviceInput: { ...serviceForm, price: Number(serviceForm.price) },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El servicio ha sido registrada correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategorys(data.getCategorys);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel id=\"idCategory\">Categoria</InputLabel>\r\n            <Select\r\n              labelId=\"Categoria\"\r\n              id=\"idCategory\"\r\n              value={serviceForm.category}\r\n              onChange={handleSelect}\r\n              label=\"Categoria\"\r\n              name=\"category\"\r\n            >\r\n              {categorys.map((category) => (\r\n                <MenuItem key={category.id} value={category.name}>\r\n                  {category.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Servicio\"\r\n            variant=\"outlined\"\r\n            value={serviceForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"description\"\r\n            autoComplete=\"off\"\r\n            id=\"idDescription\"\r\n            label=\"Descripción\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            value={serviceForm.description}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"price\"\r\n            autoComplete=\"off\"\r\n            id=\"idPrice\"\r\n            label=\"Precio\"\r\n            variant=\"outlined\"\r\n            value={serviceForm.price}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {serviceForm.id ? (\r\n            optionsUpdateService.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateService.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ServiceForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_SERVICES } from \"./useGetServices\";\r\n\r\nconst DELETE_SERVICE = gql`\r\n  mutation deleteService($id: String!) {\r\n    deleteService(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteService = () => {\r\n  const [deleteService, { error, loading }] = useMutation(DELETE_SERVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_SERVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteService, error, loading };\r\n};\r\n","import { Service } from \"../../interfaces/service.interface\";\r\nimport { useState } from \"react\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport ServiceForm from \"./service-form\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { useDeleteService } from \"../../hooks/service/useDeleteService\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ServiceList = ({ service }: { service: Service }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const optionsService = useDeleteService();\r\n\r\n  const deleteService = async (id: string | undefined) => {\r\n    try {\r\n      await optionsService.deleteService({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Servicio\":\r\n        return <ServiceForm service={service} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar Servicio\"\r\n        onClick={() => setDialog({ name: \"Servicio\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"service\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar egreso\"\r\n        onClick={() => deleteService(service.id)}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {service.category!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {service.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {formatMoney(service.price)}\r\n        </TableCell>\r\n        <TableCell>{moment(service.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(service.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n\r\n        <TableCell align=\"right\">\r\n          {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          {loadAccess(PERMIT_TREE, auth, page, showOptionsForDelete)}\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={service}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, page, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport { Service } from \"../interfaces/service.interface\";\r\nimport ServiceForm from \"../components/service/service-form\";\r\nimport ServiceList from \"../components/service/service-list\";\r\nimport { useGetServices } from \"../hooks/service/useGetServices\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ServicePage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetServices();\r\n  const [services, setServices] = useState<Service[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ServiceForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setServices(data.getServices);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Servicio`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Servicio\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ whiteSpace: \"nowrap\", marginTop: 10 }}\r\n      >\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Servicio</TableCell>\r\n              <TableCell>Precio</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"right\">Opciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {services.map((service) => (\r\n              <ServiceList key={service.id} service={service} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServicePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_USERS = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      status\r\n      createdAt\r\n      updatedAt\r\n      role {\r\n        name\r\n        description\r\n        modules {\r\n          access {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetUsers = () => {\r\n  const { data, loading, error } = useQuery(GET_USERS);\r\n\r\n  return { data, loading, error };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { GET_USERS } from \"./useGetUsers\";\r\n\r\ninterface UserUpdateInput {\r\n  variables: {\r\n    userInput: User;\r\n  };\r\n}\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateRole($userInput: UserUpdateInput!) {\r\n    updateUser(userInput: $userInput) {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      role {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateUser = () => {\r\n  const [updateUser, { error, loading }] = useMutation(\r\n    UPDATE_USER\r\n    //   , {\r\n    //   refetchQueries: () => [\r\n    //     {\r\n    //       query: GET_USERS,\r\n    //     },\r\n    //   ],\r\n    // }\r\n  );\r\n\r\n  return { updateUser, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { GET_USERS } from \"./useGetUsers\";\r\n\r\ninterface UserInput {\r\n  variables: {\r\n    userInput: User;\r\n  };\r\n}\r\n\r\nconst CREATE_USER = gql`\r\n  mutation registerUser($userInput: UserInput!) {\r\n    registerUser(userInput: $userInput) {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      createdAt\r\n      updatedAt\r\n      role {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateUser = () => {\r\n  const [registerUser, { error, loading }] = useMutation(CREATE_USER, {\r\n    refetchQueries: () => [{ query: GET_USERS }],\r\n  });\r\n  return { registerUser, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useUpdateUser } from \"../../hooks/user/useUpdateUser\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { useGetRoles } from \"../../hooks/role/useGetRoles\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useCreateUser } from \"../../hooks/user/useCreateUser\";\r\nimport Progress from \"../progress/progress\";\r\nimport { ROLSA } from \"../../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\ntype SelectChange = ChangeEvent<{ value: unknown } | any | HTMLSelectElement>;\r\n\r\nconst UserForm = ({\r\n  user,\r\n  handleClose,\r\n}: {\r\n  user?: User;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValueCreate: User = {\r\n    name: \"\",\r\n    lastName: \"\",\r\n    role: {\r\n      name: \"\",\r\n    },\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: User = {\r\n    id: user?.id || \"\",\r\n    name: user?.name || \"\",\r\n    lastName: user?.lastName || \"\",\r\n    role: {\r\n      name: user?.role?.name || \"\",\r\n    },\r\n    email: user?.email || \"\",\r\n  };\r\n\r\n  const [userForm, setUserForm] = useState<User>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [listRoles, setListRoles] = useState<Role[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateUser = useUpdateUser();\r\n  const { data } = useGetRoles();\r\n  const optionsCreateUser = useCreateUser();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setUserForm({ ...userForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setUserForm({\r\n      ...userForm,\r\n      [e.target.name]: { name: e.target.value },\r\n    });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    if (userForm.id) {\r\n      try {\r\n        await optionsUpdateUser.updateUser({\r\n          variables: {\r\n            userInput: userForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El usuario se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateUser.registerUser({\r\n          variables: {\r\n            userInput: userForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El usuario ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setListRoles(data.getRoles);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"name\"\r\n              autoComplete=\"off\"\r\n              id=\"idNombres\"\r\n              label=\"Nombres\"\r\n              variant=\"outlined\"\r\n              value={userForm.name}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"lastName\"\r\n              autoComplete=\"off\"\r\n              id=\"idApellidos\"\r\n              label=\"Apellidos\"\r\n              value={userForm.lastName}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          {userForm.role?.name === ROLSA || (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"idRole\">Rol</InputLabel>\r\n                  <Select\r\n                    labelId=\"Rol\"\r\n                    id=\"idRole\"\r\n                    value={userForm.role?.name}\r\n                    onChange={handleSelect}\r\n                    label=\"Rol\"\r\n                    name=\"role\"\r\n                  >\r\n                    {listRoles.map((role) =>\r\n                      auth?.role?.name === ROLSA ? (\r\n                        <MenuItem key={role.id} value={role.name}>\r\n                          {role.name}\r\n                        </MenuItem>\r\n                      ) : (\r\n                        role.name !== ROLSA && (\r\n                          <MenuItem key={role.id} value={role.name}>\r\n                            {role.name}\r\n                          </MenuItem>\r\n                        )\r\n                      )\r\n                    )}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </>\r\n          )}\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"email\"\r\n              autoComplete=\"off\"\r\n              id=\"idEmail\"\r\n              label=\"Correo\"\r\n              value={userForm.email}\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: userForm.id ? true : false,\r\n              }}\r\n            />\r\n          </Grid>\r\n          {userForm.id ? (\r\n            \"\"\r\n          ) : (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  onChange={handleInput}\r\n                  name=\"password\"\r\n                  autoComplete=\"off\"\r\n                  id=\"idPassword\"\r\n                  label=\"Contraseña\"\r\n                  value={userForm.password}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  onChange={handleInput}\r\n                  name=\"confirmPassword\"\r\n                  autoComplete=\"off\"\r\n                  id=\"idConfirmPassword\"\r\n                  label=\"Repetir contraseña\"\r\n                  value={userForm.confirmPassword}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={() => handleClose()} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {userForm.id ? (\r\n              optionsUpdateUser.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreateUser.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst UPDATE_ACTIVATE_USER = gql`\r\n  mutation activateUser($id: String!) {\r\n    activateUser(id: $id) {\r\n      id\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_DESACTIVATE_USER = gql`\r\n  mutation desactivateUser($id: String!) {\r\n    desactivateUser(id: $id) {\r\n      id\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useActivateUser = () => {\r\n  const [activateUser, { error, loading }] = useMutation(UPDATE_ACTIVATE_USER);\r\n\r\n  return { activateUser, error, loading };\r\n};\r\n\r\nexport const useDesactivateUser = () => {\r\n  const [desactivateUser, { error, loading }] = useMutation(\r\n    UPDATE_DESACTIVATE_USER\r\n  );\r\n\r\n  return { desactivateUser, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { AuthUser } from \"../../interfaces/auth.interface\";\r\n\r\ninterface AuthChangePasswordInputToAdmin {\r\n  variables: {\r\n    authInput: AuthUser;\r\n  };\r\n}\r\n\r\ninterface AuthChangePasswordInputToUser {\r\n  variables: {\r\n    authInput: AuthUser;\r\n  };\r\n}\r\nconst UPDATE_PASSWORD_TO_ADMIN = gql`\r\n  mutation changePasswordToAdmin($authInput: AuthChangePasswordInputToAdmin!) {\r\n    changePasswordToAdmin(authInput: $authInput)\r\n  }\r\n`;\r\n\r\nconst UPDATE_PASSWORD_TO_USER = gql`\r\n  mutation changePasswordToUser($authInput: AuthChangePasswordInputToUser!) {\r\n    changePasswordToUser(authInput: $authInput)\r\n  }\r\n`;\r\n\r\n//TO ADMIN\r\nexport const useChangePasswordToAdmin = () => {\r\n  const [changePasswordToAdmin, { error, loading }] = useMutation(\r\n    UPDATE_PASSWORD_TO_ADMIN\r\n  );\r\n\r\n  return { changePasswordToAdmin, error, loading };\r\n};\r\n\r\n//TO USER\r\nexport const useChangePasswordToUser = () => {\r\n  const [changePasswordToUser, { error, loading }] = useMutation(\r\n    UPDATE_PASSWORD_TO_USER\r\n  );\r\n\r\n  return { changePasswordToUser, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport Progress from \"../progress/progress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useChangePasswordToAdmin } from \"../../hooks/password/useChangePassword\";\r\nimport { AuthUser } from \"../../interfaces/auth.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst PasswordForm = ({\r\n  user,\r\n  handleClose,\r\n}: {\r\n  user?: User;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValue: AuthUser = {\r\n    id: user?.id || \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  };\r\n\r\n  const [userForm, setUserForm] = useState<AuthUser>(initialValue);\r\n  const dispatch = useDispatch();\r\n  const { changePasswordToAdmin, error, loading } = useChangePasswordToAdmin();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setUserForm({ ...userForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    try {\r\n      await changePasswordToAdmin({\r\n        variables: {\r\n          authInput: userForm,\r\n        },\r\n      });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"La contraseña ha sido cambiada correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        {/* <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"currentPassword\"\r\n            autoComplete=\"off\"\r\n            id=\"idPassword\"\r\n            label=\"Contraseña Actual\"\r\n            variant=\"outlined\"\r\n            value={userForm.currentPassword}\r\n          />\r\n        </Grid> */}\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"newPassword\"\r\n            autoComplete=\"off\"\r\n            id=\"idNewPassword\"\r\n            label=\"Nueva Contraseña\"\r\n            value={userForm.newPassword}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"confirmNewPassword\"\r\n            autoComplete=\"off\"\r\n            id=\"idConfirmNewPassword\"\r\n            label=\"Confirmar nueva contraseña\"\r\n            value={userForm.confirmNewPassword}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Actualizar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PasswordForm;\r\n","import React, { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport RemoveRoundedIcon from \"@material-ui/icons/RemoveRounded\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport UserForm from \"./user-form\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport {\r\n  useActivateUser,\r\n  useDesactivateUser,\r\n} from \"../../hooks/user/useUpdateAccessToLogin\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO, ROLSA } from \"../../const\";\r\nimport LockRoundedIcon from \"@material-ui/icons/LockRounded\";\r\nimport PasswordForm from \"../password/password-form\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst UserList = ({ user }: { user: User }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n  const optionsActivate = useActivateUser();\r\n  const optionsDesactivate = useDesactivateUser();\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const desactivateUser = async () => {\r\n    try {\r\n      await optionsDesactivate.desactivateUser({\r\n        variables: { id: user.id },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Usuario\":\r\n        return <UserForm user={user} handleClose={handleClose} />;\r\n\r\n      case \"Contraseña\":\r\n        return <PasswordForm user={user} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={user}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        {user.role?.name === ROLSA ? (\r\n          \"\"\r\n        ) : (\r\n          <>\r\n            {user.status === 2 ? (\r\n              <Tooltip\r\n                title=\"Activar usuario\"\r\n                onClick={() =>\r\n                  optionsActivate.activateUser({\r\n                    variables: { id: user.id },\r\n                  })\r\n                }\r\n              >\r\n                <IconButton\r\n                  aria-label=\"desactivate\"\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <RemoveRoundedIcon style={{ color: \"#F44336\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : user.status === 1 ? (\r\n              <Tooltip title=\"Desactivar usuario\" onClick={desactivateUser}>\r\n                <IconButton\r\n                  aria-label=\"activate\"\r\n                  size=\"small\"\r\n                  style={{ color: \"#4CAF50\" }}\r\n                >\r\n                  <CheckRoundedIcon style={{ color: \"#4CAF50\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <Tooltip\r\n          title=\"Editar usuario\"\r\n          onClick={() => setDialog({ name: \"Usuario\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        <Tooltip\r\n          title=\"Cambiar contraseña\"\r\n          onClick={() => setDialog({ name: \"Contraseña\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"password\" size=\"small\">\r\n            <LockRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        {auth?.role?.name === ROLSA ? (\r\n          <>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {user.name} {user.lastName}\r\n            </TableCell>\r\n            <TableCell>{user.role?.name}</TableCell>\r\n            <TableCell>{user.email}</TableCell>\r\n            <TableCell>{moment(user.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            <TableCell>{moment(user.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {user.role?.name === ROLSA || (\r\n              <>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {user.name} {user.lastName}\r\n                </TableCell>\r\n                <TableCell>{user.role?.name}</TableCell>\r\n                <TableCell>{user.email}</TableCell>\r\n                <TableCell>\r\n                  {moment(user.createdAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(user.updatedAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useGetUsers } from \"../hooks/user/useGetUsers\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport UserList from \"../components/user/user-list\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport UserForm from \"../components/user/user-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { findError } from \"../helpers/control-errors\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst UserPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const { data, loading, error } = useGetUsers();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <UserForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setUsers(data.getUsers);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialog = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Usuario`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Usuario\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialog)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ marginTop: 10, whiteSpace: \"nowrap\" }}\r\n      >\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nombres</TableCell>\r\n              <TableCell>Rol</TableCell>\r\n              <TableCell>Correo</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users.map((user) => (\r\n              <UserList key={user.id} user={user} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_VEHICLES = gql`\r\n  query getVehicles {\r\n    getVehicles {\r\n      id\r\n      customer {\r\n        id\r\n        name\r\n        lastName\r\n        document\r\n        numDocument\r\n      }\r\n      device {\r\n        id\r\n        name\r\n      }\r\n      billing {\r\n        id\r\n        name\r\n        day\r\n      }\r\n      plate\r\n      nroGPS\r\n      billigStart\r\n      billigEnd\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetVehicles = () => {\r\n  const { data, error, loading } = useQuery(GET_VEHICLES);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_VEHICLES } from \"./useGetVehicle\";\r\n\r\nconst DELETE_VEHICLE = gql`\r\n  mutation deleteVehicle($id: String!) {\r\n    deleteVehicle(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteVehicle = () => {\r\n  const [deleteVehicle, { error, loading }] = useMutation(DELETE_VEHICLE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_VEHICLES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteVehicle, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Vehicle } from \"../../interfaces/vehicle.interface\";\r\nimport { GET_VEHICLES } from \"./useGetVehicle\";\r\n\r\ninterface CreateVehicleInput {\r\n  variables: {\r\n    vehicleInput: Vehicle;\r\n  };\r\n}\r\n\r\nconst CREATE_DEVICE = gql`\r\n  mutation registerVehicle($vehicleInput: CreateVehicleInput!) {\r\n    registerVehicle(vehicleInput: $vehicleInput) {\r\n      id\r\n      customer {\r\n        id\r\n        name\r\n      }\r\n      device {\r\n        id\r\n        name\r\n      }\r\n      billing {\r\n        id\r\n        name\r\n      }\r\n      plate\r\n      nroGPS\r\n      billigStart\r\n      billigEnd\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateVehicle = () => {\r\n  const [registerVehicle, { error, loading }] = useMutation(CREATE_DEVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_VEHICLES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerVehicle, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Vehicle } from \"../../interfaces/vehicle.interface\";\r\nimport { GET_VEHICLES } from \"./useGetVehicle\";\r\n\r\ninterface UpdateVehicleInput {\r\n  variables: {\r\n    vehicleInput: Vehicle;\r\n  };\r\n}\r\n\r\nconst UPDATE_DEVICE = gql`\r\n  mutation updateVehicle($vehicleInput: UpdateVehicleInput!) {\r\n    updateVehicle(vehicleInput: $vehicleInput) {\r\n      id\r\n      customer {\r\n        id\r\n        name\r\n      }\r\n      device {\r\n        id\r\n        name\r\n      }\r\n      billing {\r\n        id\r\n        name\r\n      }\r\n      plate\r\n      nroGPS\r\n      billigStart\r\n      billigEnd\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateVehicle = () => {\r\n  const [updateVehicle, { error, loading }] = useMutation(UPDATE_DEVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_VEHICLES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateVehicle, error, loading };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useCreateVehicle } from \"../../hooks/vehicle/useCreateVehicle\";\r\nimport { useUpdateVehicle } from \"../../hooks/vehicle/useUpdateVehicle\";\r\nimport { Vehicle } from \"../../interfaces/vehicle.interface\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport moment from \"moment\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Customer } from \"../../interfaces/customer.interface\";\r\nimport { useGetCustomers } from \"../../hooks/customer/useGetCustomer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Progress from \"../progress/progress\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { Device } from \"../../interfaces/device.interface\";\r\nimport { Billing } from \"../../interfaces/billing.interface\";\r\nimport { useGetDevices } from \"../../hooks/device/useGetDevice\";\r\nimport { useGetBilling } from \"../../hooks/billing/useGetBilling\";\r\nimport RedditTextField from \"../textfield/reddit\";\r\n\r\ninterface Option {\r\n  handleClose?: () => void;\r\n  vehicle?: Vehicle;\r\n}\r\n\r\nconst VehicleForm = ({ handleClose, vehicle }: Option) => {\r\n  const now = moment().utc().local().format(\"YYYY-MM-DD\");\r\n\r\n  const initialStateCreate: Vehicle = {\r\n    customer: \"\",\r\n    device: \"\",\r\n    billing: \"\",\r\n    plate: \"\",\r\n    nroGPS: \"\",\r\n    billigStart: now,\r\n  };\r\n\r\n  const initialStateUpdate: Vehicle = {\r\n    id: vehicle?.id || \"\",\r\n    customer: vehicle?.customer?.id || \"\",\r\n    device: vehicle?.device?.name || \"\",\r\n    billing: vehicle?.billing?.name || \"\",\r\n    plate: vehicle?.plate || \"\",\r\n    nroGPS: vehicle?.nroGPS || \"\",\r\n    billigStart: moment(vehicle?.billigStart).format(\"YYYY-MM-DD\") || now,\r\n  };\r\n\r\n  const [vehicleForm, setVehicleForm] = useState<Vehicle>(\r\n    initialStateUpdate.id ? initialStateUpdate : initialStateCreate\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const optionsUpdate = useUpdateVehicle();\r\n  const optionsCreate = useCreateVehicle();\r\n\r\n  const [customers, setCustomers] = useState<Customer[]>([]);\r\n  const [customer, setCustomer] = useState<Customer>({\r\n    name: \"\",\r\n    lastName: \"\",\r\n    document: \"\",\r\n    numDocument: \"\",\r\n    cellphone_1: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [devices, setDevices] = useState<Device[]>([]);\r\n  const [device, setDevice] = useState<Device>({\r\n    name: \"\",\r\n  });\r\n  const [billings, setBillings] = useState<Billing[]>([]);\r\n  const [billing, setBilling] = useState<Billing>({\r\n    name: \"\",\r\n  });\r\n  const optionCustomer = useGetCustomers();\r\n  const optionDevice = useGetDevices();\r\n  const optionBilling = useGetBilling();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setVehicleForm({\r\n      ...vehicleForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (vehicleForm.id) {\r\n      try {\r\n        await optionsUpdate.updateVehicle({\r\n          variables: {\r\n            vehicleInput: vehicleForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El vehiculo se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreate.registerVehicle({\r\n          variables: {\r\n            vehicleInput: vehicleForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El vehiculo ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionCustomer.data) {\r\n      setCustomers(optionCustomer?.data?.getCustomer);\r\n    }\r\n    if (optionDevice.data) {\r\n      setDevices(optionDevice?.data?.getDevices);\r\n    }\r\n    if (optionBilling.data) {\r\n      setBillings(optionBilling?.data?.getBillings);\r\n    }\r\n    if (customers[0]?.name) {\r\n      setCustomer({\r\n        ...customer,\r\n        name: vehicleForm.id ? vehicle?.customer.name : customers[0]?.name,\r\n        lastName: vehicleForm.id\r\n          ? vehicle?.customer.lastName\r\n          : customers[0]?.lastName,\r\n      });\r\n      setDevice({\r\n        ...device,\r\n        name: vehicleForm.id ? vehicle?.device.name : devices[0]?.name,\r\n      });\r\n      setBilling({\r\n        ...billing,\r\n        name: vehicleForm.id ? vehicle?.billing.name : billings[0]?.name,\r\n      });\r\n      setVehicleForm({\r\n        ...vehicleForm,\r\n        customer: vehicleForm.id ? vehicle?.customer.id : customers[0]?.id,\r\n        device: vehicleForm.id ? vehicle?.device.name : devices[0]?.name,\r\n        billing: vehicleForm.id ? vehicle?.billing.name : billings[0]?.name,\r\n      });\r\n    }\r\n  }, [\r\n    optionCustomer.data,\r\n    optionDevice.data,\r\n    optionBilling.data,\r\n    customers[0]?.name,\r\n    devices[0]?.name,\r\n    billings[0]?.name,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"idCustomer\"\r\n              value={{\r\n                name: customer?.name,\r\n                lastName: customer?.lastName,\r\n                document: customer?.document,\r\n                numDocument: customer?.numDocument,\r\n                cellphone_1: customer?.cellphone_1,\r\n                username: customer?.username,\r\n                password: customer?.password,\r\n              }}\r\n              onChange={(event, value) => {\r\n                setCustomer({\r\n                  ...customer,\r\n                  name: value ? value!.name : customers[0]?.name,\r\n                  lastName: value ? value!.lastName : customers[0]?.lastName,\r\n                });\r\n\r\n                setVehicleForm({\r\n                  ...vehicleForm,\r\n                  customer: value ? `${value!.id}` : `${customers[0]?.id}`,\r\n                });\r\n              }}\r\n              options={customers}\r\n              getOptionLabel={(customer) =>\r\n                customer.name ? `${customer.name} ${customer.lastName}` : \"\"\r\n              }\r\n              getOptionSelected={(option, value) => {\r\n                if (value.name) {\r\n                  return (\r\n                    `${option.name} ${option.lastName}` ===\r\n                    `${value.name} ${value.lastName}`\r\n                  );\r\n                }\r\n                value = {\r\n                  ...value,\r\n                  name: customers[0]?.name,\r\n                  lastName: customers[0]?.lastName,\r\n                };\r\n                return (\r\n                  `${option.name} ${option.lastName}` ===\r\n                  `${value.name} ${value.lastName}`\r\n                );\r\n              }}\r\n              loading={optionCustomer.loading}\r\n              loadingText=\"Cargando...\"\r\n              noOptionsText=\"No hay resultados\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  name=\"customer\"\r\n                  label=\"Cliente\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"idDevice\"\r\n              value={{\r\n                name: device?.name,\r\n              }}\r\n              onChange={(event, value) => {\r\n                setDevice({\r\n                  ...device,\r\n                  name: value ? value!.name : devices[0]?.name,\r\n                });\r\n\r\n                setVehicleForm({\r\n                  ...vehicleForm,\r\n                  device: value ? `${value!.name}` : `${devices[0]?.name}`,\r\n                });\r\n              }}\r\n              options={devices}\r\n              getOptionLabel={(device) => (device.name ? device.name : \"\")}\r\n              getOptionSelected={(option, value) => {\r\n                if (value.name) {\r\n                  return option.name === value.name;\r\n                }\r\n                value = {\r\n                  ...value,\r\n                  name: devices[0]?.name,\r\n                };\r\n                return option.name === value.name;\r\n              }}\r\n              loading={optionDevice.loading}\r\n              loadingText=\"Cargando...\"\r\n              noOptionsText=\"No hay resultados\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  name=\"device\"\r\n                  label=\"Dispositivo\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"idBilling\"\r\n              value={{\r\n                name: billing?.name,\r\n              }}\r\n              onChange={(event, value) => {\r\n                setBilling({\r\n                  ...billing,\r\n                  name: value ? value!.name : billings[0]?.name,\r\n                });\r\n\r\n                setVehicleForm({\r\n                  ...vehicleForm,\r\n                  billing: value ? `${value!.name}` : `${billings[0]?.name}`,\r\n                });\r\n              }}\r\n              options={billings}\r\n              getOptionLabel={(billing) => (billing.name ? billing.name : \"\")}\r\n              getOptionSelected={(option, value) => {\r\n                if (value.name) {\r\n                  return option.name === value.name;\r\n                }\r\n                value = {\r\n                  ...value,\r\n                  name: billings[0]?.name,\r\n                };\r\n                return option.name === value.name;\r\n              }}\r\n              loading={optionBilling.loading}\r\n              loadingText=\"Cargando...\"\r\n              noOptionsText=\"No hay resultados\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  name=\"billing\"\r\n                  label=\"Plan de facturación\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"plate\"\r\n              autoComplete=\"off\"\r\n              id=\"idPlate\"\r\n              label=\"Placa\"\r\n              variant=\"filled\"\r\n              value={vehicleForm.plate}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"text\"\r\n              onChange={handleInput}\r\n              name=\"nroGPS\"\r\n              autoComplete=\"off\"\r\n              id=\"idNro\"\r\n              label=\"Nro de GPS\"\r\n              variant=\"filled\"\r\n              value={vehicleForm.nroGPS}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <RedditTextField\r\n              fullWidth\r\n              type=\"date\"\r\n              onChange={handleInput}\r\n              name=\"billigStart\"\r\n              autoComplete=\"off\"\r\n              id=\"idBilligStart\"\r\n              label=\"Fecha de inicio\"\r\n              variant=\"filled\"\r\n              value={vehicleForm.billigStart}\r\n            />\r\n          </Grid>\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {vehicleForm.id ? (\r\n              optionsUpdate.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreate.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VehicleForm;\r\n","import { Renew } from \"../../interfaces/renewinterface\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_RENEWS } from \"./useGetRenew\";\r\nimport { GET_VEHICLES } from \"../vehicle/useGetVehicle\";\r\n\r\ninterface CreateRenewInput {\r\n  variables: {\r\n    renewInput: Renew;\r\n  };\r\n}\r\n\r\nconst CREATE_RENEW = gql`\r\n  mutation registerRenew($renewInput: CreateRenewInput!) {\r\n    registerRenew(renewInput: $renewInput) {\r\n      id\r\n      registeredBy {\r\n        id\r\n        name\r\n        lastName\r\n      }\r\n      updatedBy {\r\n        id\r\n        name\r\n        lastName\r\n      }\r\n      vehicle {\r\n        id\r\n        plate\r\n      }\r\n      billing {\r\n        id\r\n        name\r\n      }\r\n      expirationDate\r\n      renovationStart\r\n      renovationEnd\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateRenew = () => {\r\n  const [registerRenew, { error, loading }] = useMutation(CREATE_RENEW, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_VEHICLES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerRenew, error, loading };\r\n};\r\n","import { gql, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst BILLING_BY_NAME = gql`\r\n  query getBillingByName($name: String!) {\r\n    getBillingByName(name: $name) {\r\n      id\r\n      name\r\n      day\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useBillingByName = () => {\r\n  const [getBillingByName, { data, error, loading }] =\r\n    useLazyQuery(BILLING_BY_NAME);\r\n\r\n  return { getBillingByName, data, error, loading };\r\n};\r\n","import { Vehicle } from \"../../interfaces/vehicle.interface\";\r\nimport { Button, DialogActions, Divider } from \"@material-ui/core\";\r\nimport { useCreateRenew } from \"../../hooks/renew/useCreateRenew\";\r\nimport { Renew } from \"../../interfaces/renewinterface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { startOfDay, add } from \"date-fns\";\r\nimport SaveRoundedIcon from \"@material-ui/icons/SaveRounded\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { Billing } from \"../../interfaces/billing.interface\";\r\nimport { useGetBilling } from \"../../hooks/billing/useGetBilling\";\r\nimport { SelectChange } from \"../../lib/types\";\r\nimport { useBillingByName } from \"../../hooks/billing/useGetBillingByName\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport Progress from \"../progress/progress\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  vehicle: Vehicle;\r\n}\r\n\r\nconst RenewForm = ({ handleClose, vehicle }: Options) => {\r\n  const [isActive, setActive] = useState<boolean>(false);\r\n  const [billings, setBillings] = useState<Billing[]>([]);\r\n  const dispatch = useDispatch();\r\n  const [renew, setRenew] = useState<Renew>({\r\n    vehicle: vehicle.plate,\r\n    billing: vehicle.billing.name,\r\n  });\r\n\r\n  const [state, setState] = useState({\r\n    day: vehicle.billing.day,\r\n  });\r\n\r\n  const optionsBillings = useGetBilling();\r\n  const optionBilling = useBillingByName();\r\n  const optionsCreate = useCreateRenew();\r\n\r\n  const today = startOfDay(new Date());\r\n  const newDate = add(today, { days: state.day });\r\n\r\n  const getBilling = async (name: string) => {\r\n    try {\r\n      await optionBilling.getBillingByName({\r\n        variables: {\r\n          name: name,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: SelectChange) => {\r\n    setRenew({ ...renew, billing: event.target.value });\r\n  };\r\n\r\n  const registerRenew = async () => {\r\n    try {\r\n      await optionsCreate.registerRenew({\r\n        variables: {\r\n          renewInput: renew,\r\n        },\r\n      });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"Se ha renovado correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionsBillings.data) {\r\n      setBillings(optionsBillings.data.getBillings);\r\n    }\r\n    if (optionBilling.data) {\r\n      setState({ ...state, day: optionBilling.data.getBillingByName.day });\r\n    }\r\n  }, [optionsBillings.data, optionBilling.data]);\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        Estas apunto de renovar su inscripción del vehiculo{\" \"}\r\n        <strong>{vehicle.plate}</strong> que pertenece a{\" \"}\r\n        <strong>\r\n          {vehicle.customer.name} {vehicle.customer.lastName}\r\n        </strong>{\" \"}\r\n        con número de <strong>{vehicle.customer.document}</strong>,{\" \"}\r\n        <strong>{vehicle.customer.numDocument}</strong>.\r\n      </p>\r\n      <br />\r\n      <Divider />\r\n      <br />\r\n      {isActive ? (\r\n        <FormControl variant=\"outlined\" style={{ width: 300 }}>\r\n          <InputLabel id=\"idBilling-label\">Plan de facturación</InputLabel>\r\n          <Select\r\n            labelId=\"idBilling-label\"\r\n            id=\"idBilling\"\r\n            value={renew.billing}\r\n            onChange={handleChange}\r\n            label=\"Age\"\r\n          >\r\n            {billings.map((billing) => (\r\n              <MenuItem key={billing.id} value={billing.name}>\r\n                {billing.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      ) : (\r\n        <>\r\n          <label>\r\n            {renew.billing !== vehicle.billing.name ? (\r\n              <label style={{ background: \"yellow\" }}>Cambiado a</label>\r\n            ) : (\r\n              \"Actualmente tiene\"\r\n            )}\r\n          </label>{\" \"}\r\n          {renew.billing}\r\n        </>\r\n      )}{\" \"}\r\n      <Tooltip\r\n        title=\"Editar plan de facturación\"\r\n        onClick={() => {\r\n          setActive(!isActive);\r\n          getBilling(renew.billing);\r\n        }}\r\n      >\r\n        <IconButton aria-label=\"vehicle\" size=\"small\" style={{ color: \"blue\" }}>\r\n          {isActive ? \"Guardar\" : \"Editar\"}\r\n          {isActive ? <SaveRoundedIcon /> : <EditRoundedIcon />}\r\n        </IconButton>\r\n      </Tooltip>\r\n      <br />\r\n      <br />\r\n      <div style={{ width: \"100%\", height: \"auto\" }}>\r\n        <div style={{ width: \"50%\", float: \"left\" }}>\r\n          <label>Fecha de caducidad</label>{\" \"}\r\n        </div>\r\n        <div style={{ width: \"50%\", float: \"left\" }}>\r\n          {moment(vehicle.billigEnd).format(\"DD/MM/YYYY\")}\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <Divider />\r\n      <br />\r\n      <div\r\n        style={{\r\n          filter: isActive ? \"blur(4px)\" : \"blur(0)\",\r\n          userSelect: isActive ? \"none\" : \"text\",\r\n        }}\r\n      >\r\n        <div style={{ width: \"100%\", height: \"auto\" }}>\r\n          <div style={{ width: \"50%\", float: \"left\", backgroundColor: \"#fff\" }}>\r\n            Renueva desde\r\n          </div>\r\n          <div style={{ width: \"50%\", float: \"left\" }}>\r\n            {moment().format(\"DD/MM/YYYY\")}\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\", height: \"auto\" }}>\r\n          <div style={{ width: \"50%\", float: \"left\", backgroundColor: \"#fff\" }}>\r\n            &nbsp;\r\n          </div>\r\n          <div style={{ width: \"50%\", float: \"left\" }}>\r\n            <strong>+</strong> {state.day} días\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\", height: \"auto\" }}>\r\n          <div style={{ width: \"50%\", float: \"left\", backgroundColor: \"#fff\" }}>\r\n            Renovando hasta\r\n          </div>\r\n          <div style={{ width: \"50%\", float: \"left\" }}>\r\n            {moment(newDate).format(\"DD/MM/YYYY\")}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DialogActions style={{ width: \"100%\" }}>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancelar\r\n        </Button>\r\n        {optionsCreate.loading ? (\r\n          <Progress />\r\n        ) : (\r\n          <Button\r\n            onClick={registerRenew}\r\n            color=\"primary\"\r\n            autoFocus\r\n            disabled={isActive ? true : false}\r\n            variant=\"contained\"\r\n          >\r\n            Aceptar\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RenewForm;\r\n","import { Vehicle } from \"../../interfaces/vehicle.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport moment from \"moment\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { useState } from \"react\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport { useDeleteVehicle } from \"../../hooks/vehicle/useDeleteVehicle\";\r\nimport VehicleForm from \"./vehicle-form\";\r\nimport AutorenewRoundedIcon from \"@material-ui/icons/AutorenewRounded\";\r\nimport RenewForm from \"../renew/renew-form\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst VehicleList = ({ vehicle }: { vehicle: Vehicle }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const optionsVehicle = useDeleteVehicle();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Vehiculo\":\r\n        return <VehicleForm vehicle={vehicle} handleClose={handleClose} />;\r\n\r\n      case \"Renovar\":\r\n        return <RenewForm vehicle={vehicle} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const deleteVehicle = async (id: string | undefined) => {\r\n    try {\r\n      await optionsVehicle.deleteVehicle({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar vehiculo\"\r\n        onClick={() => deleteVehicle(vehicle.id)}\r\n      >\r\n        <IconButton aria-label=\"vehicle\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar vehiclo\"\r\n        onClick={() => setDialog({ name: \"Vehiculo\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"vehicle\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {vehicle.customer.name} {vehicle.customer.lastName}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {vehicle.device.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {vehicle.billing.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {vehicle.plate}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {vehicle.nroGPS}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n          {moment(vehicle.billigStart).format(\"DD/MM/YYYY\")}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n          {moment(vehicle.billigEnd).format(\"DD/MM/YYYY\")}\r\n        </TableCell>\r\n        <TableCell>{moment(vehicle.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(vehicle.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell align=\"right\">\r\n          {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          {loadAccess(PERMIT_TREE, auth, page, showOptionsForDelete)}\r\n          <Tooltip\r\n            title=\"Renovar vehiculo\"\r\n            onClick={() => setDialog({ name: \"Renovar\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"renew\" size=\"small\">\r\n              <AutorenewRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={vehicle}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, page, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VehicleList;\r\n","import Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport VehicleList from \"../components/vehicle/vehicle-list\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { Vehicle } from \"../interfaces/vehicle.interface\";\r\nimport { useGetVehicles } from \"../hooks/vehicle/useGetVehicle\";\r\nimport VehicleForm from \"../components/vehicle/vehicle-form\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { useState, useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst VehiclesPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const [vehicles, setVehicles] = useState<Vehicle[]>([]);\r\n  const { data, loading, error } = useGetVehicles();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <VehicleForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setVehicles(data.getVehicles);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear vehiculo\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Vehiculo`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ whiteSpace: \"nowrap\", marginTop: 10 }}\r\n      >\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Cliente</TableCell>\r\n              <TableCell>Dispositivo</TableCell>\r\n              <TableCell>Plan</TableCell>\r\n              <TableCell>Placa</TableCell>\r\n              <TableCell>Nro GPS</TableCell>\r\n              <TableCell>Fecha de instalación</TableCell>\r\n              <TableCell>Fecha de termino</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"right\">Opciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {vehicles.map((vehicle) => (\r\n              <VehicleList key={vehicle.id} vehicle={vehicle} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VehiclesPage;\r\n","import React, { createElement } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\nimport NoMatch from \"../pages/404.page\";\r\nimport BillingPage from \"../pages/billing.page\";\r\nimport BrandPage from \"../pages/brand.page\";\r\nimport CategooryPage from \"../pages/category.page\";\r\nimport CheckMoneyPage from \"../pages/check-money.page\";\r\nimport CheckProducts from \"../pages/check-products\";\r\nimport CustomerPage from \"../pages/customer.page\";\r\nimport DevicePage from \"../pages/device.page\";\r\nimport EgressPage from \"../pages/egress.page\";\r\nimport IngressPage from \"../pages/ingress.page\";\r\nimport ModelPage from \"../pages/model.page\";\r\nimport ModulePage from \"../pages/module.page\";\r\nimport ProductPage from \"../pages/product.page\";\r\nimport RolePage from \"../pages/role.page\";\r\nimport ServicePage from \"../pages/service.page\";\r\nimport SummaryBoxPage from \"../pages/summary-box.page\";\r\nimport UserPage from \"../pages/user.page\";\r\nimport VehiclesPage from \"../pages/vehicles.page\";\r\nimport { getLocal } from \"./local-storage\";\r\n\r\ninterface RootState {\r\n  page: {\r\n    user: {\r\n      link: string;\r\n      page: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const {\r\n    page: {\r\n      user: { link, page },\r\n    },\r\n  } = state;\r\n  return { link, page };\r\n};\r\n\r\nconst ItemSwitch = ({ link, page }: any) => {\r\n  const location = useLocation();\r\n  const formatedLink = location.pathname.replace(\"/\", \"\");\r\n\r\n  const PrivateRoute = ({ component, toLogin, ...rest }: any) => {\r\n    const routeComponent = (props: any) => {\r\n      switch (toLogin) {\r\n        case true:\r\n          return getLocal(\"accessToken\") ? (\r\n            <Redirect to={{ pathname: \"/\" }} />\r\n          ) : (\r\n            createElement(component, props)\r\n          );\r\n\r\n        case false:\r\n          return getLocal(\"accessToken\") ? (\r\n            createElement(component, props)\r\n          ) : (\r\n            <Redirect to={{ pathname: \"/\" }} />\r\n          );\r\n      }\r\n    };\r\n\r\n    return <Route {...rest} render={routeComponent} />;\r\n  };\r\n\r\n  const PAGES = (page: string) => {\r\n    switch (page) {\r\n      case \"DASHBOARD\":\r\n        const Home = () => {\r\n          return <h1>Bienvenido</h1>;\r\n        };\r\n        return Home;\r\n\r\n      case \"MODULOS\":\r\n        const Modulos = () => <ModulePage />;\r\n        return Modulos;\r\n\r\n      case \"ROLES\":\r\n        const Roles = () => <RolePage />;\r\n        return Roles;\r\n\r\n      case \"USUARIOS\":\r\n        const Usuarios = () => <UserPage />;\r\n        return Usuarios;\r\n\r\n      case \"CATEGORIAS\":\r\n        const Categorias = () => <CategooryPage />;\r\n        return Categorias;\r\n\r\n      case \"MARCAS\":\r\n        const Marcas = () => <BrandPage />;\r\n        return Marcas;\r\n\r\n      case \"MODELOS\":\r\n        const Modelos = () => <ModelPage />;\r\n        return Modelos;\r\n\r\n      case \"PRODUCTOS\":\r\n        const Productos = () => <ProductPage />;\r\n        return Productos;\r\n\r\n      case \"SERVICIOS\":\r\n        const Servicios = () => <ServicePage />;\r\n        return Servicios;\r\n\r\n      case \"INGRESOS\":\r\n        const Ingresos = () => <IngressPage />;\r\n        return Ingresos;\r\n\r\n      case \"EGRESOS\":\r\n        const Egresos = () => <EgressPage />;\r\n        return Egresos;\r\n\r\n      case \"RESUMEN-CAJA\":\r\n        const ResumenCaja = () => <SummaryBoxPage />;\r\n        return ResumenCaja;\r\n\r\n      case \"CONSULTAR-CAJA\":\r\n        const ConsultarCaja = () => <CheckMoneyPage />;\r\n        return ConsultarCaja;\r\n\r\n      case \"CONSULTAR-PRECIOS\":\r\n        const ConsultarPrecios = () => <CheckProducts />;\r\n        return ConsultarPrecios;\r\n\r\n      case \"CLIENTES\":\r\n        const Clientes = () => <CustomerPage />;\r\n        return Clientes;\r\n\r\n      case \"VEHICULOS\":\r\n        const Vehiculos = () => <VehiclesPage />;\r\n        return Vehiculos;\r\n\r\n      case \"DISPOSITIVOS\":\r\n        const Dispositivos = () => <DevicePage />;\r\n        return Dispositivos;\r\n\r\n      case \"PLAN-DE-FACTURACION\":\r\n        const Billing = () => <BillingPage />;\r\n        return Billing;\r\n\r\n      default:\r\n        const ERROR = () => <NoMatch />;\r\n        return ERROR;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {link === formatedLink || link === location.pathname ? (\r\n        <PrivateRoute\r\n          exact\r\n          path={`/${link}`}\r\n          toLogin={false}\r\n          component={PAGES(`${page}`)}\r\n        />\r\n      ) : (\r\n        <PrivateRoute toLogin={false} path=\"*\" component={NoMatch} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n   {menu.link === formatedLink ? (\r\n        <>\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/caja\" toLogin={false} component={Caja} />\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Switch>\r\n            <Route path=\"*\" component={NoMatch} />\r\n          </Switch>\r\n        </>\r\n      )}\r\n * \r\n */\r\nexport default connect(mapStateToProps, null)(ItemSwitch);\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ItemSwitch from \"./item-switch.component\";\r\n\r\nconst SwitchContainer = () => {\r\n  return (\r\n    <Switch>\r\n      <ItemSwitch />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default SwitchContainer;\r\n","import SwitchContainer from \"../../lib/switch-container\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./wrapper.css\";\r\n\r\nconst Wrapper = () => {\r\n  const { module, page, name } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const firsCaracter: String = name?.charAt(0).toUpperCase();\r\n  const restCaracter: String = name?.substr(1, name?.length);\r\n  const subTitle: String = `${firsCaracter}${restCaracter.toLowerCase()}`;\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"content-wrapper-header items-center\">\r\n          <h1>{name.toUpperCase()}</h1>\r\n          <ol>\r\n            <li className=\"list-style-none text-active\">\r\n              <strong>{module}</strong>\r\n            </li>\r\n            <li className=\"list-style-none text-inactive\">{subTitle}</li>\r\n          </ol>\r\n        </div>\r\n        <div className=\"content-wrapper-main\">\r\n          <SwitchContainer />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"center\">\r\n        <p>\r\n          © 2020-2021 by{\" \"}\r\n          <a\r\n            href=\"https://kemaytechnology.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Kemay Technology\r\n          </a>\r\n          . Todos los derechos reservados. Si tuviese algún inconveniente por\r\n          favor contactarnos al siguiente correo:\r\n          <a\r\n            href=\"mailto:dperez@kemaytechnology.com\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            dperez@kemaytechnology.com\r\n          </a>\r\n          <br /> Version: 0.0.1 | Powered by\r\n          <a\r\n            href=\"http://github.com/davisperezg\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            @davisperezg\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const LINK_USER = \"@page/LINK_USER\";\r\n\r\nexport const setLink =\r\n  (module: string, link: string, name: string) => async (dispatch: any) => {\r\n    await dispatch({\r\n      type: LINK_USER,\r\n      payload: {\r\n        link,\r\n        module,\r\n        page: link === \"/\" ? \"DASHBOARD\" : link.toUpperCase(),\r\n        name,\r\n      },\r\n    });\r\n  };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MENU_FORBIDDEN, ROLSA } from \"../../const\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { setLink } from \"../../store/page/action\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\n/** #1\r\n * @param { name, link }: Menu = {}\r\n * @returns name, link\r\n **/\r\n\r\n/** #2\r\n * @param { menu }: {menu: Menu}\r\n * @returns menu.name, menu.link\r\n **/\r\n\r\n/** #3\r\n * menu:Menu\r\n * const {name, link} = menu\r\n * @returns name, link\r\n **/\r\n\r\nconst ListItemMenus = ({\r\n  menu,\r\n  setLink,\r\n  module,\r\n}: {\r\n  menu: Menu;\r\n  setLink: any;\r\n  module: Module;\r\n}) => {\r\n  const history = useHistory();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const goToPage = () => {\r\n    setLink(module.name, menu.link, menu.name);\r\n    document.title = `RPUM - ${menu.link.toUpperCase()}`;\r\n    history.push(`/${menu.link}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {auth?.role?.name === ROLSA ? (\r\n        <li onClick={() => goToPage()}>{menu.name}</li>\r\n      ) : (\r\n        menu.name !== MENU_FORBIDDEN && (\r\n          <li onClick={() => goToPage()}>{menu.name}</li>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { setLink })(ListItemMenus);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ChevronRight, ExpandMore } from \"@material-ui/icons\";\r\nimport ListItemMenus from \"./list-item-menus\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\n\r\nconst ListItemModules = ({ module }: { module: Module }) => {\r\n  const [isArrowActive, setArrowActive] = useState<Boolean>(false);\r\n  const [isTextModuleActive, setTextModuleActive] = useState<Boolean>(false);\r\n  const findMenus = module.menus;\r\n  const [menus, setMenu] = React.useState<Menu[]>([]);\r\n\r\n  const handleArrow = () => {\r\n    setArrowActive(!isArrowActive);\r\n    setTextModuleActive(!isTextModuleActive);\r\n  };\r\n\r\n  const stylesModuleActive = {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const stylesModuleInactive = {\r\n    color: \"#67677e\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMenu(findMenus || []);\r\n  }, [findMenus]);\r\n\r\n  return (\r\n    <>\r\n      <li\r\n        style={isTextModuleActive ? stylesModuleActive : stylesModuleInactive}\r\n        onClick={() => handleArrow()}\r\n      >\r\n        {module.name} {isArrowActive ? <ExpandMore /> : <ChevronRight />}\r\n      </li>\r\n      {isArrowActive && (\r\n        <ul>\r\n          {menus.map((menu) => (\r\n            <ListItemMenus key={menu.id} menu={menu} module={module} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItemModules;\r\n","export default __webpack_public_path__ + \"static/media/logo_kemay_antena.16ba1da3.png\";","import ListItemModules from \"../wrapper/list-item-modules\";\r\nimport logo from \"../../assets/logo_kemay_antena.png\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setLink } from \"../../store/page/action\";\r\n\r\nimport \"./aside.css\";\r\n\r\nconst Aside = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const findModules = auth?.role?.modules;\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const gotToHome = () => {\r\n    history.push(`/`);\r\n    dispatch(setLink(\"Inicio\", \"/\", \"Dashboard\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setModules(findModules || []);\r\n  }, [findModules]);\r\n\r\n  return (\r\n    <aside>\r\n      <div className=\"content-logo\">\r\n        <div className=\"logo\" onClick={gotToHome}>\r\n          <img width=\"100\" height=\"100\" src={logo} alt=\"Logo\" />\r\n        </div>\r\n        {/* <div className=\"title-logo\" onClick={gotToHome}>\r\n          <p>KTECH</p>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <ul>\r\n          {modules.map((module) => (\r\n            <ListItemModules key={module.id} module={module} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Aside;\r\n","import React from \"react\";\r\nimport Header from \"../components/header/header.component\";\r\nimport Wrapper from \"../components/wrapper/wrapper.component\";\r\nimport Footer from \"../components/footer/footer.component\";\r\nimport Aside from \"../components/aside/aside\";\r\nimport \"./css/home.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <section className=\"menu\">\r\n        <Aside />\r\n      </section>\r\n      <section className=\"content\">\r\n        <div className=\"body\">\r\n          <Header />\r\n          <Wrapper />\r\n        </div>\r\n        <Footer />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/B_logo_kemay.bec2fe6e.png\";","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { Login } from \"../../interfaces/auth.interface\";\r\n\r\ninterface AuthInput {\r\n  variables: {\r\n    authInput: Login;\r\n  };\r\n}\r\n\r\nconst POST_LOGIN = gql`\r\n  mutation login($authInput: AuthInput!) {\r\n    login(authInput: $authInput) {\r\n      access_token\r\n      refresh_token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useLogin = (): any => {\r\n  const [login] = useMutation(POST_LOGIN);\r\n\r\n  return login;\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport logo from \"../assets/B_logo_kemay.png\";\r\nimport { useLogin } from \"../hooks/login/useLogin\";\r\nimport { Error } from \"../interfaces/error.interface\";\r\nimport { Login } from \"../interfaces/auth.interface\";\r\nimport { setLocal } from \"../lib/local-storage\";\r\nimport client from \"../apollo-client\";\r\nimport { setLoading } from \"../store/auth/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./css/login.css\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { setAlert } from \"../store/alert/action\";\r\n\r\n//for inputs\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\n//for selects\r\n//type SelectChange = ChangeEvent<HTMLSelectElement>;\r\n//for forms\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst initialUser = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst initialError = {\r\n  path: \"\",\r\n  message: \"\",\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    loading: state.authReducer.loading,\r\n  };\r\n};\r\n\r\nconst LoginPage: React.FC = ({ loading, setLoading }: any) => {\r\n  const [error, setError] = useState<Error>(initialError);\r\n  const [user, setUser] = useState<Login>(initialUser);\r\n  const alert = useSelector((state: any) => state.message);\r\n  const loginForm = useLogin();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (e: InputChange) => {\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n    setError(initialError);\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const res = await loginForm({\r\n        variables: {\r\n          authInput: { email: user.email, password: user.password },\r\n        },\r\n      });\r\n\r\n      const {\r\n        data: {\r\n          login: { access_token, refresh_token },\r\n        },\r\n      } = res;\r\n\r\n      setLocal(\"accessToken\", access_token);\r\n      setLocal(\"refreshToken\", refresh_token);\r\n      client.resetStore();\r\n      window.location.href = \"/\";\r\n    } catch (e) {\r\n      if (e.graphQLErrors[0].extensions.exception.status === 401) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      setError(e.graphQLErrors[0].extensions.exception.response);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"content-login-logo content-items-center\">\r\n        <img width=\"450\" height=\"400\" src={logo} alt=\"Logo\" />\r\n      </div>\r\n      <div className=\"content-login-form content-items-center\">\r\n        <div className=\"content-login-form-main\">\r\n          <div className=\"content-login-form-header content-items-center\">\r\n            <h1>ACCESO AL SISTEMA</h1>\r\n          </div>\r\n          {alert.type && <Alert severity={alert.type}>{alert.text}</Alert>}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"content-login-form-body\">\r\n              <div className=\"content-login-form-input\">\r\n                <TextField\r\n                  error={error?.path === \"username\" ? true : false}\r\n                  id=\"idUsername\"\r\n                  label=\"Usuario\"\r\n                  helperText={error?.path === \"username\" ? error?.message : \"\"}\r\n                  name=\"email\"\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </div>\r\n              <br />\r\n              <div className=\"content-login-form-input\">\r\n                <TextField\r\n                  error={error?.path === \"password\" ? true : false}\r\n                  id=\"idPassword\"\r\n                  label=\"Contraseña\"\r\n                  helperText={error?.path === \"password\" ? error?.message : \"\"}\r\n                  name=\"password\"\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                />\r\n              </div>\r\n              <br />\r\n              <div className=\"content-login-form-input content-items-center\">\r\n                {loading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <Button\r\n                    disabled={loading ? true : false}\r\n                    type=\"submit\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                  >\r\n                    Iniciar sesion\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <br />\r\n              <div className=\"content-login-form-footer content-items-center\">\r\n                ¿Olvidaste tu contraseña?\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, { setLoading })(LoginPage);\r\n","import React from \"react\";\r\nimport { Redirect, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { getLocal } from \"../../lib/local-storage\";\r\nimport Home from \"../../pages/home.page\";\r\nimport LoginPage from \"../../pages/login.page\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      {getLocal(\"accessToken\") ? (\r\n        <Home />\r\n      ) : (\r\n        <>\r\n          <LoginPage />\r\n          <Redirect to=\"/\" />\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { LOADING_USER, ERROR_USER, LOGIN_USER, LOGOUT_USER } from \"./action\";\r\n\r\ninterface RootState {\r\n  loading: boolean;\r\n  authUser: undefined;\r\n  error: undefined;\r\n}\r\n\r\nconst initialState: RootState = {\r\n  loading: false,\r\n  authUser: undefined,\r\n  error: undefined,\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state: RootState = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n      };\r\n\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n      };\r\n\r\n    case ERROR_USER:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LINK_USER } from \"./action\";\r\n\r\ninterface RootState {\r\n  user: {\r\n    link: string;\r\n    module: string;\r\n    page: string;\r\n    name: string;\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  user: {\r\n    link: \"/\",\r\n    module: \"Inicio\",\r\n    page: \"DASHBOARD\",\r\n    name: \"Dashboard\",\r\n  },\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state: RootState = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case LINK_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IAlert } from \"../../interfaces/alert.interface\";\r\nimport { ALERT } from \"./action\";\r\n\r\nconst initialState: IAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state: any = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ALERT:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport authReducer from \"./auth/reducer\";\r\nimport pageReducer from \"./page/reducer\";\r\nimport alertReducer from \"./alert/reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  authReducer,\r\n  page: pageReducer,\r\n  message: alertReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"page\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/app.component\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport client from \"./apollo-client\";\nimport \"./pages/css/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_MODULES = gql`\r\n  query getModules {\r\n    getModules {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      menus {\r\n        id\r\n        name\r\n        link\r\n      }\r\n      access {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetModules = () => {\r\n  const { data, loading, error } = useQuery(GET_MODULES);\r\n  return { data, loading, error };\r\n};\r\n","import { IAlert } from \"../../interfaces/alert.interface\";\r\n\r\nexport const ALERT = \"@message/ALERT\";\r\n\r\n//{ alert }: { alert: Alert }\r\nexport const setAlert = (alert: IAlert) => {\r\n  return {\r\n    type: ALERT,\r\n    payload: alert,\r\n  };\r\n};\r\n"],"sourceRoot":""}