{"version":3,"sources":["lib/transfer-list-component.tsx","store/alert/action.tsx","hooks/role/useUpdateRole.tsx","const.ts","helpers/control-errors.ts","components/module/module-transfer-list.tsx","components/progress/progress.tsx","lib/local-storage.ts","hooks/login/useRefreshToken.tsx","apollo-client.ts","store/auth/action.tsx","hooks/user/useMe.tsx","components/header/header.component.tsx","pages/404.page.tsx","components/acceso/filter-access.component.tsx","components/dialog/dialog.component.tsx","hooks/category/useGetCategorys.tsx","hooks/brand/useGetBrands.tsx","hooks/brand/useUpdateBrand.tsx","hooks/brand/useCreateBrand.tsx","components/brand/brand-form.tsx","components/brand/brand-list.tsx","pages/brand.page.tsx","hooks/category/useCreateCategory.tsx","hooks/category/useUpdateCategory.tsx","components/category/category-form.tsx","components/category/category-list.tsx","pages/category.page.tsx","components/textfield/reddit.tsx","lib/currency/money.ts","hooks/egress/useGetEgress.tsx","hooks/egress/useDeleteEgress.tsx","hooks/egress/useUpdateEgress.tsx","hooks/egress/useCreateEgress.tsx","components/egress/EgressForm.tsx","components/egress/EgressList.tsx","context/caja-context.tsx","pages/egress.page.tsx","hooks/ingress/useGetIngress.tsx","hooks/ingress/useDeleteIngress.tsx","hooks/ingress/useUpdateIngress.tsx","hooks/ingress/useCreateIngress.tsx","components/ingress/IngressForm.tsx","components/ingress/IngresList.tsx","pages/ingress.page.tsx","pages/summary-box.page.tsx","hooks/summary-box/useGetEgerssByDates.tsx","hooks/summary-box/useGetIngressByDates.tsx","pages/check-money.page.tsx","hooks/brand/useBrandsByCategory.tsx","hooks/model/useGetModelsByBrand.tsx","hooks/product/useGetProductByCMM.tsx","hooks/product/useProductByName.tsx","hooks/service/useGetServicesByCategory.tsx","hooks/service/useServiceByName.tsx","pages/check-products.tsx","hooks/model/useGetModels.tsx","hooks/model/useUpdateModel.tsx","hooks/model/useCreateModel.tsx","components/model/model-form.tsx","components/model/model-list.tsx","pages/model.page.tsx","components/table/item-module-menu.tsx","components/table/item-module-access.tsx","hooks/module/useUpdateModule.tsx","hooks/module/useCreateModule.tsx","hooks/access/useGetAllAceess.tsx","hooks/menu/useGetMenus.tsx","components/module/module-form.component.tsx","components/acceso/access-form.component.tsx","components/menu/menu-form.component.tsx","components/table/item-module.component.tsx","pages/module.page.tsx","hooks/product/useGetProducts.tsx","hooks/product/useUpdateProduct.tsx","hooks/product/useCreateProduct.tsx","components/product/product-form.tsx","hooks/product/useDeleteProduct.tsx","components/product/product-list.tsx","pages/product.page.tsx","hooks/role/useGetRoles.tsx","components/role/role-module-item.tsx","hooks/role/useCreateRole.tsx","components/role/rol-form.tsx","components/role/role-list.tsx","pages/role.page.tsx","hooks/service/useGetServices.tsx","hooks/service/useUpdateService.tsx","hooks/service/useCreateService.tsx","components/service/service-form.tsx","hooks/service/useDeleteService.tsx","components/service/service-list.tsx","pages/service.page.tsx","hooks/user/useGetUsers.tsx","hooks/user/useUpdateUser.tsx","hooks/user/useCreateUser.tsx","components/user/user-form.tsx","hooks/user/useUpdateAccessToLogin.tsx","hooks/password/useChangePassword.tsx","components/password/password-form.tsx","components/user/user-list.tsx","pages/user.page.tsx","lib/item-switch.component.tsx","lib/switch-container.tsx","components/wrapper/wrapper.component.tsx","components/footer/footer.component.tsx","store/page/action.tsx","components/wrapper/list-item-menus.tsx","components/wrapper/list-item-modules.tsx","assets/logo_kemay_antena.png","components/aside/aside.tsx","pages/home.page.tsx","assets/B_logo_kemay.png","hooks/login/useLogin.tsx","pages/login.page.tsx","components/app/app.component.tsx","store/auth/reducer.tsx","store/page/reducer.tsx","store/alert/reducer.tsx","store/index.ts","index.tsx","hooks/module/useGetModules.tsx"],"names":["not","a","b","filter","value","indexOf","intersection","TrasnferList","setListAvailable","setListCurrent","listAvailable","setChecked","checked","titleAvailable","listCurrent","titleCurrent","loading","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","customList","title","avatar","onClick","indeterminate","disabled","inputProps","subheader","dense","component","role","map","labelId","name","button","tabIndex","disableRipple","id","primary","container","spacing","justify","alignItems","item","direction","variant","size","concat","aria-label","ALERT","setAlert","alert","type","payload","UDATE_ROL","gql","useUpdateRole","useMutation","update","cache","updateRole","data","modify","fields","existingRoles","newRolesRef","writeFragment","fragment","error","PERMIT_ONE","PERMIT_TWO","PERMIT_TREE","PERMIT_FOUR","ROLSA","MODULE_FORBIDDEN","MENU_FORBIDDEN","findError","index","graphQLErrors","element","extensions","exception","response","message","index1","ModuleTransferList","handleClose","useState","dispatch","useDispatch","optionsGetModules","useGetModules","optionsUpdateRole","useSelector","state","text","onSubmit","authReducer","authUser","e","preventDefault","newData","module","variables","roleInput","modules","loadModuleAvailable","useCallback","listModulesAvailableNoModulo","getModules","dispo","some","actual","useEffect","listModulesCurrentNoModulo","xs","style","width","color","autoFocus","Progress","display","justifyContent","disableShrink","getLocal","val","localStorage","getItem","setLocal","key","setItem","POST_REFRESH","isRefreshing","pendingRequests","errorLink","onError","networkError","operation","forward","err","status","forward$","fromPromise","Promise","resolve","client","mutate","mutation","authInput","email","refresh_token","then","access_token","refreshToken","callback","catch","finally","flatMap","console","log","locations","path","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","authorization","ApolloClient","link","from","InMemoryCache","LOGIN_USER","LOGOUT_USER","LOADING_USER","ERROR_USER","initialValue","lastName","setLoading","logout","clear","resetStore","window","location","href","ME","connect","whoisme","me","useLazyQuery","pollInterval","useMe","className","NoMatch","loadAccess","auth","page","Component","Notify","filterAccessbyModuleCreate","access","myaccess","i","filterAccessbyModuleEdit","filterAccessbyModuleDelete","filterAccessbyModuleView","DialogTitle","withStyles","theme","createStyles","root","margin","padding","closeButton","position","right","top","palette","grey","props","children","classes","onClose","other","disableTypography","Typography","IconButton","DialogForm","open","dialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","Alert","severity","DialogContent","dividers","overflowY","GET_CATEGORYS","useGetCategorys","useQuery","GET_BRANDS","useGetBrands","UPDATE_BRAND","CREATE_BRAND","initialAlert","BrandForm","brand","initialValueUpdate","category","brandForm","setBrandForm","categorys","setCategorys","optionsUpdateBrand","refetchQueries","query","updateBrand","useUpdateBrand","optionsCreateBrand","registerBrand","useCreateBrand","brandInput","getCategorys","Grid","FormControl","fullWidth","InputLabel","Select","onChange","target","label","MenuItem","TextField","autoComplete","DialogActions","Button","initialDialog","active","BrandList","user","setDialog","showOptionsForEdit","TableCell","align","Tooltip","TableRow","scope","moment","createdAt","format","updatedAt","BrandPage","brands","setBrands","getBrands","TableContainer","Paper","marginTop","Table","TableHead","TableBody","CREATE_CATEGORY","UPDATE_CATEGORY","CategoryForm","categoryForm","setCategoryForm","optionsUpdateCategory","updateCategory","useUpdateCategory","optionsCreateCategory","registerCategory","useCreateCategory","categoryInput","CategoryList","CategooryPage","useStylesReddit","makeStyles","border","overflow","borderRadius","backgroundColor","transition","transitions","create","borderColor","main","focused","RedditTextField","InputProps","disableUnderline","formatMoney","Intl","NumberFormat","currency","GET_EGRESS","DELETE_EGRESS","UPDATE_EGRESS","CREATE_EGRESS","initialAutoCompleteInput","EgressForm","egress","detail","amount","units","observation","egressForm","setEgressForm","valueInput","setValueInput","optionsUpdateEgress","updateEgress","useUpdateEgress","optionsCreateEgress","registerEgress","useCreateEgress","handleInput","dataCategorys","egressInput","Number","Autocomplete","event","inputValue","onInputChange","newValue","options","getOptionLabel","getOptionSelected","option","renderInput","params","startAdornment","InputAdornment","readOnly","multiline","rows","EgressList","egres","optionsEgress","deleteEgress","useDeleteEgress","showOptionsForDelete","wordBreak","PagoContext","createContext","summaryIngress","ingress","setSummaryIngress","summaryEgress","setSummaryEgress","PagoProvider","Provider","Consumer","EgressPage","checkMoney","resultEgress","setEgress","useGetEgress","useContext","totalHoy","reduce","sum","undefined","getEgress","background","colSpan","GET_INGRESS","DELETE_INGRESS","UPDATE_INGRESS","CREATE_INGRESS","IngressForm","ingres","ingressForm","setIngressForm","optionsUpdateIngress","updateIngress","useUpdateIngress","optionsCreateIngress","registerIngress","useCreateIngress","ingressInput","useStyles","row","cell_long","fontSize","minWidth","cell_default","cell_short","IngressList","optionsIngress","deleteIngress","useDeleteIngress","IngressPage","resultIngress","setIngress","useGetIngress","getIngress","SummaryBoxPage","marginRight","GET_DATE","CheckMoneyPage","now","utc","local","getIngressByDates","useGetIngressByDate","getEgressByDates","useGetEgressByDate","initialState","dateStart","dateEnd","setCheckMoney","setResultIngress","setResultEgress","start","end","GET_BRANDS_BY_CATEGORY","useGetBrandsByCategory","GET_MODELS_BY_BRAND","useGetModelsByBrand","GET_PRODUCTS_BY_CMM","GET_PRODUCTS_BY_NAME","GET_SERVICES_BY_CATEGORY","GET_SERVICE_BY_NAME","model","product","service","intialValue","CheckProducts","checkProduct","setCheckProduct","models","setModels","products","setProducts","services","setServices","isActiveRadio","setActiveRadio","optionsGetBrandsByCategory","optionsGetServiceByCategory","useGetServicesByCategory","optionsGetModelsByBrand","optionsGetProductsCMM","useGetProductsCMM","optionGetProduct","getProductByName","useGetProductByName","optionGetService","getServiceByName","useGetServiceByName","changeBrandByCategory","getBrandsByCategory","changeServiceByCategory","getServicesByCategory","changeModelByBrand","getModelsByBrand","changeProductCMM","getProductsByCategoryBrandModel","getProduct","getService","RadioGroup","FormControlLabel","control","Radio","flexDirection","height","description","price","GET_MODELS","UPDATE_MODEL","CREATE_MODEL","ModelForm","modelForm","setModelForm","optionsUpdateModel","updateModel","useUpdateModel","optionsCreateModel","registerModel","useCreateModel","modelInput","ModelList","ModelPage","useGetModels","getModels","ItemModuleMenu","menu","Chip","onDelete","ItemModuleAccess","UDATE_MODULE","useUpdateModule","GET_MODULES","updateModule","CREATE_MODULE","GET_ACCESS","useGetAllAccess","GET_MENUS","useGetMenus","formControl","maxWidth","chips","flexWrap","chip","noLabel","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","ModuleForm","optionsUpdateModule","optionsCreateModule","registerModule","useCreateModule","optionsGetAccess","optionsGetMenus","menuSelected","setMenuSelected","accessSelected","setAccessSelected","listMenus","setListMenus","listAccess","setListAccess","moduleForm","setModuleForm","sentToAddMenus","sentToAddAccess","getStyles","personName","fontWeight","typography","fontWeightRegular","fontWeightMedium","moduleInput","menus","listMenusNoModulos","getMenus","getAccess","multiple","input","Input","renderValue","selected","AccesoForm","optionsGetAllAccess","loadAccessAvailable","res","MenuForm","loadMenusAvailable","listMenusAvailableNoModulos","listMenusCurrentNoModulos","initialValueButton","ItemModule","table","ModulePage","setModules","GET_PRODUCTS","UPDATE_PRODUCT","CREATE_PRODUCT","ProductForm","cant","productForm","setProductForm","optionsUpdateProduct","updateProduct","useUpdateProduct","optionsCreateProduct","registerProduct","useCreateProduct","productInput","onKeyUp","defaultValue","DELETE_PRODUCT","ProductList","optionsProduct","deleteProduct","useDeleteProduct","ProductPage","useGetProducts","getProducts","GET_ROLES","useGetRoles","RoleModuleItem","CREATE_ROL","RoleForm","optionsCreateRole","registerRole","useCreateRole","roleForm","setRoleForm","modulesSelected","setModulesSelected","listModules","setListModules","sentToAddModules","listModulesNoModulos","RoleList","RolePage","roles","setRoles","getRoles","GET_SERVICES","UPDATE_SERVICE","CREATE_SERVICE","ServiceForm","serviceForm","setServiceForm","optionsUpdateService","updateService","useUpdateService","optionsCreateService","registerService","useCreateService","serviceInput","DELETE_SERVICE","ServiceList","optionsService","deleteService","useDeleteService","ServicePage","useGetServices","getServices","GET_USERS","UPDATE_USER","CREATE_USER","UserForm","password","confirmPassword","userForm","setUserForm","listRoles","setListRoles","optionsUpdateUser","updateUser","useUpdateUser","optionsCreateUser","registerUser","useCreateUser","userInput","UPDATE_ACTIVATE_USER","UPDATE_DESACTIVATE_USER","UPDATE_PASSWORD_TO_ADMIN","PasswordForm","newPassword","confirmNewPassword","changePasswordToAdmin","useChangePasswordToAdmin","UserList","optionsActivate","activateUser","useActivateUser","optionsDesactivate","desactivateUser","useDesactivateUser","UserPage","users","setUsers","useGetUsers","getUsers","useLocation","formatedLink","pathname","replace","PrivateRoute","toLogin","rest","render","to","createElement","exact","PAGES","SwitchContainer","Wrapper","firsCaracter","charAt","toUpperCase","restCaracter","substr","subTitle","toLowerCase","Footer","rel","LINK_USER","setLink","history","useHistory","goToPage","document","ListItemModules","isArrowActive","setArrowActive","isTextModuleActive","setTextModuleActive","findMenus","React","setMenu","ExpandMore","ChevronRight","Aside","findModules","src","logo","alt","Home","POST_LOGIN","initialUser","initialError","setError","setUser","loginForm","useLogin","handleInputChange","handleSubmit","login","helperText","CircularProgress","App","reducers","combineReducers","action","persistConfig","storage","whitelist","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4cf58ff2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Progress from \"../components/progress/progress\";\r\n\r\nfunction not(a: any[], b: any[]) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a: any[], b: any[]) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a: any[], b: any[]) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nconst TrasnferList = ({\r\n  setListAvailable,\r\n  setListCurrent,\r\n  listAvailable,\r\n  setChecked,\r\n  checked,\r\n  titleAvailable,\r\n  listCurrent,\r\n  titleCurrent,\r\n  loading,\r\n}: any) => {\r\n  const leftChecked = intersection(checked, listAvailable);\r\n  const rightChecked = intersection(checked, listCurrent);\r\n\r\n  const handleToggle = (value: any) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items: any[]) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: any[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setListCurrent(listCurrent.concat(leftChecked));\r\n    setListAvailable(not(listAvailable, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setListAvailable(listAvailable.concat(rightChecked));\r\n    setListCurrent(not(listCurrent, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: any[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        //className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n            inputProps={{ \"aria-label\": \"all items selected\" }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List\r\n        //className={classes.list}\r\n        dense\r\n        component=\"div\"\r\n        role=\"list\"\r\n      >\r\n        {loading ? (\r\n          <Progress />\r\n        ) : (\r\n          items.map((value: any) => {\r\n            const labelId = `transfer-list-all-item-${value.name}-label`;\r\n\r\n            return (\r\n              <ListItem\r\n                key={value.id}\r\n                role=\"listitem\"\r\n                button\r\n                onClick={handleToggle(value)}\r\n              >\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    checked={checked.indexOf(value) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{ \"aria-labelledby\": labelId }}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText id={labelId} primary={`${value.name}`} />\r\n              </ListItem>\r\n            );\r\n          })\r\n        )}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n      <Grid item>{customList(titleAvailable, listAvailable)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(titleCurrent, listCurrent)}</Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TrasnferList;\r\n","import { IAlert } from \"../../interfaces/alert.interface\";\r\n\r\nexport const ALERT = \"@message/ALERT\";\r\n\r\n//{ alert }: { alert: Alert }\r\nexport const setAlert = (alert: IAlert) => {\r\n  return {\r\n    type: ALERT,\r\n    payload: alert,\r\n  };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\n\r\ninterface RoleUpdateInput {\r\n  variables: {\r\n    roleInput: Role;\r\n  };\r\n}\r\n\r\nconst UDATE_ROL = gql`\r\n  mutation updateRole($roleInput: RoleUpdateInput!) {\r\n    updateRole(roleInput: $roleInput) {\r\n      id\r\n      name\r\n      description\r\n      modules {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateRole = () => {\r\n  const [updateRole, { error, loading }] = useMutation(UDATE_ROL, {\r\n    update(cache, { data: { updateRole } }) {\r\n      cache.modify({\r\n        fields: {\r\n          updateRole(existingRoles = []) {\r\n            const newRolesRef = cache.writeFragment({\r\n              data: updateRole,\r\n              fragment: gql`\r\n                fragment NewRole on Role {\r\n                  id\r\n                  name\r\n                  description\r\n                  modules {\r\n                    id\r\n                    name\r\n                  }\r\n                }\r\n              `,\r\n            });\r\n            return [...existingRoles, newRolesRef];\r\n          },\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  return { updateRole, error, loading };\r\n};\r\n","export const PERMIT_ONE = \"Crear\";\r\nexport const PERMIT_TWO = \"Editar\";\r\nexport const PERMIT_TREE = \"Eliminar\";\r\nexport const PERMIT_FOUR = \"Ver\";\r\nexport const ROLSA = \"SuperAdmin\";\r\nexport const MODULE_FORBIDDEN = \"Administración de modulos\";\r\nexport const MENU_FORBIDDEN = \"Modulos\";\r\n","export const findError = (error: any) => {\r\n  for (let index = 0; index < error.graphQLErrors.length; index++) {\r\n    const element =\r\n      error.graphQLErrors[index].extensions.exception.response.message;\r\n    for (let index1 = 0; index1 < element.length; index1++) {\r\n      const element1 = element[index1];\r\n      return element1;\r\n    }\r\n  }\r\n};\r\n","import React, { useState, useEffect, FormEvent, useCallback } from \"react\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { useGetModules } from \"../../hooks/module/useGetModules\";\r\nimport { useUpdateRole } from \"../../hooks/role/useUpdateRole\";\r\nimport TrasnferList from \"../../lib/transfer-list-component\";\r\nimport { MODULE_FORBIDDEN, ROLSA } from \"../../const\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst ModuleTransferList = ({\r\n  role,\r\n  handleClose,\r\n}: {\r\n  role: Role;\r\n  handleClose: () => void;\r\n}) => {\r\n  const [listAvailable, setListAvailable] = useState<Module[]>([]);\r\n  const [listCurrent, setListCurrent] = useState<Module[]>([]);\r\n  const [checked, setChecked] = useState<Module[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsGetModules = useGetModules();\r\n  const optionsUpdateRole = useUpdateRole();\r\n  const alert = useSelector((state: any) => state.message);\r\n  const { type, text } = alert;\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    const newData = listCurrent.map((module) => {\r\n      return {\r\n        name: module.name,\r\n      };\r\n    });\r\n\r\n    try {\r\n      await optionsUpdateRole.updateRole({\r\n        variables: {\r\n          roleInput: {\r\n            id: role.id,\r\n            modules: newData,\r\n          },\r\n        },\r\n      });\r\n      return dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"El rol actualizó sus modulos correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadModuleAvailable = useCallback(() => {\r\n    let res: Module[];\r\n\r\n    res = optionsGetModules.data.getModules.filter(\r\n      (dispo: Module) =>\r\n        !role.modules?.some((actual) => dispo.name === actual.name)\r\n    );\r\n\r\n    const listModulesAvailableNoModulo = res.filter(\r\n      (module) => module.name !== MODULE_FORBIDDEN\r\n    );\r\n\r\n    // if (auth?.role?.name === ROLSA) {\r\n    //   setListAvailable(res);\r\n    // } else {\r\n    //   const resNotSA = res.filter((module) => module.name !== MODULE_FORBIDDEN);\r\n    //   setListAvailable(resNotSA);\r\n    // }\r\n\r\n    setListAvailable(listModulesAvailableNoModulo);\r\n  }, [role, optionsGetModules.data]);\r\n\r\n  useEffect(() => {\r\n    if (role && optionsGetModules.data) {\r\n      const listModulesCurrentNoModulo = role.modules?.filter(\r\n        (module) => module.name !== MODULE_FORBIDDEN\r\n      );\r\n      setListCurrent(listModulesCurrentNoModulo || []);\r\n      loadModuleAvailable();\r\n    }\r\n  }, [role, optionsGetModules.data, loadModuleAvailable]);\r\n\r\n  if (type === \"error\") {\r\n    return <h1>{text}</h1>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TrasnferList\r\n            setListAvailable={setListAvailable}\r\n            setListCurrent={setListCurrent}\r\n            setChecked={setChecked}\r\n            checked={checked}\r\n            listAvailable={listAvailable}\r\n            titleAvailable=\"Modulos disponibles\"\r\n            listCurrent={listCurrent}\r\n            titleCurrent=\"Modulos actuales\"\r\n            loading={optionsGetModules.loading}\r\n          />\r\n        </Grid>\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disabled={optionsUpdateRole.loading ? true : false}\r\n          >\r\n            {module.id ? \"Actualizar\" : \"Registrar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ModuleTransferList;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Progress = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CircularProgress disableShrink />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","export const getLocal = (val: string) => {\r\n  return localStorage.getItem(val);\r\n};\r\n\r\nexport const setLocal = (key: string, val: string) => {\r\n  return localStorage.setItem(key, val);\r\n};\r\n\r\nexport const deleteLocal = (val: string) => {\r\n  return localStorage.removeItem(val);\r\n};\r\n\r\nexport const clearAllLocal = () => {\r\n  return localStorage.clear();\r\n};\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.get(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: any) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(`En localstorage ${e}`);\r\n  }\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Token } from \"../../interfaces/auth.interface\";\r\n\r\ninterface AuthRefreshTokenInput {\r\n  variables: {\r\n    authInput: Token;\r\n  };\r\n}\r\n\r\nexport const POST_REFRESH = gql`\r\n  mutation refreshToken($authInput: AuthRefreshTokenInput!) {\r\n    refreshToken(authInput: $authInput) {\r\n      access_token\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable no-loop-func */\r\nimport {\r\n  ApolloClient,\r\n  createHttpLink,\r\n  InMemoryCache,\r\n  from,\r\n  fromPromise,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { getLocal, setLocal } from \"./lib/local-storage\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { POST_REFRESH } from \"./hooks/login/useRefreshToken\";\r\n\r\nlet isRefreshing = false;\r\nlet pendingRequests: any = [];\r\n\r\nconst resolvePendingRequests = () => {\r\n  pendingRequests.map((callback: any) => callback());\r\n  pendingRequests = [];\r\n};\r\n\r\nconst errorLink = onError(\r\n  ({ graphQLErrors, networkError, operation, forward }) => {\r\n    if (graphQLErrors) {\r\n      for (let err of graphQLErrors) {\r\n        switch (err.extensions!.exception.status) {\r\n          case 401:\r\n            let forward$;\r\n            if (!isRefreshing) {\r\n              isRefreshing = true;\r\n              forward$ = fromPromise(\r\n                client\r\n                  .mutate({\r\n                    mutation: POST_REFRESH,\r\n                    variables: {\r\n                      authInput: {\r\n                        email: getLocal(\"username\"),\r\n                        refresh_token: getLocal(\"refreshToken\"),\r\n                      },\r\n                    },\r\n                  })\r\n                  .then(\r\n                    ({\r\n                      data: {\r\n                        refreshToken: { access_token },\r\n                      },\r\n                    }) => {\r\n                      setLocal(\"accessToken\", access_token);\r\n                      return true;\r\n                    }\r\n                  )\r\n                  .then(() => {\r\n                    resolvePendingRequests();\r\n                    return true;\r\n                  })\r\n                  .catch(() => {\r\n                    pendingRequests = [];\r\n                    return false;\r\n                  })\r\n                  .finally(() => {\r\n                    isRefreshing = false;\r\n                  })\r\n              );\r\n            } else {\r\n              forward$ = fromPromise(\r\n                new Promise((resolve: any) => {\r\n                  pendingRequests.push(() => resolve());\r\n                })\r\n              );\r\n            }\r\n\r\n            return forward$.flatMap(() => forward(operation));\r\n          default:\r\n            console.log(\r\n              `[ERROR]: Message: ${err.message}, Location: ${err.locations}, Path: ${err.path}`\r\n            );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (networkError) console.log(`[Network error]: ${networkError}`);\r\n  }\r\n);\r\n//http://localhost:3000/graphql\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://web.kemaytechnology.com/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = getLocal(\"accessToken\");\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: from([errorLink, authLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { clearAllLocal } from \"../../lib/local-storage\";\r\nimport client from \"../../apollo-client\";\r\n\r\nexport const LOGIN_USER = \"@auth/LOGIN_USER\";\r\nexport const LOGOUT_USER = \"@auth/LOGOUT_USER\";\r\nexport const LOADING_USER = \"@auth/LOADING_USER\";\r\nexport const ERROR_USER = \"@auth/ERROR_USER\";\r\n\r\nconst initialValue = {\r\n  name: \"Anonimo\",\r\n  lastName: \"\",\r\n};\r\n\r\nexport const setLoading = (loading: boolean) => {\r\n  return {\r\n    type: LOADING_USER,\r\n    payload: loading,\r\n  };\r\n};\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n  clearAllLocal();\r\n  client.resetStore();\r\n  window.location.href = \"/\";\r\n  await dispatch({\r\n    type: LOGOUT_USER,\r\n    payload: initialValue,\r\n  });\r\n};\r\n\r\nexport const whoisme = (payload: any) => async (dispatch: any) => {\r\n  try {\r\n    await dispatch(setLoading(true));\r\n    await dispatch({\r\n      type: LOGIN_USER,\r\n      payload: payload.me,\r\n    });\r\n    await dispatch(setLoading(false));\r\n  } catch (e) {\r\n    await dispatch({\r\n      type: ERROR_USER,\r\n      payload: e.message,\r\n    });\r\n  }\r\n};\r\n","import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport { logout } from \"../../store/auth/action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ME = gql`\r\n  query me {\r\n    me {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      status\r\n      role {\r\n        name\r\n        modules {\r\n          id\r\n          name\r\n          access {\r\n            name\r\n          }\r\n          menus {\r\n            id\r\n            name\r\n            link\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useMe = () => {\r\n  const [me, { data, loading, error }] = useLazyQuery(ME, {\r\n    pollInterval: 500,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (error && error?.graphQLErrors[0].extensions?.exception.status === 401) {\r\n    alert(error.graphQLErrors[0].extensions.exception.response.message);\r\n    dispatch(logout());\r\n  }\r\n\r\n  return { me, data, loading };\r\n};\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { useEffect } from \"react\";\r\nimport { useMe } from \"../../hooks/user/useMe\";\r\nimport { connect } from \"react-redux\";\r\nimport { whoisme, setLoading, logout } from \"../../store/auth/action\";\r\nimport { setLocal } from \"../../lib/local-storage\";\r\nimport \"./header.css\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    loading: state.authReducer.loading,\r\n    authUser: state.authReducer.authUser,\r\n  };\r\n};\r\n\r\nconst Header = ({ authUser, loading, whoisme, logout }: any) => {\r\n  const { me, data } = useMe();\r\n\r\n  useEffect(() => {\r\n    me();\r\n    whoisme(data);\r\n    setLocal(\"username\", data?.me?.email);\r\n  }, [me, whoisme, data]);\r\n\r\n  if (data?.me?.status === 2) {\r\n    logout();\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <a>\r\n        {loading ? (\r\n          `Cargando usuario...`\r\n        ) : (\r\n          <>\r\n            <strong>Bienvenido, </strong>\r\n            {authUser?.name} {authUser?.lastName}\r\n          </>\r\n        )}\r\n      </a>\r\n      &nbsp;&nbsp;\r\n      <button className=\"buttonLogout\" onClick={() => logout()}>\r\n        Cerrar sesion\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setLoading,\r\n  whoisme,\r\n  logout,\r\n})(Header);\r\n","import React from \"react\";\r\n\r\nconst NoMatch = () => {\r\n  return <>4040404040404040</>;\r\n};\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\r\nimport {\r\n  PERMIT_ONE,\r\n  PERMIT_TWO,\r\n  PERMIT_TREE,\r\n  PERMIT_FOUR,\r\n  ROLSA,\r\n} from \"../../const\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\nexport const loadAccess = (\r\n  value: string,\r\n  auth: User,\r\n  page: any,\r\n  Component: any,\r\n  Notify?: any\r\n) => {\r\n  switch (value) {\r\n    case PERMIT_ONE:\r\n      //find access by modules\r\n      const filterAccessbyModuleCreate = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleCreate?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    case PERMIT_TWO:\r\n      //find access by modules\r\n      const filterAccessbyModuleEdit = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleEdit?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    case PERMIT_TREE:\r\n      //find access by modules\r\n      const filterAccessbyModuleDelete = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleDelete?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    case PERMIT_FOUR:\r\n      //find access by modules\r\n      const filterAccessbyModuleView = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleView?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","import React from \"react\";\r\n//dialog\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//fullscreen\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useSelector } from \"react-redux\";\r\n//icons\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\ninterface DialogOption {\r\n  open: boolean;\r\n  dialog?: any;\r\n  title: string;\r\n  component?: JSX.Element;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: \"absolute\",\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogForm = ({\r\n  open,\r\n  dialog,\r\n  title,\r\n  component,\r\n  handleClose,\r\n}: DialogOption) => {\r\n  const alert = useSelector((state: any) => state.message);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  /*  https://thoughtbot.com/blog/using-redux-with-react-hooks\r\n    const { count, user } = useSelector(state => ({\r\n      count: state.counter.count,\r\n      user: state.user,\r\n    }));\r\n  */\r\n  return (\r\n    <Dialog\r\n      fullScreen={fullScreen}\r\n      open={open}\r\n      aria-labelledby=\"idModal\"\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n    >\r\n      <DialogTitle id=\"idModal\" onClose={handleClose}>\r\n        {title} {dialog?.name}\r\n      </DialogTitle>\r\n      {alert.type && <Alert severity={alert.type}>{alert.text}</Alert>}\r\n      <DialogContent dividers style={{ overflowY: \"visible\" }}>\r\n        {component}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DialogForm;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_CATEGORYS = gql`\r\n  query getCategorys {\r\n    getCategorys {\r\n      id\r\n      name\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetCategorys = () => {\r\n  const { data, error, loading }: any = useQuery(GET_CATEGORYS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_BRANDS = gql`\r\n  query getBrands {\r\n    getBrands {\r\n      id\r\n      name\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetBrands = () => {\r\n  const { data, error, loading } = useQuery(GET_BRANDS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { GET_BRANDS } from \"./useGetBrands\";\r\n\r\ninterface UpdateBrandInput {\r\n  variables: {\r\n    brandInput: Brand;\r\n  };\r\n}\r\n\r\nconst UPDATE_BRAND = gql`\r\n  mutation updateBrand($brandInput: UpdateBrandInput!) {\r\n    updateBrand(brandInput: $brandInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateBrand = () => {\r\n  const [updateBrand, { error, loading }] = useMutation(UPDATE_BRAND, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_BRANDS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateBrand, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { GET_BRANDS } from \"./useGetBrands\";\r\n\r\ninterface CreateBrandInput {\r\n  variables: {\r\n    brandInput: Brand;\r\n  };\r\n}\r\n\r\nconst CREATE_BRAND = gql`\r\n  mutation registerBrand($brandInput: CreateBrandInput!) {\r\n    registerBrand(brandInput: $brandInput) {\r\n      id\r\n      name\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateBrand = () => {\r\n  const [registerBrand, { error, loading }] = useMutation(CREATE_BRAND, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_BRANDS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerBrand, error, loading };\r\n};\r\n","import { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { useUpdateBrand } from \"../../hooks/brand/useUpdateBrand\";\r\nimport { useCreateBrand } from \"../../hooks/brand/useCreateBrand\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  brand?: Brand;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst BrandForm = ({ handleClose, brand }: Options) => {\r\n  const initialValueCreate: Brand = {\r\n    name: \"\",\r\n    category: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Brand = {\r\n    id: brand?.id || \"\",\r\n    name: brand?.name || \"\",\r\n    category: brand?.category?.name || \"\",\r\n  };\r\n\r\n  const [brandForm, setBrandForm] = useState<Brand>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateBrand = useUpdateBrand();\r\n  const optionsCreateBrand = useCreateBrand();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setBrandForm({ ...brandForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setBrandForm({\r\n      ...brandForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (brandForm.id) {\r\n      try {\r\n        await optionsUpdateBrand.updateBrand({\r\n          variables: {\r\n            brandInput: brandForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La marca se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateBrand.registerBrand({\r\n          variables: {\r\n            brandInput: brandForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La marca ha sido registrada correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategorys(data.getCategorys);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel id=\"idCategory\">Categoria</InputLabel>\r\n            <Select\r\n              labelId=\"Categoria\"\r\n              id=\"idCategory\"\r\n              value={brandForm.category}\r\n              onChange={handleSelect}\r\n              label=\"Categoria\"\r\n              name=\"category\"\r\n            >\r\n              {categorys.map((category) => (\r\n                <MenuItem key={category.id} value={category.name}>\r\n                  {category.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Marca\"\r\n            variant=\"outlined\"\r\n            value={brandForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {brandForm.id ? (\r\n            optionsUpdateBrand.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateBrand.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BrandForm;\r\n","import { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useState } from \"react\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport BrandForm from \"./brand-form\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst BrandList = ({ brand }: { brand: Brand }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Marca\":\r\n        return <BrandForm brand={brand} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={brand}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar Marca\"\r\n          onClick={() => setDialog({ name: \"Marca\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {brand.category!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {brand.name}\r\n        </TableCell>\r\n        <TableCell>{moment(brand.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(brand.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default BrandList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport BrandList from \"../components/brand/brand-list\";\r\nimport BrandForm from \"../components/brand/brand-form\";\r\nimport { Brand } from \"../interfaces/brand.interface\";\r\nimport { useGetBrands } from \"../hooks/brand/useGetBrands\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst BrandPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetBrands();\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <BrandForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBrands(data.getBrands);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Marca`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Marca\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Marca</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {brands.map((brand) => (\r\n              <BrandList key={brand.id} brand={brand} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrandPage;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_CATEGORYS } from \"./useGetCategorys\";\r\n\r\ninterface CreateCategoryInput {\r\n  variables: {\r\n    categoryInput: Category;\r\n  };\r\n}\r\n\r\nconst CREATE_CATEGORY = gql`\r\n  mutation registerCategory($categoryInput: CreateCategoryInput!) {\r\n    registerCategory(categoryInput: $categoryInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateCategory = () => {\r\n  const [registerCategory, { error, loading }] = useMutation(CREATE_CATEGORY, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_CATEGORYS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerCategory, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_CATEGORYS } from \"./useGetCategorys\";\r\n\r\ninterface UpdateCategoryInput {\r\n  variables: {\r\n    categoryInput: Category;\r\n  };\r\n}\r\n\r\nconst UPDATE_CATEGORY = gql`\r\n  mutation updateCategory($categoryInput: UpdateCategoryInput!) {\r\n    updateCategory(categoryInput: $categoryInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateCategory = () => {\r\n  const [updateCategory, { error, loading }] = useMutation(\r\n    UPDATE_CATEGORY\r\n    //   , {\r\n    //   refetchQueries: () => [\r\n    //     {\r\n    //       query: GET_CATEGORYS,\r\n    //     },\r\n    //   ],\r\n    // }\r\n  );\r\n\r\n  return { updateCategory, error, loading };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { useCreateCategory } from \"../../hooks/category/useCreateCategory\";\r\nimport { useUpdateCategory } from \"../../hooks/category/useUpdateCategory\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst CategoryForm = ({ handleClose, category }: any) => {\r\n  const initialValueCreate: Category = {\r\n    name: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Category = {\r\n    id: category?.id || \"\",\r\n    name: category?.name || \"\",\r\n  };\r\n\r\n  const [categoryForm, setCategoryForm] = useState<Category>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateCategory = useUpdateCategory();\r\n  const optionsCreateCategory = useCreateCategory();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setCategoryForm({ ...categoryForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (categoryForm.id) {\r\n      try {\r\n        await optionsUpdateCategory.updateCategory({\r\n          variables: {\r\n            categoryInput: categoryForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La categoria se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateCategory.registerCategory({\r\n          variables: {\r\n            categoryInput: categoryForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La categoria ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Nombre\"\r\n            variant=\"outlined\"\r\n            value={categoryForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {categoryForm.id ? (\r\n            optionsUpdateCategory.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateCategory.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n","import { useState } from \"react\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport CategoryForm from \"./category-form\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst CategoryList = ({ category }: { category: Category }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Categoria\":\r\n        return <CategoryForm category={category} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={category}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar categoria\"\r\n          onClick={() => setDialog({ name: \"Categoria\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {category.name}\r\n        </TableCell>\r\n        <TableCell>{moment(category.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(category.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default CategoryList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport { Category } from \"../interfaces/category.interface\";\r\nimport CategoryForm from \"../components/category/category-form\";\r\nimport CategoryList from \"../components/category/category-list\";\r\nimport { useGetCategorys } from \"../hooks/category/useGetCategorys\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst CategooryPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetCategorys();\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <CategoryForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategorys(data.getCategorys);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Categoria`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Categoria\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categorys.map((category) => (\r\n              <CategoryList key={category.id} category={category} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategooryPage;\r\n","import { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport { OutlinedInputProps } from \"@material-ui/core/OutlinedInput\";\r\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\r\n\r\nconst useStylesReddit = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #e2e2e1\",\r\n      overflow: \"hidden\",\r\n      borderRadius: 4,\r\n      backgroundColor: \"#fcfcfb\",\r\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n      \"&:hover\": {\r\n        backgroundColor: \"#fff\",\r\n      },\r\n      \"&$focused\": {\r\n        backgroundColor: \"#fff\",\r\n        //boxShadow: `${apha(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n        borderColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n    focused: {},\r\n  })\r\n);\r\n\r\nconst RedditTextField = (props: TextFieldProps) => {\r\n  const classes = useStylesReddit();\r\n\r\n  return (\r\n    <TextField\r\n      InputProps={\r\n        { classes, disableUnderline: true } as Partial<OutlinedInputProps>\r\n      }\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RedditTextField;\r\n","export const formatMoney = (value: any) =>\r\n  new Intl.NumberFormat(\"de-DE\", {\r\n    style: \"currency\",\r\n    currency: \"PEN\",\r\n  }).format(value);\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_EGRESS = gql`\r\n  query getEgress {\r\n    getEgress {\r\n      id\r\n      category {\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetEgress = () => {\r\n  const { data, error, loading }: any = useQuery(GET_EGRESS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_EGRESS } from \"./useGetEgress\";\r\n\r\nconst DELETE_EGRESS = gql`\r\n  mutation deleteEgress($id: String!) {\r\n    deleteEgress(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteEgress = () => {\r\n  const [deleteEgress, { error, loading }] = useMutation(DELETE_EGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_EGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteEgress, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_EGRESS } from \"./useGetEgress\";\r\n\r\ninterface UpdateEgressInput {\r\n  variables: {\r\n    egressInput: Category;\r\n  };\r\n}\r\n\r\nconst UPDATE_EGRESS = gql`\r\n  mutation updateEgress($egressInput: UpdateEgressInput!) {\r\n    updateEgress(egressInput: $egressInput) {\r\n      id\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useUpdateEgress = () => {\r\n  const [updateEgress, { error, loading }] = useMutation(UPDATE_EGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_EGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateEgress, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_EGRESS } from \"./useGetEgress\";\r\n\r\ninterface CreateEgressInput {\r\n  variables: {\r\n    egressInput: Category;\r\n  };\r\n}\r\n\r\nconst CREATE_EGRESS = gql`\r\n  mutation registerEgress($egressInput: CreateEgressInput!) {\r\n    registerEgress(egressInput: $egressInput) {\r\n      id\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateEgress = () => {\r\n  const [registerEgress, { error, loading }] = useMutation(CREATE_EGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_EGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerEgress, error, loading };\r\n};\r\n","import { Egress } from \"../../interfaces/egress.interface\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Progress from \"../progress/progress\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { useUpdateEgress } from \"../../hooks/egress/useUpdateEgress\";\r\nimport { useCreateEgress } from \"../../hooks/egress/useCreateEgress\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { AutoCompleteInput } from \"../../interfaces/autocompleteinput.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  egress?: Egress;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialAutoCompleteInput = {\r\n  category: \"\",\r\n};\r\n\r\nconst EgressForm = ({ handleClose, egress }: Options) => {\r\n  const initialValueCreate: Egress = {\r\n    detail: \"\",\r\n    amount: 0,\r\n    units: 0,\r\n    category: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Egress = {\r\n    id: egress?.id || \"\",\r\n    detail: egress?.detail || \"\",\r\n    amount: egress?.amount || 0,\r\n    units: egress?.units || 0,\r\n    category: egress?.category?.name || \"\",\r\n    observation: egress?.observation || \"\",\r\n  };\r\n\r\n  const [egressForm, setEgressForm] = useState<Egress>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [valueInput, setValueInput] = useState<AutoCompleteInput>(\r\n    initialAutoCompleteInput\r\n  );\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const optionsUpdateEgress = useUpdateEgress();\r\n  const optionsCreateEgress = useCreateEgress();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setEgressForm({\r\n      ...egressForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const dataCategorys = useCallback(() => {\r\n    setCategorys(data?.getCategorys || []);\r\n  }, [data]);\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (egressForm.id) {\r\n      try {\r\n        await optionsUpdateEgress.updateEgress({\r\n          variables: {\r\n            egressInput: {\r\n              ...egressForm,\r\n              units: Number(egressForm.units),\r\n              amount: Number(egressForm.amount),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El egreso se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateEgress.registerEgress({\r\n          variables: {\r\n            egressInput: {\r\n              ...egressForm,\r\n              units: Number(egressForm.units),\r\n              amount: Number(egressForm.amount),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El egreso ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataCategorys();\r\n  }, [dataCategorys]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Autocomplete\r\n            id=\"idCategory\"\r\n            value={egressForm.category}\r\n            onChange={(event, value) => {\r\n              setEgressForm({\r\n                ...egressForm,\r\n                category: value?.name || \"\",\r\n              });\r\n\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            inputValue={\r\n              valueInput.category ? valueInput.category : egressForm.category\r\n            }\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, category: newValue });\r\n            }}\r\n            options={categorys}\r\n            getOptionLabel={(category) => (category.name ? category.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"category\"\r\n                label=\"Categoria\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"units\"\r\n            autoComplete=\"off\"\r\n            id=\"idUnits\"\r\n            label=\"Unidades\"\r\n            variant=\"outlined\"\r\n            value={egressForm.units}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"amount\"\r\n            autoComplete=\"off\"\r\n            id=\"idAmount\"\r\n            label=\"Monto\"\r\n            variant=\"outlined\"\r\n            value={egressForm.amount}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            id=\"idTotal\"\r\n            label=\"Total\"\r\n            variant=\"outlined\"\r\n            value={egressForm.units * egressForm.amount}\r\n            InputProps={{\r\n              readOnly: true,\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"detail\"\r\n            autoComplete=\"off\"\r\n            id=\"idDetail\"\r\n            multiline\r\n            rows={3}\r\n            label=\"Detalle\"\r\n            variant=\"outlined\"\r\n            value={egressForm.detail}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"observation\"\r\n            autoComplete=\"off\"\r\n            id=\"idObservation\"\r\n            multiline\r\n            rows={5}\r\n            label=\"Observación\"\r\n            variant=\"outlined\"\r\n            value={egressForm.observation}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {egressForm.id ? (\r\n            optionsUpdateEgress.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateEgress.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EgressForm;\r\n","import { Egress } from \"../../interfaces/egress.interface\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useState } from \"react\";\r\nimport { useDeleteEgress } from \"../../hooks/egress/useDeleteEgress\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport EgressForm from \"./EgressForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst EgressList = ({ egres }: { egres: Egress }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const optionsEgress = useDeleteEgress();\r\n\r\n  const deleteEgress = async (id: string | undefined) => {\r\n    try {\r\n      await optionsEgress.deleteEgress({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Egreso\":\r\n        return <EgressForm egress={egres} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar egreso\"\r\n        onClick={() => setDialog({ name: \"Egreso\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip title=\"Eliminar egreso\" onClick={() => deleteEgress(egres.id)}>\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell\r\n          component=\"th\"\r\n          scope=\"row\"\r\n          style={{\r\n            wordBreak: \"break-all\",\r\n          }}\r\n        >\r\n          {egres.category.name}\r\n        </TableCell>\r\n        <TableCell\r\n          component=\"th\"\r\n          scope=\"row\"\r\n          style={{ width: \"30%\", wordBreak: \"break-all\" }}\r\n        >\r\n          {egres.detail}\r\n        </TableCell>\r\n        {page === \"RESUMEN-CAJA\" || (\r\n          <>\r\n            <TableCell\r\n              component=\"th\"\r\n              scope=\"row\"\r\n              style={{ width: \"30%\", wordBreak: \"break-all\" }}\r\n            >\r\n              {egres.observation}\r\n            </TableCell>\r\n\r\n            <TableCell>\r\n              {moment(egres.createdAt).format(\"DD/MM/YYYY\")}\r\n            </TableCell>\r\n            <TableCell>\r\n              {moment(egres.updatedAt).format(\"DD/MM/YYYY\")}\r\n            </TableCell>\r\n          </>\r\n        )}\r\n        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n          {egres.units}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n          {formatMoney(egres.amount)}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n          {formatMoney(egres.units * egres.amount)}\r\n        </TableCell>\r\n        {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n          \"\"\r\n        ) : (\r\n          <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n            <>\r\n              {loadAccess(PERMIT_TWO, auth, module, showOptionsForEdit)}\r\n              {loadAccess(PERMIT_TREE, auth, module, showOptionsForDelete)}\r\n            </>\r\n          </TableCell>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={egres}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, module, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EgressList;\r\n","import { createContext } from \"react\";\r\n\r\ninterface OptionI {\r\n  ingress: number;\r\n}\r\n\r\nconst initialIngress = {\r\n  ingress: 0,\r\n};\r\n\r\ninterface OptionE {\r\n  egress: number;\r\n}\r\n\r\nconst initialEgress = {\r\n  egress: 0,\r\n};\r\n\r\nconst PagoContext = createContext({\r\n  summaryIngress: initialIngress,\r\n  setSummaryIngress: (value: OptionI) => {},\r\n  summaryEgress: initialEgress,\r\n  setSummaryEgress: (value: OptionE) => {},\r\n});\r\n\r\nconst PagoProvider = PagoContext.Provider;\r\nconst PagoConsumer = PagoContext.Consumer;\r\n\r\nexport { PagoProvider, PagoConsumer, PagoContext };\r\n","import Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Egress } from \"../interfaces/egress.interface\";\r\nimport EgressList from \"../components/egress/EgressList\";\r\nimport { useGetEgress } from \"../hooks/egress/useGetEgress\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EgressForm from \"../components/egress/EgressForm\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { formatMoney } from \"../lib/currency/money\";\r\nimport { PagoContext } from \"../context/caja-context\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\ninterface Option {\r\n  checkMoney?: any;\r\n  resultIngress?: any;\r\n  resultEgress?: any;\r\n}\r\n\r\nconst EgressPage = ({ checkMoney, resultEgress }: Option) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { page, module } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const [egress, setEgress] = useState<Egress[]>([]);\r\n  const { data, loading, error } = useGetEgress();\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const { summaryEgress, setSummaryEgress } = useContext(PagoContext);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const calTotalHoy = (items: Egress[]) => {\r\n    return items\r\n      .map((item) => item.units * item.amount)\r\n      .reduce((sum, i) => sum + i, 0);\r\n  };\r\n\r\n  const totalHoy = calTotalHoy(egress);\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <EgressForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (checkMoney === undefined) {\r\n      if (data) {\r\n        setEgress(data.getEgress);\r\n      }\r\n    } else {\r\n      setEgress(resultEgress);\r\n    }\r\n    setSummaryEgress({ ...summaryEgress, egress: totalHoy });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, setSummaryEgress, totalHoy]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showOptionsToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear Egreso\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Egreso`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\"\r\n        ? \"\"\r\n        : loadAccess(PERMIT_ONE, auth, module, showOptionsToCreate)}\r\n\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{\r\n          marginTop: page === \"CONSULTAR-CAJA\" ? 20 : 0,\r\n        }}\r\n      >\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ background: \"#dc3545\" }}>\r\n              <TableCell\r\n                style={{ color: \"#fff\" }}\r\n                align=\"center\"\r\n                colSpan={page === \"RESUMEN-CAJA\" ? 4 : 6}\r\n              >\r\n                {page === \"CONSULTAR-CAJA\" ? `Egreso Total` : `Ingreso de hoy`}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ color: \"#fff\" }}\r\n                align=\"center\"\r\n                colSpan={page === \"RESUMEN-CAJA\" ? 2 : 3}\r\n              >\r\n                Costo\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Detalle</TableCell>\r\n              {page === \"RESUMEN-CAJA\" || (\r\n                <>\r\n                  <TableCell>Observación</TableCell>\r\n                  <TableCell>Fecha creada</TableCell>\r\n                  <TableCell>Fecha modificada</TableCell>\r\n                </>\r\n              )}\r\n              <TableCell align=\"center\">Unidades</TableCell>\r\n              <TableCell align=\"right\">Monto</TableCell>\r\n              <TableCell align=\"right\">Monto total</TableCell>\r\n              {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n                \"\"\r\n              ) : (\r\n                <TableCell>Opciones</TableCell>\r\n              )}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {egress.map((egres) => (\r\n              <EgressList key={egres.id} egres={egres} />\r\n            ))}\r\n\r\n            <TableRow>\r\n              <TableCell\r\n                colSpan={\r\n                  page === \"RESUMEN-CAJA\"\r\n                    ? 3\r\n                    : page === \"CONSULTAR-CAJA\"\r\n                    ? 6\r\n                    : 6\r\n                }\r\n              />\r\n              <TableCell>\r\n                <strong>Total</strong>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <strong style={{ color: \"red\" }}>\r\n                  {formatMoney(totalHoy)}\r\n                </strong>\r\n              </TableCell>\r\n              {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n                \"\"\r\n              ) : (\r\n                <TableCell colSpan={3} />\r\n              )}\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EgressPage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_INGRESS = gql`\r\n  query getIngress {\r\n    getIngress {\r\n      id\r\n      category {\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetIngress = () => {\r\n  const { data, error, loading }: any = useQuery(GET_INGRESS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_INGRESS } from \"./useGetIngress\";\r\n\r\nconst DELETE_INGRESS = gql`\r\n  mutation deleteIngress($id: String!) {\r\n    deleteIngress(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteIngress = () => {\r\n  const [deleteIngress, { error, loading }] = useMutation(DELETE_INGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_INGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteIngress, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_INGRESS } from \"./useGetIngress\";\r\n\r\ninterface UpdateIngressInput {\r\n  variables: {\r\n    ingressInput: Category;\r\n  };\r\n}\r\n\r\nconst UPDATE_INGRESS = gql`\r\n  mutation updateIngress($ingressInput: UpdateIngressInput!) {\r\n    updateIngress(ingressInput: $ingressInput) {\r\n      id\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useUpdateIngress = () => {\r\n  const [updateIngress, { error, loading }] = useMutation(UPDATE_INGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_INGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateIngress, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_INGRESS } from \"./useGetIngress\";\r\n\r\ninterface CreateIngressInput {\r\n  variables: {\r\n    ingressInput: Category;\r\n  };\r\n}\r\n\r\nconst CREATE_INGRESS = gql`\r\n  mutation registerIngress($ingressInput: CreateIngressInput!) {\r\n    registerIngress(ingressInput: $ingressInput) {\r\n      id\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateIngress = () => {\r\n  const [registerIngress, { error, loading }] = useMutation(CREATE_INGRESS, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_INGRESS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerIngress, error, loading };\r\n};\r\n","import { Ingress } from \"../../interfaces/ingress.interface\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Progress from \"../progress/progress\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { useUpdateIngress } from \"../../hooks/ingress/useUpdateIngress\";\r\nimport { useCreateIngress } from \"../../hooks/ingress/useCreateIngress\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { AutoCompleteInput } from \"../../interfaces/autocompleteinput.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  ingres?: Ingress;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialAutoCompleteInput = {\r\n  category: \"\",\r\n};\r\n\r\nconst IngressForm = ({ handleClose, ingres }: Options) => {\r\n  const initialValueCreate: Ingress = {\r\n    detail: \"\",\r\n    amount: 0,\r\n    units: 0,\r\n    category: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Ingress = {\r\n    id: ingres?.id || \"\",\r\n    detail: ingres?.detail || \"\",\r\n    amount: ingres?.amount || 0,\r\n    units: ingres?.units || 0,\r\n    category: ingres?.category?.name || \"\",\r\n    observation: ingres?.observation || \"\",\r\n  };\r\n\r\n  const [ingressForm, setIngressForm] = useState<Ingress>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [valueInput, setValueInput] = useState<AutoCompleteInput>(\r\n    initialAutoCompleteInput\r\n  );\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const optionsUpdateIngress = useUpdateIngress();\r\n  const optionsCreateIngress = useCreateIngress();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setIngressForm({\r\n      ...ingressForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const dataCategorys = useCallback(() => {\r\n    setCategorys(data?.getCategorys || []);\r\n  }, [data]);\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (ingressForm.id) {\r\n      try {\r\n        await optionsUpdateIngress.updateIngress({\r\n          variables: {\r\n            ingressInput: {\r\n              ...ingressForm,\r\n              units: Number(ingressForm.units),\r\n              amount: Number(ingressForm.amount),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El ingreso se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateIngress.registerIngress({\r\n          variables: {\r\n            ingressInput: {\r\n              ...ingressForm,\r\n              units: Number(ingressForm.units),\r\n              amount: Number(ingressForm.amount),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El ingreso ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataCategorys();\r\n  }, [dataCategorys]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Autocomplete\r\n            id=\"idCategory\"\r\n            value={ingressForm.category}\r\n            onChange={(event, value) => {\r\n              setIngressForm({\r\n                ...ingressForm,\r\n                category: value?.name || \"\",\r\n              });\r\n\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            inputValue={\r\n              valueInput.category ? valueInput.category : ingressForm.category\r\n            }\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, category: newValue });\r\n            }}\r\n            options={categorys}\r\n            getOptionLabel={(category) => (category.name ? category.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"category\"\r\n                label=\"Categoria\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"units\"\r\n            autoComplete=\"off\"\r\n            id=\"idUnits\"\r\n            label=\"Unidades\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.units}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"amount\"\r\n            autoComplete=\"off\"\r\n            id=\"idAmount\"\r\n            label=\"Monto\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.amount}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            id=\"idTotal\"\r\n            label=\"Total\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.units * ingressForm.amount}\r\n            InputProps={{\r\n              readOnly: true,\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"detail\"\r\n            autoComplete=\"off\"\r\n            id=\"idDetail\"\r\n            multiline\r\n            rows={3}\r\n            label=\"Detalle\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.detail}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"observation\"\r\n            autoComplete=\"off\"\r\n            id=\"idObservation\"\r\n            multiline\r\n            rows={5}\r\n            label=\"Observación\"\r\n            variant=\"outlined\"\r\n            value={ingressForm.observation}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {ingressForm.id ? (\r\n            optionsUpdateIngress.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateIngress.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default IngressForm;\r\n","import moment from \"moment\";\r\nimport { Ingress } from \"../../interfaces/ingress.interface\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useState } from \"react\";\r\nimport { useDeleteIngress } from \"../../hooks/ingress/useDeleteIngress\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport IngressForm from \"./IngressForm\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  row: {\r\n    width: 700,\r\n    backgroundColor: \"grey\",\r\n  },\r\n  cell_long: {\r\n    fontSize: \"10px\",\r\n    width: 150,\r\n    minWidth: 1,\r\n    backgroundColor: \"#ee82ee\",\r\n  },\r\n  cell_default: {\r\n    fontSize: \"10px\",\r\n    width: 200,\r\n    minWidth: 1,\r\n    backgroundColor: \"#ee82ee\",\r\n  },\r\n  cell_short: {\r\n    fontSize: \"10px\",\r\n    width: 80,\r\n    backgroundColor: \"yellow\",\r\n  },\r\n}));\r\n\r\nconst IngressList = ({ ingres }: { ingres: Ingress }) => {\r\n  const classes = useStyles();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const optionsIngress = useDeleteIngress();\r\n\r\n  const deleteIngress = async (id: string | undefined) => {\r\n    try {\r\n      await optionsIngress.deleteIngress({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Ingreso\":\r\n        return <IngressForm ingres={ingres} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar ingreso\"\r\n        onClick={() => setDialog({ name: \"Ingreso\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar ingreso\"\r\n        onClick={() => deleteIngress(ingres.id)}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell\r\n          component=\"th\"\r\n          scope=\"row\"\r\n          style={{\r\n            wordBreak: \"break-all\",\r\n          }}\r\n        >\r\n          {ingres.category.name}\r\n        </TableCell>\r\n        <TableCell\r\n          component=\"th\"\r\n          scope=\"row\"\r\n          style={{ width: \"30%\", wordBreak: \"break-all\" }}\r\n        >\r\n          {ingres.detail}\r\n        </TableCell>\r\n        {page === \"RESUMEN-CAJA\" || (\r\n          <>\r\n            <TableCell\r\n              component=\"th\"\r\n              scope=\"row\"\r\n              style={{ width: \"30%\", wordBreak: \"break-all\" }}\r\n            >\r\n              {ingres.observation}\r\n            </TableCell>\r\n\r\n            <TableCell>\r\n              {moment(ingres.createdAt).format(\"DD/MM/YYYY\")}\r\n            </TableCell>\r\n            <TableCell>\r\n              {moment(ingres.updatedAt).format(\"DD/MM/YYYY\")}\r\n            </TableCell>\r\n          </>\r\n        )}\r\n\r\n        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n          {ingres.units}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n          {formatMoney(ingres.amount)}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n          {formatMoney(ingres.units * ingres.amount)}\r\n        </TableCell>\r\n\r\n        {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n          \"\"\r\n        ) : (\r\n          <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n            <>\r\n              {loadAccess(PERMIT_TWO, auth, module, showOptionsForEdit)}\r\n              {loadAccess(PERMIT_TREE, auth, module, showOptionsForDelete)}\r\n            </>\r\n          </TableCell>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={ingres}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, module, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngressList;\r\n","import Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { Ingress } from \"../interfaces/ingress.interface\";\r\nimport IngressList from \"../components/ingress/IngresList\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { useGetIngress } from \"../hooks/ingress/useGetIngress\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport IngressForm from \"../components/ingress/IngressForm\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport { formatMoney } from \"../lib/currency/money\";\r\nimport { PagoContext } from \"../context/caja-context\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\ninterface Option {\r\n  checkMoney?: any;\r\n  resultIngress?: any;\r\n  resultEgress?: any;\r\n}\r\n\r\nconst IngressPage = ({ checkMoney, resultIngress }: Option) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const [ingress, setIngress] = useState<Ingress[]>([]);\r\n  const { data, loading, error } = useGetIngress();\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const { summaryIngress, setSummaryIngress } = useContext(PagoContext);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <IngressForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const calTotalHoy = (items: Ingress[]) => {\r\n    return items\r\n      .map((item) => item.units * item.amount)\r\n      .reduce((sum, i) => sum + i, 0);\r\n  };\r\n\r\n  const totalHoy = calTotalHoy(ingress);\r\n\r\n  useEffect(() => {\r\n    if (checkMoney === undefined) {\r\n      if (data) {\r\n        setIngress(data.getIngress);\r\n      }\r\n    } else {\r\n      setIngress(resultIngress);\r\n    }\r\n\r\n    setSummaryIngress({ ...summaryIngress, ingress: totalHoy });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, setSummaryIngress, totalHoy]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showOptionsToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear Ingreso\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Ingreso`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n\r\n      {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\"\r\n        ? \"\"\r\n        : loadAccess(PERMIT_ONE, auth, module, showOptionsToCreate)}\r\n\r\n      <TableContainer\r\n        component={Paper}\r\n        style={{ marginTop: page === \"CONSULTAR-CAJA\" ? 20 : 0 }}\r\n      >\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow style={{ background: \"#28a745\" }}>\r\n              <TableCell\r\n                style={{ color: \"#fff\" }}\r\n                align=\"center\"\r\n                colSpan={page === \"RESUMEN-CAJA\" ? 4 : 6}\r\n              >\r\n                {page === \"CONSULTAR-CAJA\" ? `Ingreso Total` : `Ingreso de hoy`}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ color: \"#fff\" }}\r\n                align=\"center\"\r\n                colSpan={page === \"RESUMEN-CAJA\" ? 2 : 3}\r\n              >\r\n                Costo\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Detalle</TableCell>\r\n              {page === \"RESUMEN-CAJA\" || (\r\n                <>\r\n                  <TableCell>Observación</TableCell>\r\n                  <TableCell>Fecha creada</TableCell>\r\n                  <TableCell>Fecha modificada</TableCell>\r\n                </>\r\n              )}\r\n              <TableCell align=\"center\">Unidades</TableCell>\r\n              <TableCell align=\"right\">Monto</TableCell>\r\n              <TableCell align=\"right\">Monto total</TableCell>\r\n              {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n                \"\"\r\n              ) : (\r\n                <TableCell>Opciones</TableCell>\r\n              )}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {ingress.map((ingres) => (\r\n              <IngressList key={ingres.id} ingres={ingres} />\r\n            ))}\r\n            <TableRow>\r\n              <TableCell\r\n                colSpan={\r\n                  page === \"RESUMEN-CAJA\"\r\n                    ? 3\r\n                    : page === \"CONSULTAR-CAJA\"\r\n                    ? 6\r\n                    : 6\r\n                }\r\n              />\r\n              <TableCell>\r\n                <strong>Total</strong>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <strong style={{ color: \"green\" }}>\r\n                  {formatMoney(totalHoy)}\r\n                </strong>\r\n              </TableCell>\r\n              {page === \"RESUMEN-CAJA\" || page === \"CONSULTAR-CAJA\" ? (\r\n                \"\"\r\n              ) : (\r\n                <TableCell colSpan={3} />\r\n              )}\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngressPage;\r\n","import EgressPage from \"./egress.page\";\r\nimport IngressPage from \"./ingress.page\";\r\nimport \"./css/summary-box.css\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { PagoProvider } from \"../context/caja-context\";\r\nimport { useState } from \"react\";\r\nimport { formatMoney } from \"../lib/currency/money\";\r\n\r\ninterface Option {\r\n  checkMoney?: any;\r\n  resultIngress?: any;\r\n  resultEgress?: any;\r\n}\r\n\r\nconst SummaryBoxPage = ({\r\n  checkMoney,\r\n  resultIngress,\r\n  resultEgress,\r\n}: Option) => {\r\n  const [summaryIngress, setSummaryIngress] = useState({\r\n    ingress: 0,\r\n  });\r\n\r\n  const [summaryEgress, setSummaryEgress] = useState({\r\n    egress: 0,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <PagoProvider\r\n        value={{\r\n          summaryIngress,\r\n          setSummaryIngress,\r\n          summaryEgress,\r\n          setSummaryEgress,\r\n        }}\r\n      >\r\n        <div className=\"content-tables-i-e\">\r\n          <div className=\"card-table\" style={{ marginRight: \"4%\" }}>\r\n            <IngressPage\r\n              checkMoney={checkMoney}\r\n              resultIngress={resultIngress}\r\n              resultEgress={resultEgress}\r\n            />\r\n          </div>\r\n          <div className=\"card-table\">\r\n            <EgressPage\r\n              checkMoney={checkMoney}\r\n              resultIngress={resultIngress}\r\n              resultEgress={resultEgress}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: 20 }}>\r\n          <TableContainer component={Paper}>\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  {/* <TableCell colSpan={page === \"RESUMEN-CAJA\" ? 3 : 6} /> */}\r\n                  <TableCell>\r\n                    <strong>Resumen total</strong>\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"right\">\r\n                    <strong\r\n                      style={\r\n                        summaryIngress.ingress - summaryEgress.egress < 0\r\n                          ? { color: \"red\" }\r\n                          : { color: \"green\" }\r\n                      }\r\n                    >\r\n                      {summaryIngress.ingress - summaryEgress.egress < 0\r\n                        ? formatMoney(\r\n                            summaryIngress.ingress - summaryEgress.egress\r\n                          )\r\n                        : `+${formatMoney(\r\n                            summaryIngress.ingress - summaryEgress.egress\r\n                          )}`}\r\n                    </strong>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </PagoProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SummaryBoxPage;\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_DATE = gql`\r\n  query getEgressByDates($start: String!, $end: String!) {\r\n    getEgressByDates(start: $start, end: $end) {\r\n      id\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetEgressByDate = () => {\r\n  const [getEgressByDates, { error, loading, data }] = useLazyQuery(GET_DATE);\r\n\r\n  return { getEgressByDates, data, error, loading };\r\n};\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_DATE = gql`\r\n  query getIngressByDates($start: String!, $end: String!) {\r\n    getIngressByDates(start: $start, end: $end) {\r\n      id\r\n      detail\r\n      observation\r\n      units\r\n      amount\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetIngressByDate = () => {\r\n  const [getIngressByDates, { error, loading, data }] = useLazyQuery(GET_DATE);\r\n\r\n  return { getIngressByDates, data, error, loading };\r\n};\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RedditTextField from \"../components/textfield/reddit\";\r\nimport moment from \"moment\";\r\nimport { InputChange } from \"../lib/types\";\r\nimport { CheckMoney } from \"../interfaces/check-money.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport SummaryBoxPage from \"./summary-box.page\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_FOUR } from \"../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { useGetEgressByDate } from \"../hooks/summary-box/useGetEgerssByDates\";\r\nimport { useGetIngressByDate } from \"../hooks/summary-box/useGetIngressByDates\";\r\nimport { Ingress } from \"../interfaces/ingress.interface\";\r\nimport { Egress } from \"../interfaces/egress.interface\";\r\n\r\nconst CheckMoneyPage = () => {\r\n  const now = moment().utc().local().format(\"YYYY-MM-DD\");\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n\r\n  const optionsIngress = useGetIngressByDate();\r\n  const optionsEgress = useGetEgressByDate();\r\n\r\n  const initialState: CheckMoney = {\r\n    dateStart: now,\r\n    dateEnd: now,\r\n  };\r\n\r\n  const [checkMoney, setCheckMoney] = useState<CheckMoney>(initialState);\r\n  const [resultIngress, setResultIngress] = useState<Ingress[]>([]);\r\n  const [resultEgress, setResultEgress] = useState<Egress[]>([]);\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setCheckMoney({\r\n      ...checkMoney,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const getIngress = async (start: string | Date, end: string | Date) => {\r\n    try {\r\n      await optionsIngress.getIngressByDates({\r\n        variables: {\r\n          start: start,\r\n          end: end,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getEgress = async (start: string | Date, end: string | Date) => {\r\n    try {\r\n      await optionsEgress.getEgressByDates({\r\n        variables: {\r\n          start: start,\r\n          end: end,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionsIngress.data) {\r\n      setResultIngress(optionsIngress?.data?.getIngressByDates || []);\r\n    }\r\n    if (optionsEgress.data) {\r\n      setResultEgress(optionsEgress?.data?.getEgressByDates || []);\r\n    }\r\n  }, [optionsIngress.data, optionsEgress.data]);\r\n\r\n  const showData = () => (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={3}>\r\n          <RedditTextField\r\n            fullWidth\r\n            type=\"date\"\r\n            onChange={handleInput}\r\n            name=\"dateStart\"\r\n            autoComplete=\"off\"\r\n            id=\"idStart\"\r\n            label=\"Desde\"\r\n            variant=\"filled\"\r\n            value={checkMoney.dateStart}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <RedditTextField\r\n            fullWidth\r\n            type=\"date\"\r\n            onChange={handleInput}\r\n            name=\"dateEnd\"\r\n            autoComplete=\"off\"\r\n            id=\"idEnd\"\r\n            label=\"Hasta\"\r\n            variant=\"filled\"\r\n            value={checkMoney.dateEnd}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Button\r\n            onClick={() =>\r\n              getIngress(checkMoney.dateStart, checkMoney.dateEnd) &&\r\n              getEgress(checkMoney.dateStart, checkMoney.dateEnd)\r\n            }\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n          >\r\n            Consultar\r\n          </Button>\r\n        </Grid>\r\n        {/* {optionsIngress!.data &&\r\n          alert(optionsIngress!.data.getIngressByDates[0].detail)} */}\r\n      </Grid>\r\n      <SummaryBoxPage\r\n        checkMoney={checkMoney}\r\n        resultIngress={resultIngress}\r\n        resultEgress={resultEgress}\r\n      />\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, module, showData)}</>;\r\n};\r\n\r\nexport default CheckMoneyPage;\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_BRANDS_BY_CATEGORY = gql`\r\n  query getBrandsByCategory($category: String!) {\r\n    getBrandsByCategory(category: $category) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetBrandsByCategory = (category: string) => {\r\n  const { error, loading, data } = useQuery(GET_BRANDS_BY_CATEGORY, {\r\n    variables: { category },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst GET_MODELS_BY_BRAND = gql`\r\n  query getModelsByBrand($brand: String!) {\r\n    getModelsByBrand(brand: $brand) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetModelsByBrand = (brand: string) => {\r\n  const { error, loading, data } = useQuery(GET_MODELS_BY_BRAND, {\r\n    variables: { brand },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst GET_PRODUCTS_BY_CMM = gql`\r\n  query getProductsByCategoryBrandModel(\r\n    $category: String!\r\n    $brand: String!\r\n    $model: String!\r\n  ) {\r\n    getProductsByCategoryBrandModel(\r\n      category: $category\r\n      brand: $brand\r\n      model: $model\r\n    ) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetProductsCMM = (\r\n  category: string,\r\n  brand: string,\r\n  model: string\r\n) => {\r\n  const { error, loading, data } = useQuery(GET_PRODUCTS_BY_CMM, {\r\n    variables: {\r\n      category: category,\r\n      brand: brand,\r\n      model: model,\r\n    },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_PRODUCTS_BY_NAME = gql`\r\n  query getProductByName($product: String!) {\r\n    getProductByName(product: $product) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetProductByName = () => {\r\n  const [getProductByName, { error, loading, data }] =\r\n    useLazyQuery(GET_PRODUCTS_BY_NAME);\r\n\r\n  return { getProductByName, data, error, loading };\r\n};\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_SERVICES_BY_CATEGORY = gql`\r\n  query getServicesByCategory($category: String!) {\r\n    getServicesByCategory(category: $category) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetServicesByCategory = (category: string) => {\r\n  const { error, loading, data } = useQuery(GET_SERVICES_BY_CATEGORY, {\r\n    variables: { category },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_SERVICE_BY_NAME = gql`\r\n  query getServiceByName($service: String!) {\r\n    getServiceByName(service: $service) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetServiceByName = () => {\r\n  const [getServiceByName, { error, loading, data }] =\r\n    useLazyQuery(GET_SERVICE_BY_NAME);\r\n\r\n  return { getServiceByName, data, error, loading };\r\n};\r\n","/* eslint-disable no-use-before-define */\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RedditTextField from \"../components/textfield/reddit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_FOUR } from \"../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { CheckProduct } from \"../interfaces/check-product.interface\";\r\nimport { InputChange } from \"../lib/types\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { AutoCompleteInput } from \"../interfaces/autocompleteinput.interface\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Model } from \"../interfaces/model.interface\";\r\nimport { useGetCategorys } from \"../hooks/category/useGetCategorys\";\r\nimport { useGetBrandsByCategory } from \"../hooks/brand/useBrandsByCategory\";\r\nimport { useGetModelsByBrand } from \"../hooks/model/useGetModelsByBrand\";\r\nimport { Category } from \"../interfaces/category.interface\";\r\nimport { Brand } from \"../interfaces/brand.interface\";\r\nimport { useGetProductsCMM } from \"../hooks/product/useGetProductByCMM\";\r\nimport { Product } from \"../interfaces/product.interface\";\r\nimport { useGetProductByName } from \"../hooks/product/useProductByName\";\r\nimport Progress from \"../components/progress/progress\";\r\nimport { formatMoney } from \"../lib/currency/money\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { Service } from \"../interfaces/service.interface\";\r\nimport { useGetServicesByCategory } from \"../hooks/service/useGetServicesByCategory\";\r\nimport { useGetServiceByName } from \"../hooks/service/useServiceByName\";\r\n\r\nconst initialAutoCompleteInput = {\r\n  category: \"\",\r\n  brand: \"\",\r\n  model: \"\",\r\n  product: \"\",\r\n  service: \"\",\r\n};\r\n\r\nconst initialState: CheckProduct = {\r\n  category: \"\",\r\n  brand: \"\",\r\n  model: \"\",\r\n  product: \"\",\r\n  service: \"\",\r\n};\r\n\r\nconst intialValue = {\r\n  product: true,\r\n  service: false,\r\n};\r\n\r\nconst CheckProducts = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n\r\n  const [checkProduct, setCheckProduct] = useState<CheckProduct>(initialState);\r\n  const [valueInput, setValueInput] = useState<AutoCompleteInput>(\r\n    initialAutoCompleteInput\r\n  );\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n  const [models, setModels] = useState<Model[]>([]);\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [services, setServices] = useState<Service[]>([]);\r\n  const [isActiveRadio, setActiveRadio] = useState(intialValue);\r\n  const { data } = useGetCategorys();\r\n  const optionsGetBrandsByCategory = useGetBrandsByCategory(\r\n    checkProduct.category || \"\"\r\n  );\r\n  const optionsGetServiceByCategory = useGetServicesByCategory(\r\n    checkProduct.category || \"\"\r\n  );\r\n  const optionsGetModelsByBrand = useGetModelsByBrand(checkProduct.brand || \"\");\r\n  const optionsGetProductsCMM = useGetProductsCMM(\r\n    checkProduct.category || \"\",\r\n    checkProduct.brand || \"\",\r\n    checkProduct.model || \"\"\r\n  );\r\n\r\n  const optionGetProduct = useGetProductByName();\r\n  const optionGetService = useGetServiceByName();\r\n\r\n  const dataCategorys = useCallback(() => {\r\n    setCategorys(data?.getCategorys || []);\r\n  }, [data]);\r\n\r\n  const changeBrandByCategory = useCallback(() => {\r\n    setBrands(optionsGetBrandsByCategory?.data?.getBrandsByCategory || []);\r\n  }, [optionsGetBrandsByCategory]);\r\n\r\n  const changeServiceByCategory = useCallback(() => {\r\n    setServices(optionsGetServiceByCategory?.data?.getServicesByCategory || []);\r\n  }, [optionsGetServiceByCategory]);\r\n\r\n  const changeModelByBrand = useCallback(() => {\r\n    setModels(optionsGetModelsByBrand?.data?.getModelsByBrand || []);\r\n  }, [optionsGetModelsByBrand]);\r\n\r\n  const changeProductCMM = useCallback(() => {\r\n    setProducts(\r\n      optionsGetProductsCMM?.data?.getProductsByCategoryBrandModel || []\r\n    );\r\n  }, [optionsGetProductsCMM]);\r\n\r\n  const getProduct = async (product: string | undefined) => {\r\n    try {\r\n      await optionGetProduct.getProductByName({\r\n        variables: {\r\n          product: product,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getService = async (service: string | undefined) => {\r\n    try {\r\n      await optionGetService.getServiceByName({\r\n        variables: {\r\n          service: service,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChangeRadio = (e: any) => {\r\n    if (e.target.name === \"product\") {\r\n      setActiveRadio({\r\n        product: isActiveRadio.service,\r\n        service: !isActiveRadio.service,\r\n      });\r\n    } else {\r\n      setActiveRadio({\r\n        product: !isActiveRadio.product,\r\n        service: isActiveRadio.product,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dataCategorys();\r\n    changeBrandByCategory();\r\n    changeModelByBrand();\r\n    changeProductCMM();\r\n    changeServiceByCategory();\r\n  }, [\r\n    dataCategorys,\r\n    changeBrandByCategory,\r\n    changeModelByBrand,\r\n    changeProductCMM,\r\n    changeServiceByCategory,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          borderRadius: 6,\r\n          border: \"1px solid #e2e2e1\",\r\n        }}\r\n      >\r\n        <div style={{ margin: \"20px 20px 0px 20px\" }}>\r\n          <RadioGroup row aria-label=\"position\" onChange={handleChangeRadio}>\r\n            <FormControlLabel\r\n              value=\"product\"\r\n              checked={isActiveRadio.product}\r\n              control={<Radio color=\"primary\" name=\"product\" />}\r\n              label=\"Producto\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"service\"\r\n              checked={isActiveRadio.service}\r\n              control={<Radio color=\"primary\" name=\"service\" />}\r\n              label=\"Servicio\"\r\n            />\r\n          </RadioGroup>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            padding: 20,\r\n          }}\r\n        >\r\n          <div style={{ width: \"50%\" }}>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <Grid item xs={12}>\r\n                <Autocomplete\r\n                  id=\"idCategory\"\r\n                  onChange={(event, value) => {\r\n                    setCheckProduct({\r\n                      ...checkProduct,\r\n                      category: value?.name || \"\",\r\n                      brand: \"\",\r\n                      model: \"\",\r\n                      product: \"\",\r\n                    });\r\n                    setValueInput({\r\n                      ...valueInput,\r\n                      brand: \"\",\r\n                      model: \"\",\r\n                    });\r\n                  }}\r\n                  onInputChange={(e, newValue) => {\r\n                    setValueInput({ ...valueInput, category: newValue });\r\n                  }}\r\n                  options={categorys}\r\n                  getOptionLabel={(category) => category.name}\r\n                  getOptionSelected={(option, value) =>\r\n                    option.name === value.name\r\n                  }\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      name=\"category\"\r\n                      label=\"Categoria\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n\r\n              {isActiveRadio.product ? (\r\n                <>\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"idBrand\"\r\n                      onChange={(event, value) => {\r\n                        setCheckProduct({\r\n                          ...checkProduct,\r\n                          brand: value?.name || \"\",\r\n                          model: \"\",\r\n                          product: \"\",\r\n                        });\r\n                        setValueInput({\r\n                          ...valueInput,\r\n                          model: \"\",\r\n                          product: \"\",\r\n                        });\r\n                      }}\r\n                      onInputChange={(e, newValue) => {\r\n                        setValueInput({ ...valueInput, brand: newValue });\r\n                      }}\r\n                      options={brands}\r\n                      getOptionLabel={(brand) => brand.name}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.name === value.name\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          name=\"brand\"\r\n                          label=\"Marca\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"idModel\"\r\n                      onChange={(event, value) => {\r\n                        setCheckProduct({\r\n                          ...checkProduct,\r\n                          model: value?.name || \"\",\r\n                          product: \"\",\r\n                        });\r\n                        setValueInput({\r\n                          ...valueInput,\r\n                          product: \"\",\r\n                        });\r\n                      }}\r\n                      onInputChange={(e, newValue) => {\r\n                        setValueInput({ ...valueInput, model: newValue });\r\n                      }}\r\n                      options={models}\r\n                      getOptionLabel={(model) => model.name}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.name === value.name\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          name=\"model\"\r\n                          label=\"Modelo\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"idProduct\"\r\n                      onChange={(event, value) => {\r\n                        setCheckProduct({\r\n                          ...checkProduct,\r\n                          product: value?.name || \"\",\r\n                        });\r\n                      }}\r\n                      onInputChange={(e, newValue) => {\r\n                        setValueInput({ ...valueInput, product: newValue });\r\n                      }}\r\n                      options={products}\r\n                      getOptionLabel={(product) => product.name}\r\n                      getOptionSelected={(option, value) =>\r\n                        option.name === value.name\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          name=\"product\"\r\n                          label=\"Productos\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </>\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  <Autocomplete\r\n                    id=\"idService\"\r\n                    onChange={(event, value) => {\r\n                      setCheckProduct({\r\n                        ...checkProduct,\r\n                        service: value?.name || \"\",\r\n                      });\r\n                    }}\r\n                    onInputChange={(e, newValue) => {\r\n                      setValueInput({ ...valueInput, service: newValue });\r\n                    }}\r\n                    options={services}\r\n                    getOptionLabel={(service) => service.name}\r\n                    getOptionSelected={(option, value) =>\r\n                      option.name === value.name\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        name=\"service\"\r\n                        label=\"Servicios\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {isActiveRadio.product ? (\r\n                <Grid item xs={12}>\r\n                  {optionGetProduct.loading ? (\r\n                    <Progress />\r\n                  ) : (\r\n                    <Button\r\n                      fullWidth\r\n                      type=\"button\"\r\n                      onClick={() => getProduct(valueInput.product)}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Consultar\r\n                    </Button>\r\n                  )}\r\n                </Grid>\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  {optionGetService.loading ? (\r\n                    <Progress />\r\n                  ) : (\r\n                    <Button\r\n                      fullWidth\r\n                      type=\"button\"\r\n                      onClick={() => getService(valueInput.service)}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Consultar\r\n                    </Button>\r\n                  )}\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              padding: \"0px 0px 0px 20px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"80%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  height: \"10%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  background: optionGetProduct!.data\r\n                    ? \"yellow\"\r\n                    : optionGetService!.data\r\n                    ? \"yellow\"\r\n                    : \"#fff\",\r\n                }}\r\n              >\r\n                <strong>\r\n                  {isActiveRadio.product\r\n                    ? optionGetProduct!.data &&\r\n                      `Descripción del producto ${\r\n                        optionGetProduct!.data.getProductByName.name\r\n                      }`\r\n                    : optionGetService!.data &&\r\n                      `Descripción del servicio ${\r\n                        optionGetService!.data.getServiceByName.name\r\n                      }`}\r\n                </strong>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  height: \"90%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  wordBreak: \"break-all\",\r\n                  fontSize: \"15px\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                {isActiveRadio.product\r\n                  ? optionGetProduct!.data &&\r\n                    optionGetProduct!.data.getProductByName.description\r\n                  : optionGetService!.data &&\r\n                    optionGetService!.data.getServiceByName.description}\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: \"20%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label style={{ fontSize: 75 }}>\r\n                {isActiveRadio.product\r\n                  ? optionGetProduct!.data &&\r\n                    formatMoney(optionGetProduct!.data.getProductByName.price)\r\n                  : optionGetService!.data &&\r\n                    formatMoney(optionGetService!.data.getServiceByName.price)}\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckProducts;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_MODELS = gql`\r\n  query getModels {\r\n    getModels {\r\n      id\r\n      name\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetModels = () => {\r\n  const { data, error, loading } = useQuery(GET_MODELS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { GET_MODELS } from \"./useGetModels\";\r\n\r\ninterface UpdateModelInput {\r\n  variables: {\r\n    modelInput: Model;\r\n  };\r\n}\r\n\r\nconst UPDATE_MODEL = gql`\r\n  mutation updateModel($modelInput: UpdateModelInput!) {\r\n    updateModel(modelInput: $modelInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateModel = () => {\r\n  const [updateModel, { error, loading }] = useMutation(UPDATE_MODEL, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODELS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateModel, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { GET_MODELS } from \"./useGetModels\";\r\n\r\ninterface CreateModelInput {\r\n  variables: {\r\n    modelInput: Model;\r\n  };\r\n}\r\n\r\nconst CREATE_MODEL = gql`\r\n  mutation registerModel($modelInput: CreateModelInput!) {\r\n    registerModel(modelInput: $modelInput) {\r\n      id\r\n      name\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateModel = () => {\r\n  const [registerModel, { error, loading }] = useMutation(CREATE_MODEL, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODELS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerModel, error, loading };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport { useUpdateModel } from \"../../hooks/model/useUpdateModel\";\r\nimport { useCreateModel } from \"../../hooks/model/useCreateModel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useGetBrands } from \"../../hooks/brand/useGetBrands\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  model?: Model;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst ModelForm = ({ handleClose, model }: Options) => {\r\n  const initialValueCreate: Model = {\r\n    name: \"\",\r\n    brand: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Model = {\r\n    id: model?.id || \"\",\r\n    name: model?.name || \"\",\r\n    brand: model?.brand?.name || \"\",\r\n  };\r\n\r\n  const [modelForm, setModelForm] = useState<Model>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n  const { data } = useGetBrands();\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateModel = useUpdateModel();\r\n  const optionsCreateModel = useCreateModel();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setModelForm({ ...modelForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setModelForm({\r\n      ...modelForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (modelForm.id) {\r\n      try {\r\n        await optionsUpdateModel.updateModel({\r\n          variables: {\r\n            modelInput: modelForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modelo se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateModel.registerModel({\r\n          variables: {\r\n            modelInput: modelForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modelo ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBrands(data.getBrands);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel id=\"idMarca\">Marca</InputLabel>\r\n            <Select\r\n              labelId=\"Marca\"\r\n              id=\"idMarca\"\r\n              value={modelForm.brand}\r\n              onChange={handleSelect}\r\n              label=\"Marca\"\r\n              name=\"brand\"\r\n            >\r\n              {brands.map((brand) => (\r\n                <MenuItem key={brand.id} value={brand.name}>\r\n                  {brand.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Modelo\"\r\n            variant=\"outlined\"\r\n            value={modelForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {modelForm.id ? (\r\n            optionsUpdateModel.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateModel.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ModelForm;\r\n","import { Model } from \"../../interfaces/model.interface\";\r\n\r\nimport { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport ModelForm from \"./model-form\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ModelList = ({ model }: { model: Model }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Modelo\":\r\n        return <ModelForm model={model} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={model}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar Modelo\"\r\n          onClick={() => setDialog({ name: \"Modelo\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {model.brand?.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {model.name}\r\n        </TableCell>\r\n        <TableCell>{moment(model.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(model.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default ModelList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport ModelList from \"../components/model/model-list\";\r\nimport { Model } from \"../interfaces/model.interface\";\r\nimport ModelForm from \"../components/model/model-form\";\r\nimport { useGetModels } from \"../hooks/model/useGetModels\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ModelPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetModels();\r\n  const [models, setModels] = useState<Model[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ModelForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setModels(data.getModels);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Modelo`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Modelo\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Marca</TableCell>\r\n              <TableCell>Modelo</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {models.map((model) => (\r\n              <ModelList key={model.id} model={model} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelPage;\r\n","import React from \"react\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { MENU_FORBIDDEN } from \"../../const\";\r\n\r\n/**\r\n * @param columns:any\r\n * @returns {columns: Array(1)}\r\n **/\r\n\r\n/**\r\n * @param {columns}:any\r\n * @returns [{…}]\r\n **/\r\n\r\nconst ItemModuleMenu = ({ menu }: { menu: Menu }) => {\r\n  return (\r\n    <>\r\n      {menu.name === MENU_FORBIDDEN ? (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={menu.name}\r\n          color=\"primary\"\r\n        />\r\n      ) : (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={menu.name}\r\n          onDelete={() => alert(\"keiner\")}\r\n          color=\"primary\"\r\n        />\r\n      )}\r\n      &nbsp;\r\n    </>\r\n  );\r\n};\r\nexport default ItemModuleMenu;\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Access } from \"../../interfaces/access.interface\";\r\n/**\r\n * @param columns:any\r\n * @returns {columns: Array(1)}\r\n **/\r\n\r\n/**\r\n * @param {columns}:any\r\n * @returns [{…}]\r\n **/\r\n\r\nconst ItemModuleAccess = ({ access }: { access: Access }) => {\r\n  return (\r\n    <>\r\n      <Chip\r\n        style={{ margin: \"3px\" }}\r\n        size=\"small\"\r\n        label={access.name}\r\n        onDelete={() => alert(\"keiner\")}\r\n        color=\"primary\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ItemModuleAccess;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { GET_MODULES } from \"./useGetModules\";\r\n\r\ninterface UpdateModuleInput {\r\n  variables: {\r\n    moduleInput: Module;\r\n  };\r\n}\r\n\r\nconst UDATE_MODULE = gql`\r\n  mutation updateModule($moduleInput: UpdateModuleInput!) {\r\n    updateModule(moduleInput: $moduleInput) {\r\n      id\r\n      name\r\n      description\r\n      menus {\r\n        id\r\n        name\r\n      }\r\n      access {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateModule = () => {\r\n  const [updateModule, { error, loading }] = useMutation(UDATE_MODULE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODULES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateModule, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { GET_MODULES } from \"./useGetModules\";\r\n\r\ninterface CreateModuleInput {\r\n  variables: {\r\n    moduleInput: Module;\r\n  };\r\n}\r\n\r\nconst CREATE_MODULE = gql`\r\n  mutation registerModule($moduleInput: CreateModuleInput!) {\r\n    registerModule(moduleInput: $moduleInput) {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      menus {\r\n        id\r\n        name\r\n      }\r\n      access {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateModule = () => {\r\n  const [registerModule, { error, loading }] = useMutation(CREATE_MODULE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODULES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerModule, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\n\r\nconst GET_ACCESS = gql`\r\n  query getAccess {\r\n    getAccess {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetAllAccess = () => {\r\n  const { data, error, loading }: any = useQuery(GET_ACCESS);\r\n  const dispatch = useDispatch();\r\n\r\n  if (error) {\r\n    dispatch(\r\n      setAlert({\r\n        type: \"error\",\r\n        text: error.message,\r\n      })\r\n    );\r\n  }\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\n\r\nconst GET_MENUS = gql`\r\n  query getMenus {\r\n    getMenus {\r\n      id\r\n      name\r\n      link\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetMenus = () => {\r\n  const { data, error, loading }: any = useQuery(GET_MENUS);\r\n  const dispatch = useDispatch();\r\n\r\n  if (error) {\r\n    dispatch(\r\n      setAlert({\r\n        type: \"error\",\r\n        text: error.message,\r\n      })\r\n    );\r\n  }\r\n  return { data, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useUpdateModule } from \"../../hooks/module/useUpdateModule\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { Access } from \"../../interfaces/access.interface\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Progress from \"../progress/progress\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport { useCreateModule } from \"../../hooks/module/useCreateModule\";\r\nimport { useGetAllAccess } from \"../../hooks/access/useGetAllAceess\";\r\nimport { useGetMenus } from \"../../hooks/menu/useGetMenus\";\r\nimport { MENU_FORBIDDEN, MODULE_FORBIDDEN } from \"../../const\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\ntype SelectChange = ChangeEvent<{ value: unknown } | any | HTMLSelectElement>;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst ModuleForm = ({\r\n  module,\r\n  handleClose,\r\n}: {\r\n  module?: Module;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValueUpdate: Module = {\r\n    id: module?.id || \"\",\r\n    name: module?.name || \"\",\r\n    description: module?.description || \"\",\r\n  };\r\n\r\n  const initialValueCreate: Module = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const optionsUpdateModule = useUpdateModule();\r\n  const optionsCreateModule = useCreateModule();\r\n  const optionsGetAccess = useGetAllAccess();\r\n  const optionsGetMenus = useGetMenus();\r\n  const [menuSelected, setMenuSelected] = useState<Menu[]>([]);\r\n  const [accessSelected, setAccessSelected] = useState<Access[]>([]);\r\n  const [listMenus, setListMenus] = useState<Menu[]>([]);\r\n  const [listAccess, setListAccess] = useState<Access[]>([]);\r\n  const [moduleForm, setModuleForm] = useState<Module>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setModuleForm({ ...moduleForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelectMenus = (e: SelectChange) => {\r\n    setMenuSelected(e.target.value);\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelectAccess = (e: SelectChange) => {\r\n    setAccessSelected(e.target.value);\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const sentToAddMenus = menuSelected.map((value) => {\r\n    return { name: value };\r\n  });\r\n\r\n  const sentToAddAccess = accessSelected.map((value) => {\r\n    return { name: value };\r\n  });\r\n\r\n  function getStyles(name: any, personName: Module[], theme: Theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    if (moduleForm.id) {\r\n      try {\r\n        await optionsUpdateModule.updateModule({\r\n          variables: {\r\n            moduleInput: moduleForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modulo se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateModule.registerModule({\r\n          variables: {\r\n            moduleInput: {\r\n              ...moduleForm,\r\n              access: sentToAddAccess,\r\n              menus: sentToAddMenus,\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modulo se registró correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionsGetMenus.data && optionsGetAccess.data) {\r\n      const listMenusNoModulos = optionsGetMenus.data.getMenus.filter(\r\n        (menu: any) => menu.name !== MENU_FORBIDDEN\r\n      );\r\n      setListMenus(listMenusNoModulos);\r\n      setListAccess(optionsGetAccess.data.getAccess);\r\n    }\r\n  }, [optionsGetMenus.data, optionsGetAccess.data, moduleForm.name]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          {moduleForm.id && moduleForm.name === MODULE_FORBIDDEN ? (\r\n            \"\"\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                onChange={handleInput}\r\n                name=\"name\"\r\n                id=\"idName\"\r\n                label=\"Modulo\"\r\n                variant=\"outlined\"\r\n                value={moduleForm.name}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"description\"\r\n              id=\"idDescription\"\r\n              label=\"Descripción\"\r\n              multiline\r\n              value={moduleForm.description}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          {!initialValueUpdate.id && (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"menus-mutiple-chip-label\">Menus</InputLabel>\r\n                  <Select\r\n                    labelId=\"menus-mutiple-chip-label\"\r\n                    id=\"menus-mutiple-chip\"\r\n                    multiple\r\n                    value={menuSelected}\r\n                    onChange={handleSelectMenus}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={(selected) => (\r\n                      <div className={classes.chips}>\r\n                        {(selected as any[]).map((menu) => {\r\n                          return (\r\n                            <Chip\r\n                              key={menu}\r\n                              label={menu}\r\n                              className={menu.chip}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {listMenus.map((menu) => (\r\n                      <MenuItem\r\n                        key={menu.id}\r\n                        value={menu.name}\r\n                        style={getStyles(\r\n                          menu.name,\r\n                          moduleForm.menus || [],\r\n                          theme\r\n                        )}\r\n                      >\r\n                        {menu.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"access-mutiple-chip-label\">\r\n                    Accesos\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"access-mutiple-chip-label\"\r\n                    id=\"access-mutiple-chip\"\r\n                    multiple\r\n                    value={accessSelected}\r\n                    onChange={handleSelectAccess}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={(selected) => (\r\n                      <div className={classes.chips}>\r\n                        {(selected as any[]).map((access) => {\r\n                          return (\r\n                            <Chip\r\n                              key={access}\r\n                              label={access}\r\n                              className={access.chip}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {listAccess.map((access) => (\r\n                      <MenuItem\r\n                        key={access.id}\r\n                        value={access.name}\r\n                        style={getStyles(\r\n                          access.name,\r\n                          moduleForm.access || [],\r\n                          theme\r\n                        )}\r\n                      >\r\n                        {access.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={() => handleClose()} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {moduleForm.id ? (\r\n              optionsUpdateModule.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreateModule.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModuleForm;\r\n","import React, { useState, FormEvent, useCallback, useEffect } from \"react\";\r\nimport { Access } from \"../../interfaces/access.interface\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useUpdateModule } from \"../../hooks/module/useUpdateModule\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useGetAllAccess } from \"../../hooks/access/useGetAllAceess\";\r\nimport TrasnferList from \"../../lib/transfer-list-component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst AccesoForm = ({\r\n  module,\r\n  handleClose,\r\n}: {\r\n  module: Module;\r\n  handleClose: () => void;\r\n}) => {\r\n  const [listAvailable, setListAvailable] = useState<Access[]>([]);\r\n  const [listCurrent, setListCurrent] = useState<Access[]>([]);\r\n  const [checked, setChecked] = useState<Access[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateModule = useUpdateModule();\r\n  const optionsGetAllAccess = useGetAllAccess();\r\n  const alert = useSelector((state: any) => state.message);\r\n  const { type, text } = alert;\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    const newData = listCurrent.map((access) => {\r\n      return {\r\n        name: access.name,\r\n      };\r\n    });\r\n\r\n    try {\r\n      await optionsUpdateModule.updateModule({\r\n        variables: {\r\n          moduleInput: {\r\n            id: module.id,\r\n            access: newData,\r\n          },\r\n        },\r\n      });\r\n      return dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"El modulo actualizó sus accesos correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadAccessAvailable = useCallback(() => {\r\n    const res = optionsGetAllAccess.data.getAccess.filter(\r\n      (dispo: Access) =>\r\n        !module.access?.some((actual) => dispo.name === actual.name)\r\n    );\r\n\r\n    setListAvailable(res);\r\n  }, [module, optionsGetAllAccess.data]);\r\n\r\n  useEffect(() => {\r\n    if (module && optionsGetAllAccess.data) {\r\n      setListCurrent(module.access || []);\r\n      loadAccessAvailable();\r\n    }\r\n  }, [module, optionsGetAllAccess.data, loadAccessAvailable]);\r\n\r\n  if (type === \"error\") {\r\n    return <h1>{text}</h1>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TrasnferList\r\n            setListAvailable={setListAvailable}\r\n            setListCurrent={setListCurrent}\r\n            setChecked={setChecked}\r\n            checked={checked}\r\n            listAvailable={listAvailable}\r\n            titleAvailable=\"Accesos disponibles\"\r\n            listCurrent={listCurrent}\r\n            titleCurrent=\"Accesos actuales\"\r\n            loading={optionsGetAllAccess.loading}\r\n          />\r\n        </Grid>\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disabled={optionsUpdateModule.loading ? true : false}\r\n          >\r\n            {module.id ? \"Actualizar\" : \"Registrar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccesoForm;\r\n","import React, { useState, useEffect, FormEvent, useCallback } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { useGetMenus } from \"../../hooks/menu/useGetMenus\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useUpdateModule } from \"../../hooks/module/useUpdateModule\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TrasnferList from \"../../lib/transfer-list-component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { MENU_FORBIDDEN } from \"../../const\";\r\n\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst MenuForm = ({\r\n  module,\r\n  handleClose,\r\n}: {\r\n  module: Module;\r\n  handleClose: () => void;\r\n}) => {\r\n  const [listAvailable, setListAvailable] = useState<Menu[]>([]);\r\n  const [listCurrent, setListCurrent] = useState<Menu[]>([]);\r\n  const [checked, setChecked] = useState<Menu[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsGetMenus = useGetMenus();\r\n  const optionsUpdateModule = useUpdateModule();\r\n  const alert = useSelector((state: any) => state.message);\r\n  const { type, text } = alert;\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    const newData = listCurrent.map((menu) => {\r\n      return {\r\n        name: menu.name,\r\n      };\r\n    });\r\n\r\n    try {\r\n      await optionsUpdateModule.updateModule({\r\n        variables: {\r\n          moduleInput: {\r\n            id: module.id,\r\n            menus: newData,\r\n          },\r\n        },\r\n      });\r\n      return dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"El modulo actualizó sus menu correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadMenusAvailable = useCallback(() => {\r\n    const res = optionsGetMenus.data.getMenus.filter(\r\n      (dispo: Menu) =>\r\n        !module.menus?.some((actual) => dispo.name === actual.name)\r\n    );\r\n\r\n    const listMenusAvailableNoModulos = res.filter(\r\n      (menu: any) => menu.name !== MENU_FORBIDDEN\r\n    );\r\n\r\n    setListAvailable(listMenusAvailableNoModulos);\r\n  }, [module, optionsGetMenus.data]);\r\n\r\n  useEffect(() => {\r\n    if (module && optionsGetMenus.data) {\r\n      const listMenusCurrentNoModulos = module.menus?.filter(\r\n        (module) => module.name !== MENU_FORBIDDEN\r\n      );\r\n      setListCurrent(listMenusCurrentNoModulos || []);\r\n\r\n      loadMenusAvailable();\r\n    }\r\n  }, [module, optionsGetMenus.data, loadMenusAvailable]);\r\n\r\n  if (type === \"error\") {\r\n    return <h1>{text}</h1>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TrasnferList\r\n            setListAvailable={setListAvailable}\r\n            setListCurrent={setListCurrent}\r\n            setChecked={setChecked}\r\n            checked={checked}\r\n            listAvailable={listAvailable}\r\n            titleAvailable=\"Menus disponibles\"\r\n            listCurrent={listCurrent}\r\n            titleCurrent=\"Menus actuales\"\r\n            loading={optionsGetMenus.loading}\r\n          />\r\n        </Grid>\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disabled={optionsUpdateModule.loading ? true : false}\r\n          >\r\n            {module.id ? \"Actualizar\" : \"Registrar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MenuForm;\r\n","import React, { useState } from \"react\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport ItemModuleMenu from \"./item-module-menu\";\r\nimport ItemModuleAccess from \"./item-module-access\";\r\n//tables\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n//button\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n//icon\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport VerifiedUserRoundedIcon from \"@material-ui/icons/VerifiedUserRounded\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\n//dates\r\nimport moment from \"moment\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport ModuleForm from \"../module/module-form.component\";\r\nimport AccesoForm from \"../acceso/access-form.component\";\r\nimport MenuForm from \"../menu/menu-form.component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { MODULE_FORBIDDEN } from \"../../const\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ItemModule = ({ module }: { module: Module }) => {\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Modulo\":\r\n        return <ModuleForm module={module} handleClose={handleClose} />;\r\n\r\n      case \"Acceso\":\r\n        return <AccesoForm module={module} handleClose={handleClose} />;\r\n\r\n      case \"Menu\":\r\n        return <MenuForm module={module} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //[\"error\",\"info\",\"success\",\"warning\"]\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={module}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {module.name}\r\n        </TableCell>\r\n        <TableCell>{module.description}</TableCell>\r\n        <TableCell>{moment(module.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(module.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell align=\"center\">\r\n          {module.menus &&\r\n            module.menus.map((menu) => (\r\n              <ItemModuleMenu key={menu.id} menu={menu} />\r\n            ))}\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          {module.name === MODULE_FORBIDDEN ? (\r\n            <Chip\r\n              style={{ margin: \"3px\" }}\r\n              size=\"small\"\r\n              label=\"Todos los permisos\"\r\n              color=\"primary\"\r\n            />\r\n          ) : (\r\n            module.access &&\r\n            module.access.map((access) => (\r\n              <ItemModuleAccess key={access.id} access={access} />\r\n            ))\r\n          )}\r\n        </TableCell>\r\n\r\n        {module.name === MODULE_FORBIDDEN ? (\r\n          <TableCell align=\"center\">\r\n            <Tooltip\r\n              title=\"Asignar menu\"\r\n              onClick={() => setDialog({ name: \"Menu\", active: true })}\r\n            >\r\n              <IconButton aria-label=\"menu\" size=\"small\">\r\n                <MenuRoundedIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </TableCell>\r\n        ) : (\r\n          <>\r\n            <TableCell align=\"right\">\r\n              <Tooltip\r\n                title=\"Asignar menu\"\r\n                onClick={() => setDialog({ name: \"Menu\", active: true })}\r\n              >\r\n                <IconButton aria-label=\"menu\" size=\"small\">\r\n                  <MenuRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Asignar acceso\"\r\n                onClick={() => setDialog({ name: \"Acceso\", active: true })}\r\n              >\r\n                <IconButton aria-label=\"acceso\" size=\"small\">\r\n                  <VerifiedUserRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Editar modulo\"\r\n                onClick={() => setDialog({ name: \"Modulo\", active: true })}\r\n              >\r\n                <IconButton aria-label=\"acceso\" size=\"small\">\r\n                  <EditRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </TableCell>\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemModule;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGetModules } from \"../hooks/module/useGetModules\";\r\nimport { Module } from \"../interfaces/module.interface\";\r\n//css library materialui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//tables\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n//end tables\r\nimport ItemModule from \"../components/table/item-module.component\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ModuleForm from \"../components/module/module-form.component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { ROLSA } from \"../const\";\r\nimport { findError } from \"../helpers/control-errors\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ModulePage = () => {\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n  const { data, loading, error } = useGetModules();\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ModuleForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setModules(data.getModules);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {auth?.role?.name === ROLSA ? (\r\n        <>\r\n          <DialogForm\r\n            open={dialog.active}\r\n            title={`${dialog.name} Modulo`}\r\n            component={component(dialog.name)}\r\n            handleClose={handleClose}\r\n          />\r\n\r\n          <Tooltip title=\"Crear Rol\">\r\n            <IconButton\r\n              aria-label=\"add\"\r\n              size=\"small\"\r\n              onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n            >\r\n              <AddRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Modulo</TableCell>\r\n                  <TableCell>Descripción</TableCell>\r\n                  <TableCell>Fecha creada</TableCell>\r\n                  <TableCell>Fecha modificada</TableCell>\r\n                  <TableCell align=\"center\">Menus</TableCell>\r\n                  <TableCell align=\"center\">Permisos</TableCell>\r\n                  <TableCell align=\"right\">Opciones</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {modules.map((module) => (\r\n                  <ItemModule key={module.id} module={module} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1>No tiene permiso para acceder a este recurso.</h1>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModulePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_PRODUCTS = gql`\r\n  query getProducts {\r\n    getProducts {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      cant\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n      model {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetProducts = () => {\r\n  const { data, error, loading } = useQuery(GET_PRODUCTS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Product } from \"../../interfaces/product.interface\";\r\nimport { GET_PRODUCTS } from \"./useGetProducts\";\r\n\r\ninterface UpdateProductInput {\r\n  variables: {\r\n    productInput: Product;\r\n  };\r\n}\r\n\r\nconst UPDATE_PRODUCT = gql`\r\n  mutation updateService($productInput: UpdateProductInput!) {\r\n    updateProduct(productInput: $productInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n      model {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateProduct = () => {\r\n  const [updateProduct, { error, loading }] = useMutation(UPDATE_PRODUCT, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_PRODUCTS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateProduct, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Product } from \"../../interfaces/product.interface\";\r\nimport { GET_PRODUCTS } from \"./useGetProducts\";\r\n\r\ninterface CreateProductInput {\r\n  variables: {\r\n    productInput: Product;\r\n  };\r\n}\r\n\r\nconst CREATE_PRODUCT = gql`\r\n  mutation registerProduct($productInput: CreateProductInput!) {\r\n    registerProduct(productInput: $productInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n      model {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateProduct = () => {\r\n  const [registerProduct, { error, loading }] = useMutation(CREATE_PRODUCT, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_PRODUCTS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerProduct, error, loading };\r\n};\r\n","import { Product } from \"../../interfaces/product.interface\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Progress from \"../progress/progress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { useUpdateProduct } from \"../../hooks/product/useUpdateProduct\";\r\nimport { useCreateProduct } from \"../../hooks/product/useCreateProduct\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useGetBrandsByCategory } from \"../../hooks/brand/useBrandsByCategory\";\r\nimport { useGetModelsByBrand } from \"../../hooks/model/useGetModelsByBrand\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { AutoCompleteInput } from \"../../interfaces/autocompleteinput.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  product?: Product;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialAutoCompleteInput = {\r\n  category: \"\",\r\n  brand: \"\",\r\n  model: \"\",\r\n};\r\n\r\nconst ProductForm = ({ handleClose, product }: Options) => {\r\n  const initialValueCreate: Product = {\r\n    name: \"\",\r\n    price: 0,\r\n    category: \"\",\r\n    brand: \"\",\r\n    model: \"\",\r\n    cant: 0,\r\n  };\r\n\r\n  const initialValueUpdate: Product = {\r\n    id: product?.id || \"\",\r\n    name: product?.name || \"\",\r\n    description: product?.description || \"\",\r\n    price: product?.price || 0,\r\n    cant: product?.cant || 0,\r\n    category: product?.category?.name || \"\",\r\n    brand: product?.brand?.name || \"\",\r\n    model: product?.model?.name || \"\",\r\n  };\r\n\r\n  const [productForm, setProductForm] = useState<Product>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [valueInput, setValueInput] = useState<AutoCompleteInput>(\r\n    initialAutoCompleteInput\r\n  );\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n  const [models, setModels] = useState<Model[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateProduct = useUpdateProduct();\r\n  const optionsCreateProduct = useCreateProduct();\r\n  const optionsGetBrandsByCategory = useGetBrandsByCategory(\r\n    productForm.category || \"\"\r\n  );\r\n\r\n  const optionsGetModelsByBrand = useGetModelsByBrand(productForm.brand || \"\");\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setProductForm({\r\n      ...productForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  //https://stackoverflow.com/questions/62588055/how-to-get-the-name-of-material-ui-autocomplete-component\r\n\r\n  const dataCategorys = useCallback(() => {\r\n    setCategorys(data.getCategorys);\r\n  }, [data]);\r\n\r\n  const changeBrandByCategory = useCallback(() => {\r\n    setBrands(optionsGetBrandsByCategory?.data?.getBrandsByCategory || []);\r\n  }, [optionsGetBrandsByCategory]);\r\n\r\n  const changeModelByBrand = useCallback(() => {\r\n    setModels(optionsGetModelsByBrand?.data?.getModelsByBrand || []);\r\n  }, [optionsGetModelsByBrand]);\r\n\r\n  const handleKeyUpCategory = (e: any) => {\r\n    if (\r\n      e.target.value.length < productForm.category.length ||\r\n      e.target.value.length === 0\r\n    ) {\r\n      setProductForm({\r\n        ...productForm,\r\n        category: \"\",\r\n        brand: \"\",\r\n        model: \"\",\r\n      });\r\n      setValueInput({\r\n        ...valueInput,\r\n        category: \"\",\r\n        brand: \"\",\r\n        model: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleKeyUpBrand = (e: any) => {\r\n    if (\r\n      e.target.value.length < productForm.brand.length ||\r\n      e.target.value.length === 0\r\n    ) {\r\n      setProductForm({ ...productForm, brand: \"\", model: \"\" });\r\n      setValueInput({\r\n        ...valueInput,\r\n        brand: \"\",\r\n        model: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleKeyUpModel = (e: any) => {\r\n    if (\r\n      e.target.value.length < productForm.model.length ||\r\n      e.target.value.length === 0\r\n    ) {\r\n      setProductForm({ ...productForm, model: \"\" });\r\n      setValueInput({\r\n        ...valueInput,\r\n        model: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (productForm.id) {\r\n      try {\r\n        await optionsUpdateProduct.updateProduct({\r\n          variables: {\r\n            productInput: {\r\n              ...productForm,\r\n              price: Number(productForm.price),\r\n              cant: Number(productForm.cant),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El producto se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateProduct.registerProduct({\r\n          variables: {\r\n            productInput: {\r\n              ...productForm,\r\n              price: Number(productForm.price),\r\n              cant: Number(productForm.cant),\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El producto ha sido registrada correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dataCategorys();\r\n      changeBrandByCategory();\r\n      changeModelByBrand();\r\n    }\r\n  }, [data, dataCategorys, changeBrandByCategory, changeModelByBrand]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Autocomplete\r\n            id=\"idCategory\"\r\n            onChange={(event, value) => {\r\n              setProductForm({\r\n                ...productForm,\r\n                category: value?.name || \"\",\r\n                brand: \"\",\r\n                model: \"\",\r\n              });\r\n              setValueInput({\r\n                ...valueInput,\r\n                brand: \"\",\r\n                model: \"\",\r\n              });\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            onKeyUp={handleKeyUpCategory}\r\n            inputValue={\r\n              valueInput.category ? valueInput.category : productForm.category\r\n            }\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, category: newValue });\r\n            }}\r\n            options={categorys}\r\n            getOptionLabel={(category) => (category.name ? category.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"category\"\r\n                label=\"Categoria\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Autocomplete\r\n            id=\"idBrand\"\r\n            onChange={(event, value) => {\r\n              setProductForm({\r\n                ...productForm,\r\n                brand: value?.name || \"\",\r\n                model: \"\",\r\n              });\r\n              setValueInput({\r\n                ...valueInput,\r\n                model: \"\",\r\n              });\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            onKeyUp={handleKeyUpBrand}\r\n            inputValue={valueInput.brand ? valueInput.brand : productForm.brand}\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, brand: newValue });\r\n            }}\r\n            options={brands}\r\n            getOptionLabel={(brand) => (brand.name ? brand.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"brand\"\r\n                label=\"Marca\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Autocomplete\r\n            id=\"idModel\"\r\n            onChange={(event, value) => {\r\n              setProductForm({ ...productForm, model: value?.name || \"\" });\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            onKeyUp={handleKeyUpModel}\r\n            inputValue={valueInput.model ? valueInput.model : productForm.model}\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, model: newValue });\r\n            }}\r\n            options={models}\r\n            getOptionLabel={(model) => (model.name ? model.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                name=\"model\"\r\n                {...params}\r\n                label=\"Modelo\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Producto\"\r\n            variant=\"outlined\"\r\n            value={productForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"description\"\r\n            onChange={handleInput}\r\n            id=\"idDescription\"\r\n            label=\"Descripción\"\r\n            multiline\r\n            rows={6}\r\n            defaultValue={productForm.description}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"price\"\r\n            autoComplete=\"off\"\r\n            id=\"idPrice\"\r\n            label=\"Precio\"\r\n            variant=\"outlined\"\r\n            value={productForm.price}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"cant\"\r\n            autoComplete=\"off\"\r\n            id=\"idCant\"\r\n            label=\"Cantidad\"\r\n            variant=\"outlined\"\r\n            value={productForm.cant}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {productForm.id ? (\r\n            optionsUpdateProduct.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateProduct.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_PRODUCTS } from \"./useGetProducts\";\r\n\r\nconst DELETE_PRODUCT = gql`\r\n  mutation deleteProduct($id: String!) {\r\n    deleteProduct(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteProduct = () => {\r\n  const [deleteProduct, { error, loading }] = useMutation(DELETE_PRODUCT, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_PRODUCTS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteProduct, error, loading };\r\n};\r\n","import { Product } from \"../../interfaces/product.interface\";\r\nimport ProductForm from \"./product-form\";\r\nimport { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { useDeleteProduct } from \"../../hooks/product/useDeleteProduct\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ProductList = ({ product }: { product: Product }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const optionsProduct = useDeleteProduct();\r\n\r\n  const deleteProduct = async (id: string | undefined) => {\r\n    try {\r\n      await optionsProduct.deleteProduct({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Producto\":\r\n        return <ProductForm product={product} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar Producto\"\r\n        onClick={() => setDialog({ name: \"Producto\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"product\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar egreso\"\r\n        onClick={() => deleteProduct(product.id)}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.category!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.brand!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.model!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {formatMoney(product.price)}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n          {product.cant}\r\n        </TableCell>\r\n        <TableCell>{moment(product.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(product.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell align=\"right\">\r\n          {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          {loadAccess(PERMIT_TREE, auth, page, showOptionsForDelete)}\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={product}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, page, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport { Product } from \"../interfaces/product.interface\";\r\nimport ProductList from \"../components/product/product-list\";\r\nimport ProductForm from \"../components/product/product-form\";\r\nimport { useGetProducts } from \"../hooks/product/useGetProducts\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ProductPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetProducts();\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ProductForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setProducts(data.getProducts);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <Tooltip title=\"Crear Producto\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Producto`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Marca</TableCell>\r\n              <TableCell>Model</TableCell>\r\n              <TableCell>Producto</TableCell>\r\n              <TableCell>Precio</TableCell>\r\n              <TableCell>Cantidad</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"right\">Opciones</TableCell>{\" \"}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map((product) => (\r\n              <ProductList key={product.id} product={product} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_ROLES = gql`\r\n  query getRoles {\r\n    getRoles {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      modules {\r\n        id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetRoles = () => {\r\n  const { data, loading, error } = useQuery(GET_ROLES);\r\n  return { data, loading, error };\r\n};\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { MODULE_FORBIDDEN } from \"../../const\";\r\n\r\nconst RoleModuleItem = ({ module }: { module: Module }) => {\r\n  return (\r\n    <>\r\n      {module.name === MODULE_FORBIDDEN ? (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={module.name}\r\n          color=\"primary\"\r\n        />\r\n      ) : (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={module.name}\r\n          onDelete={() => alert(\"keiner\")}\r\n          color=\"primary\"\r\n        />\r\n      )}\r\n      &nbsp;\r\n    </>\r\n  );\r\n};\r\nexport default RoleModuleItem;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { GET_ROLES } from \"./useGetRoles\";\r\n\r\ninterface RoleInput {\r\n  variables: {\r\n    roleInput: Role;\r\n  };\r\n}\r\n\r\nconst CREATE_ROL = gql`\r\n  mutation registerRole($roleInput: RoleInput!) {\r\n    registerRole(roleInput: $roleInput) {\r\n      id\r\n      name\r\n      description\r\n      modules {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateRole = () => {\r\n  const [registerRole, { error, loading }] = useMutation(CREATE_ROL, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_ROLES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerRole, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { useUpdateRole } from \"../../hooks/role/useUpdateRole\";\r\nimport { useCreateRole } from \"../../hooks/role/useCreateRole\";\r\nimport Progress from \"../progress/progress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { useGetModules } from \"../../hooks/module/useGetModules\";\r\nimport { MODULE_FORBIDDEN, ROLSA } from \"../../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\ntype SelectChange = ChangeEvent<{ value: unknown } | any | HTMLSelectElement>;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst RoleForm = ({\r\n  role,\r\n  handleClose,\r\n}: {\r\n  role?: Role;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValueUpdate: Role = {\r\n    id: role?.id || \"\",\r\n    name: role?.name || \"\",\r\n    description: role?.description || \"\",\r\n  };\r\n\r\n  const initialValueCreate: Role = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const optionsUpdateRole = useUpdateRole();\r\n  const optionsCreateRole = useCreateRole();\r\n  const optionsGetModules = useGetModules();\r\n  const [roleForm, setRoleForm] = useState<Role>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [modulesSelected, setModulesSelected] = useState<Module[]>([]);\r\n  const [listModules, setListModules] = useState<Module[]>([]);\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setRoleForm({ ...roleForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setModulesSelected(e.target.value);\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const sentToAddModules = modulesSelected.map((value) => {\r\n    return { name: value };\r\n  });\r\n\r\n  function getStyles(name: any, personName: Module[], theme: Theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    if (roleForm.id) {\r\n      try {\r\n        await optionsUpdateRole.updateRole({\r\n          variables: {\r\n            roleInput: roleForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El rol se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateRole.registerRole({\r\n          variables: {\r\n            roleInput: { ...roleForm, modules: sentToAddModules },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El rol se registró correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionsGetModules.data) {\r\n      const listModulesNoModulos = optionsGetModules.data.getModules.filter(\r\n        (menu: any) => menu.name !== MODULE_FORBIDDEN\r\n      );\r\n      setListModules(listModulesNoModulos);\r\n    }\r\n  }, [optionsGetModules.data]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          {roleForm.id && roleForm.name === ROLSA ? (\r\n            \"\"\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                onChange={handleInput}\r\n                name=\"name\"\r\n                id=\"idName\"\r\n                label=\"Role\"\r\n                variant=\"outlined\"\r\n                value={roleForm.name}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"description\"\r\n              id=\"idDescription\"\r\n              label=\"Descripción\"\r\n              multiline\r\n              value={roleForm.description}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          {!initialValueUpdate.id && (\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"outlined\" fullWidth>\r\n                <InputLabel id=\"module-mutiple-chip-label\">Modulos</InputLabel>\r\n                <Select\r\n                  labelId=\"module-mutiple-chip-label\"\r\n                  id=\"module-mutiple-chip\"\r\n                  multiple\r\n                  value={modulesSelected}\r\n                  onChange={handleSelect}\r\n                  input={<Input id=\"select-multiple-chip\" />}\r\n                  renderValue={(selected) => (\r\n                    <div className={classes.chips}>\r\n                      {(selected as any[]).map((module) => {\r\n                        return (\r\n                          <Chip\r\n                            key={module}\r\n                            label={module}\r\n                            className={classes.chip}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  MenuProps={MenuProps}\r\n                >\r\n                  {listModules.map((module) =>\r\n                    auth?.role?.name === ROLSA ? (\r\n                      <MenuItem\r\n                        key={module.id}\r\n                        value={module.name}\r\n                        style={getStyles(\r\n                          module.name,\r\n                          roleForm.modules || [],\r\n                          theme\r\n                        )}\r\n                      >\r\n                        {module.name}\r\n                      </MenuItem>\r\n                    ) : (\r\n                      module.name !== MODULE_FORBIDDEN && (\r\n                        <MenuItem\r\n                          key={module.id}\r\n                          value={module.name}\r\n                          style={getStyles(\r\n                            module.name,\r\n                            roleForm.modules || [],\r\n                            theme\r\n                          )}\r\n                        >\r\n                          {module.name}\r\n                        </MenuItem>\r\n                      )\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          )}\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={() => handleClose()} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {roleForm.id ? (\r\n              optionsUpdateRole.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreateRole.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleForm;\r\n","import React, { useState } from \"react\";\r\n//tables\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n//button\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n//icon\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\n//dates\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport RoleModuleItem from \"./role-module-item\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport RoleForm from \"./rol-form\";\r\nimport ModuleTransferList from \"../module/module-transfer-list\";\r\nimport ViewModuleRoundedIcon from \"@material-ui/icons/ViewModuleRounded\";\r\nimport { PERMIT_FOUR, PERMIT_TWO, ROLSA } from \"../../const\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst RoleList = ({ role }: { role: Role }) => {\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Modulo\":\r\n        return <ModuleTransferList role={role} handleClose={handleClose} />;\r\n\r\n      case \"Rol\":\r\n        return <RoleForm role={role} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={role}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {role.name === ROLSA ? (\r\n        <TableCell align=\"center\">\r\n          <Tooltip\r\n            title=\"Asignar modulos\"\r\n            onClick={() => setDialog({ name: \"Modulo\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"modules\" size=\"small\">\r\n              <ViewModuleRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      ) : (\r\n        <TableCell align=\"right\">\r\n          <Tooltip\r\n            title=\"Asignar modulos\"\r\n            onClick={() => setDialog({ name: \"Modulo\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"modules\" size=\"small\">\r\n              <ViewModuleRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip\r\n            title=\"Editar rol\"\r\n            onClick={() => setDialog({ name: \"Rol\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"role\" size=\"small\">\r\n              <EditRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        {auth?.role?.name === ROLSA ? (\r\n          <>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {role.name}\r\n            </TableCell>\r\n            <TableCell>{role.description}</TableCell>\r\n            <TableCell>{moment(role.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            <TableCell>{moment(role.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            <TableCell align=\"center\">\r\n              {role.modules &&\r\n                role.modules.map((module) => (\r\n                  <RoleModuleItem key={module.id} module={module} />\r\n                ))}\r\n            </TableCell>\r\n            {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {role.name === ROLSA || (\r\n              <>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {role.name}\r\n                </TableCell>\r\n                <TableCell>{role.description}</TableCell>\r\n                <TableCell>\r\n                  {moment(role.createdAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(role.updatedAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {role.modules &&\r\n                    role.modules.map((module) => (\r\n                      <RoleModuleItem key={module.id} module={module} />\r\n                    ))}\r\n                </TableCell>\r\n                {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default RoleList;\r\n","import React, { useState, useEffect } from \"react\";\r\n//css library materialui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//tables\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Role } from \"../interfaces/role.interface\";\r\nimport { useGetRoles } from \"../hooks/role/useGetRoles\";\r\n//end tables\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport RoleList from \"../components/role/role-list\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RoleForm from \"../components/role/rol-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { findError } from \"../helpers/control-errors\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst RolePage = () => {\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetRoles();\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <RoleForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setRoles(data.getRoles);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialog = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Rol`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n\r\n      <Tooltip title=\"Crear Rol\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialog)}\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Rol</TableCell>\r\n              <TableCell>Descripción</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"center\">Modulos</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {roles.map((role) => (\r\n              <RoleList key={role.id} role={role} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RolePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_SERVICES = gql`\r\n  query getServices {\r\n    getServices {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetServices = () => {\r\n  const { data, error, loading } = useQuery(GET_SERVICES);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Service } from \"../../interfaces/service.interface\";\r\nimport { GET_SERVICES } from \"./useGetServices\";\r\n\r\ninterface UpdateServiceInput {\r\n  variables: {\r\n    serviceInput: Service;\r\n  };\r\n}\r\n\r\nconst UPDATE_SERVICE = gql`\r\n  mutation updateService($serviceInput: UpdateServiceInput!) {\r\n    updateService(serviceInput: $serviceInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateService = () => {\r\n  const [updateService, { error, loading }] = useMutation(UPDATE_SERVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_SERVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateService, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Service } from \"../../interfaces/service.interface\";\r\nimport { GET_SERVICES } from \"./useGetServices\";\r\n\r\ninterface CreateServiceInput {\r\n  variables: {\r\n    serviceInput: Service;\r\n  };\r\n}\r\n\r\nconst CREATE_SERVICE = gql`\r\n  mutation registerService($serviceInput: CreateServiceInput!) {\r\n    registerService(serviceInput: $serviceInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateService = () => {\r\n  const [registerService, { error, loading }] = useMutation(CREATE_SERVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_SERVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerService, error, loading };\r\n};\r\n","import { Service } from \"../../interfaces/service.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useUpdateService } from \"../../hooks/service/useUpdateService\";\r\nimport { useCreateService } from \"../../hooks/service/useCreateService\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Progress from \"../progress/progress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  service?: Service;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst ServiceForm = ({ handleClose, service }: Options) => {\r\n  const initialValueCreate: Service = {\r\n    name: \"\",\r\n    price: 0,\r\n    category: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Service = {\r\n    id: service?.id || \"\",\r\n    name: service?.name || \"\",\r\n    description: service?.description || \"\",\r\n    price: service?.price || 0,\r\n    category: service?.category?.name || \"\",\r\n  };\r\n\r\n  const [serviceForm, setServiceForm] = useState<Service>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateService = useUpdateService();\r\n  const optionsCreateService = useCreateService();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setServiceForm({\r\n      ...serviceForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setServiceForm({\r\n      ...serviceForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (serviceForm.id) {\r\n      try {\r\n        await optionsUpdateService.updateService({\r\n          variables: {\r\n            serviceInput: { ...serviceForm, price: Number(serviceForm.price) },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El servicio se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateService.registerService({\r\n          variables: {\r\n            serviceInput: { ...serviceForm, price: Number(serviceForm.price) },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El servicio ha sido registrada correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategorys(data.getCategorys);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel id=\"idCategory\">Categoria</InputLabel>\r\n            <Select\r\n              labelId=\"Categoria\"\r\n              id=\"idCategory\"\r\n              value={serviceForm.category}\r\n              onChange={handleSelect}\r\n              label=\"Categoria\"\r\n              name=\"category\"\r\n            >\r\n              {categorys.map((category) => (\r\n                <MenuItem key={category.id} value={category.name}>\r\n                  {category.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Servicio\"\r\n            variant=\"outlined\"\r\n            value={serviceForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"description\"\r\n            autoComplete=\"off\"\r\n            id=\"idDescription\"\r\n            label=\"Descripción\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            value={serviceForm.description}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"price\"\r\n            autoComplete=\"off\"\r\n            id=\"idPrice\"\r\n            label=\"Precio\"\r\n            variant=\"outlined\"\r\n            value={serviceForm.price}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {serviceForm.id ? (\r\n            optionsUpdateService.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateService.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ServiceForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { GET_SERVICES } from \"./useGetServices\";\r\n\r\nconst DELETE_SERVICE = gql`\r\n  mutation deleteService($id: String!) {\r\n    deleteService(id: $id)\r\n  }\r\n`;\r\n\r\nexport const useDeleteService = () => {\r\n  const [deleteService, { error, loading }] = useMutation(DELETE_SERVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_SERVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { deleteService, error, loading };\r\n};\r\n","import { Service } from \"../../interfaces/service.interface\";\r\nimport { useState } from \"react\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TREE, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport ServiceForm from \"./service-form\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\nimport HighlightOffRoundedIcon from \"@material-ui/icons/HighlightOffRounded\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { useDeleteService } from \"../../hooks/service/useDeleteService\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ServiceList = ({ service }: { service: Service }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n  const optionsService = useDeleteService();\r\n\r\n  const deleteService = async (id: string | undefined) => {\r\n    try {\r\n      await optionsService.deleteService({\r\n        variables: {\r\n          id,\r\n        },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Servicio\":\r\n        return <ServiceForm service={service} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Editar Servicio\"\r\n        onClick={() => setDialog({ name: \"Servicio\", active: true })}\r\n      >\r\n        <IconButton aria-label=\"service\" size=\"small\">\r\n          <EditRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForDelete = () => (\r\n    <>\r\n      <Tooltip\r\n        title=\"Eliminar egreso\"\r\n        onClick={() => deleteService(service.id)}\r\n      >\r\n        <IconButton aria-label=\"egress\" size=\"small\">\r\n          <HighlightOffRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {service.category!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {service.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {formatMoney(service.price)}\r\n        </TableCell>\r\n        <TableCell>{moment(service.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(service.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n\r\n        <TableCell align=\"right\">\r\n          {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          {loadAccess(PERMIT_TREE, auth, page, showOptionsForDelete)}\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={service}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {loadAccess(PERMIT_FOUR, auth, page, showData)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport { Service } from \"../interfaces/service.interface\";\r\nimport ServiceForm from \"../components/service/service-form\";\r\nimport ServiceList from \"../components/service/service-list\";\r\nimport { useGetServices } from \"../hooks/service/useGetServices\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ServicePage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetServices();\r\n  const [services, setServices] = useState<Service[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ServiceForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setServices(data.getServices);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Servicio`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Servicio\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Servicio</TableCell>\r\n              <TableCell>Precio</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"right\">Opciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {services.map((service) => (\r\n              <ServiceList key={service.id} service={service} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServicePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_USERS = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      status\r\n      createdAt\r\n      updatedAt\r\n      role {\r\n        name\r\n        description\r\n        modules {\r\n          access {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetUsers = () => {\r\n  const { data, loading, error } = useQuery(GET_USERS);\r\n\r\n  return { data, loading, error };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { GET_USERS } from \"./useGetUsers\";\r\n\r\ninterface UserUpdateInput {\r\n  variables: {\r\n    userInput: User;\r\n  };\r\n}\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateRole($userInput: UserUpdateInput!) {\r\n    updateUser(userInput: $userInput) {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      role {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateUser = () => {\r\n  const [updateUser, { error, loading }] = useMutation(\r\n    UPDATE_USER\r\n    //   , {\r\n    //   refetchQueries: () => [\r\n    //     {\r\n    //       query: GET_USERS,\r\n    //     },\r\n    //   ],\r\n    // }\r\n  );\r\n\r\n  return { updateUser, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { GET_USERS } from \"./useGetUsers\";\r\n\r\ninterface UserInput {\r\n  variables: {\r\n    userInput: User;\r\n  };\r\n}\r\n\r\nconst CREATE_USER = gql`\r\n  mutation registerUser($userInput: UserInput!) {\r\n    registerUser(userInput: $userInput) {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      createdAt\r\n      updatedAt\r\n      role {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateUser = () => {\r\n  const [registerUser, { error, loading }] = useMutation(CREATE_USER, {\r\n    refetchQueries: () => [{ query: GET_USERS }],\r\n  });\r\n  return { registerUser, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useUpdateUser } from \"../../hooks/user/useUpdateUser\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { useGetRoles } from \"../../hooks/role/useGetRoles\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useCreateUser } from \"../../hooks/user/useCreateUser\";\r\nimport Progress from \"../progress/progress\";\r\nimport { ROLSA } from \"../../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\ntype SelectChange = ChangeEvent<{ value: unknown } | any | HTMLSelectElement>;\r\n\r\nconst UserForm = ({\r\n  user,\r\n  handleClose,\r\n}: {\r\n  user?: User;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValueCreate: User = {\r\n    name: \"\",\r\n    lastName: \"\",\r\n    role: {\r\n      name: \"\",\r\n    },\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: User = {\r\n    id: user?.id || \"\",\r\n    name: user?.name || \"\",\r\n    lastName: user?.lastName || \"\",\r\n    role: {\r\n      name: user?.role?.name || \"\",\r\n    },\r\n    email: user?.email || \"\",\r\n  };\r\n\r\n  const [userForm, setUserForm] = useState<User>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [listRoles, setListRoles] = useState<Role[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateUser = useUpdateUser();\r\n  const { data } = useGetRoles();\r\n  const optionsCreateUser = useCreateUser();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setUserForm({ ...userForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setUserForm({\r\n      ...userForm,\r\n      [e.target.name]: { name: e.target.value },\r\n    });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    if (userForm.id) {\r\n      try {\r\n        await optionsUpdateUser.updateUser({\r\n          variables: {\r\n            userInput: userForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El usuario se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateUser.registerUser({\r\n          variables: {\r\n            userInput: userForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El usuario ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setListRoles(data.getRoles);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"name\"\r\n              autoComplete=\"off\"\r\n              id=\"idNombres\"\r\n              label=\"Nombres\"\r\n              variant=\"outlined\"\r\n              value={userForm.name}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"lastName\"\r\n              autoComplete=\"off\"\r\n              id=\"idApellidos\"\r\n              label=\"Apellidos\"\r\n              value={userForm.lastName}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          {userForm.role?.name === ROLSA || (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"idRole\">Rol</InputLabel>\r\n                  <Select\r\n                    labelId=\"Rol\"\r\n                    id=\"idRole\"\r\n                    value={userForm.role?.name}\r\n                    onChange={handleSelect}\r\n                    label=\"Rol\"\r\n                    name=\"role\"\r\n                  >\r\n                    {listRoles.map((role) =>\r\n                      auth?.role?.name === ROLSA ? (\r\n                        <MenuItem key={role.id} value={role.name}>\r\n                          {role.name}\r\n                        </MenuItem>\r\n                      ) : (\r\n                        role.name !== ROLSA && (\r\n                          <MenuItem key={role.id} value={role.name}>\r\n                            {role.name}\r\n                          </MenuItem>\r\n                        )\r\n                      )\r\n                    )}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </>\r\n          )}\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"email\"\r\n              autoComplete=\"off\"\r\n              id=\"idEmail\"\r\n              label=\"Correo\"\r\n              value={userForm.email}\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: userForm.id ? true : false,\r\n              }}\r\n            />\r\n          </Grid>\r\n          {userForm.id ? (\r\n            \"\"\r\n          ) : (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  onChange={handleInput}\r\n                  name=\"password\"\r\n                  autoComplete=\"off\"\r\n                  id=\"idPassword\"\r\n                  label=\"Contraseña\"\r\n                  value={userForm.password}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  onChange={handleInput}\r\n                  name=\"confirmPassword\"\r\n                  autoComplete=\"off\"\r\n                  id=\"idConfirmPassword\"\r\n                  label=\"Repetir contraseña\"\r\n                  value={userForm.confirmPassword}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={() => handleClose()} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {userForm.id ? (\r\n              optionsUpdateUser.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreateUser.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst UPDATE_ACTIVATE_USER = gql`\r\n  mutation activateUser($id: String!) {\r\n    activateUser(id: $id) {\r\n      id\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_DESACTIVATE_USER = gql`\r\n  mutation desactivateUser($id: String!) {\r\n    desactivateUser(id: $id) {\r\n      id\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useActivateUser = () => {\r\n  const [activateUser, { error, loading }] = useMutation(UPDATE_ACTIVATE_USER);\r\n\r\n  return { activateUser, error, loading };\r\n};\r\n\r\nexport const useDesactivateUser = () => {\r\n  const [desactivateUser, { error, loading }] = useMutation(\r\n    UPDATE_DESACTIVATE_USER\r\n  );\r\n\r\n  return { desactivateUser, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { AuthUser } from \"../../interfaces/auth.interface\";\r\n\r\ninterface AuthChangePasswordInputToAdmin {\r\n  variables: {\r\n    authInput: AuthUser;\r\n  };\r\n}\r\n\r\ninterface AuthChangePasswordInputToUser {\r\n  variables: {\r\n    authInput: AuthUser;\r\n  };\r\n}\r\nconst UPDATE_PASSWORD_TO_ADMIN = gql`\r\n  mutation changePasswordToAdmin($authInput: AuthChangePasswordInputToAdmin!) {\r\n    changePasswordToAdmin(authInput: $authInput)\r\n  }\r\n`;\r\n\r\nconst UPDATE_PASSWORD_TO_USER = gql`\r\n  mutation changePasswordToUser($authInput: AuthChangePasswordInputToUser!) {\r\n    changePasswordToUser(authInput: $authInput)\r\n  }\r\n`;\r\n\r\n//TO ADMIN\r\nexport const useChangePasswordToAdmin = () => {\r\n  const [changePasswordToAdmin, { error, loading }] = useMutation(\r\n    UPDATE_PASSWORD_TO_ADMIN\r\n  );\r\n\r\n  return { changePasswordToAdmin, error, loading };\r\n};\r\n\r\n//TO USER\r\nexport const useChangePasswordToUser = () => {\r\n  const [changePasswordToUser, { error, loading }] = useMutation(\r\n    UPDATE_PASSWORD_TO_USER\r\n  );\r\n\r\n  return { changePasswordToUser, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport Progress from \"../progress/progress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useChangePasswordToAdmin } from \"../../hooks/password/useChangePassword\";\r\nimport { AuthUser } from \"../../interfaces/auth.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst PasswordForm = ({\r\n  user,\r\n  handleClose,\r\n}: {\r\n  user?: User;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValue: AuthUser = {\r\n    id: user?.id || \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  };\r\n\r\n  const [userForm, setUserForm] = useState<AuthUser>(initialValue);\r\n  const dispatch = useDispatch();\r\n  const { changePasswordToAdmin, error, loading } = useChangePasswordToAdmin();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setUserForm({ ...userForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    try {\r\n      await changePasswordToAdmin({\r\n        variables: {\r\n          authInput: userForm,\r\n        },\r\n      });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"La contraseña ha sido cambiada correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        {/* <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"currentPassword\"\r\n            autoComplete=\"off\"\r\n            id=\"idPassword\"\r\n            label=\"Contraseña Actual\"\r\n            variant=\"outlined\"\r\n            value={userForm.currentPassword}\r\n          />\r\n        </Grid> */}\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"newPassword\"\r\n            autoComplete=\"off\"\r\n            id=\"idNewPassword\"\r\n            label=\"Nueva Contraseña\"\r\n            value={userForm.newPassword}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"confirmNewPassword\"\r\n            autoComplete=\"off\"\r\n            id=\"idConfirmNewPassword\"\r\n            label=\"Confirmar nueva contraseña\"\r\n            value={userForm.confirmNewPassword}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Actualizar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PasswordForm;\r\n","import React, { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport RemoveRoundedIcon from \"@material-ui/icons/RemoveRounded\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport UserForm from \"./user-form\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport {\r\n  useActivateUser,\r\n  useDesactivateUser,\r\n} from \"../../hooks/user/useUpdateAccessToLogin\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO, ROLSA } from \"../../const\";\r\nimport LockRoundedIcon from \"@material-ui/icons/LockRounded\";\r\nimport PasswordForm from \"../password/password-form\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst UserList = ({ user }: { user: User }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n  const optionsActivate = useActivateUser();\r\n  const optionsDesactivate = useDesactivateUser();\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const desactivateUser = async () => {\r\n    try {\r\n      await optionsDesactivate.desactivateUser({\r\n        variables: { id: user.id },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Usuario\":\r\n        return <UserForm user={user} handleClose={handleClose} />;\r\n\r\n      case \"Contraseña\":\r\n        return <PasswordForm user={user} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={user}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        {user.role?.name === ROLSA ? (\r\n          \"\"\r\n        ) : (\r\n          <>\r\n            {user.status === 2 ? (\r\n              <Tooltip\r\n                title=\"Activar usuario\"\r\n                onClick={() =>\r\n                  optionsActivate.activateUser({\r\n                    variables: { id: user.id },\r\n                  })\r\n                }\r\n              >\r\n                <IconButton\r\n                  aria-label=\"desactivate\"\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <RemoveRoundedIcon style={{ color: \"#F44336\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : user.status === 1 ? (\r\n              <Tooltip title=\"Desactivar usuario\" onClick={desactivateUser}>\r\n                <IconButton\r\n                  aria-label=\"activate\"\r\n                  size=\"small\"\r\n                  style={{ color: \"#4CAF50\" }}\r\n                >\r\n                  <CheckRoundedIcon style={{ color: \"#4CAF50\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <Tooltip\r\n          title=\"Editar usuario\"\r\n          onClick={() => setDialog({ name: \"Usuario\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        <Tooltip\r\n          title=\"Cambiar contraseña\"\r\n          onClick={() => setDialog({ name: \"Contraseña\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"password\" size=\"small\">\r\n            <LockRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        {auth?.role?.name === ROLSA ? (\r\n          <>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {user.name} {user.lastName}\r\n            </TableCell>\r\n            <TableCell>{user.role?.name}</TableCell>\r\n            <TableCell>{user.email}</TableCell>\r\n            <TableCell>{moment(user.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            <TableCell>{moment(user.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {user.role?.name === ROLSA || (\r\n              <>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {user.name} {user.lastName}\r\n                </TableCell>\r\n                <TableCell>{user.role?.name}</TableCell>\r\n                <TableCell>{user.email}</TableCell>\r\n                <TableCell>\r\n                  {moment(user.createdAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(user.updatedAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useGetUsers } from \"../hooks/user/useGetUsers\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport UserList from \"../components/user/user-list\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport UserForm from \"../components/user/user-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { findError } from \"../helpers/control-errors\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst UserPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const { data, loading, error } = useGetUsers();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <UserForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setUsers(data.getUsers);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialog = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Usuario`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Usuario\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialog)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nombres</TableCell>\r\n              <TableCell>Rol</TableCell>\r\n              <TableCell>Correo</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users.map((user) => (\r\n              <UserList key={user.id} user={user} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { createElement } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\nimport NoMatch from \"../pages/404.page\";\r\nimport BrandPage from \"../pages/brand.page\";\r\nimport CategooryPage from \"../pages/category.page\";\r\nimport CheckMoneyPage from \"../pages/check-money.page\";\r\nimport CheckProducts from \"../pages/check-products\";\r\nimport EgressPage from \"../pages/egress.page\";\r\nimport IngressPage from \"../pages/ingress.page\";\r\nimport ModelPage from \"../pages/model.page\";\r\nimport ModulePage from \"../pages/module.page\";\r\nimport ProductPage from \"../pages/product.page\";\r\nimport RolePage from \"../pages/role.page\";\r\nimport ServicePage from \"../pages/service.page\";\r\nimport SummaryBoxPage from \"../pages/summary-box.page\";\r\nimport UserPage from \"../pages/user.page\";\r\nimport { getLocal } from \"./local-storage\";\r\n\r\ninterface RootState {\r\n  page: {\r\n    user: {\r\n      link: string;\r\n      page: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const {\r\n    page: {\r\n      user: { link, page },\r\n    },\r\n  } = state;\r\n  return { link, page };\r\n};\r\n\r\nconst ItemSwitch = ({ link, page }: any) => {\r\n  const location = useLocation();\r\n  const formatedLink = location.pathname.replace(\"/\", \"\");\r\n\r\n  const PrivateRoute = ({ component, toLogin, ...rest }: any) => {\r\n    const routeComponent = (props: any) => {\r\n      switch (toLogin) {\r\n        case true:\r\n          return getLocal(\"accessToken\") ? (\r\n            <Redirect to={{ pathname: \"/\" }} />\r\n          ) : (\r\n            createElement(component, props)\r\n          );\r\n\r\n        case false:\r\n          return getLocal(\"accessToken\") ? (\r\n            createElement(component, props)\r\n          ) : (\r\n            <Redirect to={{ pathname: \"/\" }} />\r\n          );\r\n      }\r\n    };\r\n\r\n    return <Route {...rest} render={routeComponent} />;\r\n  };\r\n\r\n  const PAGES = (page: string) => {\r\n    switch (page) {\r\n      case \"DASHBOARD\":\r\n        const Home = () => {\r\n          return <h1>Bienvenido</h1>;\r\n        };\r\n        return Home;\r\n\r\n      case \"MODULOS\":\r\n        const Modulos = () => <ModulePage />;\r\n        return Modulos;\r\n\r\n      case \"ROLES\":\r\n        const Roles = () => <RolePage />;\r\n        return Roles;\r\n\r\n      case \"USUARIOS\":\r\n        const Usuarios = () => <UserPage />;\r\n        return Usuarios;\r\n\r\n      case \"CATEGORIAS\":\r\n        const Categorias = () => <CategooryPage />;\r\n        return Categorias;\r\n\r\n      case \"MARCAS\":\r\n        const Marcas = () => <BrandPage />;\r\n        return Marcas;\r\n\r\n      case \"MODELOS\":\r\n        const Modelos = () => <ModelPage />;\r\n        return Modelos;\r\n\r\n      case \"PRODUCTOS\":\r\n        const Productos = () => <ProductPage />;\r\n        return Productos;\r\n\r\n      case \"SERVICIOS\":\r\n        const Servicios = () => <ServicePage />;\r\n        return Servicios;\r\n\r\n      case \"INGRESOS\":\r\n        const Ingresos = () => <IngressPage />;\r\n        return Ingresos;\r\n\r\n      case \"EGRESOS\":\r\n        const Egresos = () => <EgressPage />;\r\n        return Egresos;\r\n\r\n      case \"RESUMEN-CAJA\":\r\n        const ResumenCaja = () => <SummaryBoxPage />;\r\n        return ResumenCaja;\r\n\r\n      case \"CONSULTAR-CAJA\":\r\n        const ConsultarCaja = () => <CheckMoneyPage />;\r\n        return ConsultarCaja;\r\n\r\n      case \"CONSULTAR-PRECIOS\":\r\n        const ConsultarPrecios = () => <CheckProducts />;\r\n        return ConsultarPrecios;\r\n\r\n      default:\r\n        const ERROR = () => <NoMatch />;\r\n        return ERROR;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {link === formatedLink || link === location.pathname ? (\r\n        <PrivateRoute\r\n          exact\r\n          path={`/${link}`}\r\n          toLogin={false}\r\n          component={PAGES(`${page}`)}\r\n        />\r\n      ) : (\r\n        <PrivateRoute toLogin={false} path=\"*\" component={NoMatch} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n   {menu.link === formatedLink ? (\r\n        <>\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/caja\" toLogin={false} component={Caja} />\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Switch>\r\n            <Route path=\"*\" component={NoMatch} />\r\n          </Switch>\r\n        </>\r\n      )}\r\n * \r\n */\r\nexport default connect(mapStateToProps, null)(ItemSwitch);\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ItemSwitch from \"./item-switch.component\";\r\n\r\nconst SwitchContainer = () => {\r\n  return (\r\n    <Switch>\r\n      <ItemSwitch />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default SwitchContainer;\r\n","import SwitchContainer from \"../../lib/switch-container\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./wrapper.css\";\r\n\r\nconst Wrapper = () => {\r\n  const { module, page, name } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const firsCaracter: String = name?.charAt(0).toUpperCase();\r\n  const restCaracter: String = name?.substr(1, name?.length);\r\n  const subTitle: String = `${firsCaracter}${restCaracter.toLowerCase()}`;\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <section>\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content-wrapper-header items-center\">\r\n            <h1>{name.toUpperCase()}</h1>\r\n            <ol>\r\n              <li className=\"list-style-none text-active\">\r\n                <strong>{module}</strong>\r\n              </li>\r\n              <li className=\"list-style-none text-inactive\">{subTitle}</li>\r\n            </ol>\r\n          </div>\r\n          <div className=\"content-wrapper-main\">\r\n            <SwitchContainer />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"center\">\r\n        <p>\r\n          © 2020-2021 by{\" \"}\r\n          <a\r\n            href=\"https://kemaytechnology.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Kemay Technology\r\n          </a>\r\n          . Todos los derechos reservados. Si tuviese algún inconveniente por\r\n          favor contactarnos al siguiente correo:\r\n          <a\r\n            href=\"mailto:dperez@kemaytechnology.com\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            dperez@kemaytechnology.com\r\n          </a>\r\n          <br /> Version: 0.0.1 | Powered by\r\n          <a\r\n            href=\"http://github.com/davisperezg\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            @davisperezg\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const LINK_USER = \"@page/LINK_USER\";\r\n\r\nexport const setLink =\r\n  (module: string, link: string, name: string) => async (dispatch: any) => {\r\n    await dispatch({\r\n      type: LINK_USER,\r\n      payload: {\r\n        link,\r\n        module,\r\n        page: link === \"/\" ? \"DASHBOARD\" : link.toUpperCase(),\r\n        name,\r\n      },\r\n    });\r\n  };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MENU_FORBIDDEN, ROLSA } from \"../../const\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { setLink } from \"../../store/page/action\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\n/** #1\r\n * @param { name, link }: Menu = {}\r\n * @returns name, link\r\n **/\r\n\r\n/** #2\r\n * @param { menu }: {menu: Menu}\r\n * @returns menu.name, menu.link\r\n **/\r\n\r\n/** #3\r\n * menu:Menu\r\n * const {name, link} = menu\r\n * @returns name, link\r\n **/\r\n\r\nconst ListItemMenus = ({\r\n  menu,\r\n  setLink,\r\n  module,\r\n}: {\r\n  menu: Menu;\r\n  setLink: any;\r\n  module: Module;\r\n}) => {\r\n  const history = useHistory();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const goToPage = () => {\r\n    setLink(module.name, menu.link, menu.name);\r\n    document.title = `RPUM - ${menu.link.toUpperCase()}`;\r\n    history.push(`/${menu.link}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {auth?.role?.name === ROLSA ? (\r\n        <li onClick={() => goToPage()}>{menu.name}</li>\r\n      ) : (\r\n        menu.name !== MENU_FORBIDDEN && (\r\n          <li onClick={() => goToPage()}>{menu.name}</li>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { setLink })(ListItemMenus);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ChevronRight, ExpandMore } from \"@material-ui/icons\";\r\nimport ListItemMenus from \"./list-item-menus\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\n\r\nconst ListItemModules = ({ module }: { module: Module }) => {\r\n  const [isArrowActive, setArrowActive] = useState<Boolean>(false);\r\n  const [isTextModuleActive, setTextModuleActive] = useState<Boolean>(false);\r\n  const findMenus = module.menus;\r\n  const [menus, setMenu] = React.useState<Menu[]>([]);\r\n\r\n  const handleArrow = () => {\r\n    setArrowActive(!isArrowActive);\r\n    setTextModuleActive(!isTextModuleActive);\r\n  };\r\n\r\n  const stylesModuleActive = {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const stylesModuleInactive = {\r\n    color: \"#67677e\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMenu(findMenus || []);\r\n  }, [findMenus]);\r\n\r\n  return (\r\n    <>\r\n      <li\r\n        style={isTextModuleActive ? stylesModuleActive : stylesModuleInactive}\r\n        onClick={() => handleArrow()}\r\n      >\r\n        {module.name} {isArrowActive ? <ExpandMore /> : <ChevronRight />}\r\n      </li>\r\n      {isArrowActive && (\r\n        <ul>\r\n          {menus.map((menu) => (\r\n            <ListItemMenus key={menu.id} menu={menu} module={module} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItemModules;\r\n","export default __webpack_public_path__ + \"static/media/logo_kemay_antena.16ba1da3.png\";","import ListItemModules from \"../wrapper/list-item-modules\";\r\nimport logo from \"../../assets/logo_kemay_antena.png\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setLink } from \"../../store/page/action\";\r\n\r\nimport \"./aside.css\";\r\n\r\nconst Aside = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const { module, page } = useSelector((state: any) => {\r\n    return state.page.user;\r\n  });\r\n  const findModules = auth?.role?.modules;\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const gotToHome = () => {\r\n    history.push(`/`);\r\n    dispatch(setLink(\"Inicio\", \"/\", \"Dashboard\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setModules(findModules || []);\r\n  }, [findModules]);\r\n\r\n  return (\r\n    <aside>\r\n      <div className=\"content-logo\">\r\n        <div className=\"logo\" onClick={gotToHome}>\r\n          <img width=\"100\" height=\"100\" src={logo} alt=\"Logo\" />\r\n        </div>\r\n        {/* <div className=\"title-logo\" onClick={gotToHome}>\r\n          <p>KTECH</p>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <ul>\r\n          {modules.map((module) => (\r\n            <ListItemModules key={module.id} module={module} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Aside;\r\n","import React from \"react\";\r\nimport Header from \"../components/header/header.component\";\r\nimport Wrapper from \"../components/wrapper/wrapper.component\";\r\nimport Footer from \"../components/footer/footer.component\";\r\nimport Aside from \"../components/aside/aside\";\r\nimport \"./css/home.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <section className=\"menu\">\r\n        <Aside />\r\n      </section>\r\n      <section className=\"content\">\r\n        <div className=\"body\">\r\n          <Header />\r\n          <Wrapper />\r\n        </div>\r\n        <Footer />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/B_logo_kemay.bec2fe6e.png\";","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { Login } from \"../../interfaces/auth.interface\";\r\n\r\ninterface AuthInput {\r\n  variables: {\r\n    authInput: Login;\r\n  };\r\n}\r\n\r\nconst POST_LOGIN = gql`\r\n  mutation login($authInput: AuthInput!) {\r\n    login(authInput: $authInput) {\r\n      access_token\r\n      refresh_token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useLogin = (): any => {\r\n  const [login] = useMutation(POST_LOGIN);\r\n\r\n  return login;\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport logo from \"../assets/B_logo_kemay.png\";\r\nimport { useLogin } from \"../hooks/login/useLogin\";\r\nimport { Error } from \"../interfaces/error.interface\";\r\nimport { Login } from \"../interfaces/auth.interface\";\r\nimport { setLocal } from \"../lib/local-storage\";\r\nimport client from \"../apollo-client\";\r\nimport { setLoading } from \"../store/auth/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./css/login.css\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { setAlert } from \"../store/alert/action\";\r\n\r\n//for inputs\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\n//for selects\r\n//type SelectChange = ChangeEvent<HTMLSelectElement>;\r\n//for forms\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst initialUser = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst initialError = {\r\n  path: \"\",\r\n  message: \"\",\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    loading: state.authReducer.loading,\r\n  };\r\n};\r\n\r\nconst LoginPage: React.FC = ({ loading, setLoading }: any) => {\r\n  const [error, setError] = useState<Error>(initialError);\r\n  const [user, setUser] = useState<Login>(initialUser);\r\n  const alert = useSelector((state: any) => state.message);\r\n  const loginForm = useLogin();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (e: InputChange) => {\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n    setError(initialError);\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const res = await loginForm({\r\n        variables: {\r\n          authInput: { email: user.email, password: user.password },\r\n        },\r\n      });\r\n\r\n      const {\r\n        data: {\r\n          login: { access_token, refresh_token },\r\n        },\r\n      } = res;\r\n\r\n      setLocal(\"accessToken\", access_token);\r\n      setLocal(\"refreshToken\", refresh_token);\r\n      client.resetStore();\r\n      window.location.href = \"/\";\r\n    } catch (e) {\r\n      if (e.graphQLErrors[0].extensions.exception.status === 401) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      setError(e.graphQLErrors[0].extensions.exception.response);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"content-login-logo content-items-center\">\r\n        <img width=\"450\" height=\"400\" src={logo} alt=\"Logo\" />\r\n      </div>\r\n      <div className=\"content-login-form content-items-center\">\r\n        <div className=\"content-login-form-main\">\r\n          <div className=\"content-login-form-header content-items-center\">\r\n            <h1>ACCESO AL SISTEMA</h1>\r\n          </div>\r\n          {alert.type && <Alert severity={alert.type}>{alert.text}</Alert>}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"content-login-form-body\">\r\n              <div className=\"content-login-form-input\">\r\n                <TextField\r\n                  error={error?.path === \"username\" ? true : false}\r\n                  id=\"idUsername\"\r\n                  label=\"Usuario\"\r\n                  helperText={error?.path === \"username\" ? error?.message : \"\"}\r\n                  name=\"email\"\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </div>\r\n              <br />\r\n              <div className=\"content-login-form-input\">\r\n                <TextField\r\n                  error={error?.path === \"password\" ? true : false}\r\n                  id=\"idPassword\"\r\n                  label=\"Contraseña\"\r\n                  helperText={error?.path === \"password\" ? error?.message : \"\"}\r\n                  name=\"password\"\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                />\r\n              </div>\r\n              <br />\r\n              <div className=\"content-login-form-input content-items-center\">\r\n                {loading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <Button\r\n                    disabled={loading ? true : false}\r\n                    type=\"submit\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                  >\r\n                    Iniciar sesion\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <br />\r\n              <div className=\"content-login-form-footer content-items-center\">\r\n                ¿Olvidaste tu contraseña?\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, { setLoading })(LoginPage);\r\n","import React from \"react\";\r\nimport { Redirect, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { getLocal } from \"../../lib/local-storage\";\r\nimport Home from \"../../pages/home.page\";\r\nimport LoginPage from \"../../pages/login.page\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      {getLocal(\"accessToken\") ? (\r\n        <Home />\r\n      ) : (\r\n        <>\r\n          <LoginPage />\r\n          <Redirect to=\"/\" />\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { LOADING_USER, ERROR_USER, LOGIN_USER, LOGOUT_USER } from \"./action\";\r\n\r\ninterface RootState {\r\n  loading: boolean;\r\n  authUser: undefined;\r\n  error: undefined;\r\n}\r\n\r\nconst initialState: RootState = {\r\n  loading: false,\r\n  authUser: undefined,\r\n  error: undefined,\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state: RootState = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n      };\r\n\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n      };\r\n\r\n    case ERROR_USER:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LINK_USER } from \"./action\";\r\n\r\ninterface RootState {\r\n  user: {\r\n    link: string;\r\n    module: string;\r\n    page: string;\r\n    name: string;\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  user: {\r\n    link: \"/\",\r\n    module: \"Inicio\",\r\n    page: \"DASHBOARD\",\r\n    name: \"Dashboard\",\r\n  },\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state: RootState = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case LINK_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IAlert } from \"../../interfaces/alert.interface\";\r\nimport { ALERT } from \"./action\";\r\n\r\nconst initialState: IAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state: any = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ALERT:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport authReducer from \"./auth/reducer\";\r\nimport pageReducer from \"./page/reducer\";\r\nimport alertReducer from \"./alert/reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  authReducer,\r\n  page: pageReducer,\r\n  message: alertReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"page\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/app.component\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport client from \"./apollo-client\";\nimport \"./pages/css/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_MODULES = gql`\r\n  query getModules {\r\n    getModules {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      menus {\r\n        id\r\n        name\r\n        link\r\n      }\r\n      access {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetModules = () => {\r\n  const { data, loading, error } = useQuery(GET_MODULES);\r\n  return { data, loading, error };\r\n};\r\n"],"sourceRoot":""}