{"version":3,"sources":["store/alert/action.tsx","lib/transfer-list-component.tsx","const.ts","hooks/role/useUpdateRole.tsx","components/module/module-transfer-list.tsx","helpers/control-errors.ts","lib/local-storage.ts","assets/logo.png","hooks/login/useRefreshToken.tsx","apollo-client.ts","store/auth/action.tsx","hooks/user/useMe.tsx","store/page/action.tsx","components/header/header.component.tsx","components/footer/footer.component.tsx","pages/404.page.tsx","components/acceso/filter-access.component.tsx","components/dialog/dialog.component.tsx","hooks/category/useGetCategorys.tsx","hooks/brand/useGetBrands.tsx","hooks/brand/useUpdateBrand.tsx","hooks/brand/useCreateBrand.tsx","components/brand/brand-form.tsx","components/brand/brand-list.tsx","pages/brand.page.tsx","hooks/category/useCreateCategory.tsx","hooks/category/useUpdateCategory.tsx","components/category/category-form.tsx","components/category/category-list.tsx","pages/category.page.tsx","hooks/model/useGetModels.tsx","hooks/model/useUpdateModel.tsx","hooks/model/useCreateModel.tsx","components/model/model-form.tsx","components/model/model-list.tsx","pages/model.page.tsx","components/table/item-module-menu.tsx","components/table/item-module-access.tsx","hooks/module/useUpdateModule.tsx","hooks/module/useCreateModule.tsx","hooks/access/useGetAllAceess.tsx","hooks/menu/useGetMenus.tsx","components/module/module-form.component.tsx","components/acceso/access-form.component.tsx","components/menu/menu-form.component.tsx","components/table/item-module.component.tsx","pages/module.page.tsx","hooks/product/useGetProducts.tsx","hooks/product/useUpdateProduct.tsx","hooks/product/useCreateProduct.tsx","hooks/brand/useBrandsByCategory.tsx","hooks/model/useGetModelsByBrand.tsx","components/product/product-form.tsx","lib/currency/money.ts","components/product/product-list.tsx","pages/product.page.tsx","hooks/role/useGetRoles.tsx","components/role/role-module-item.tsx","hooks/role/useCreateRole.tsx","components/role/rol-form.tsx","components/role/role-list.tsx","pages/role.page.tsx","hooks/service/useGetServices.tsx","hooks/service/useUpdateService.tsx","hooks/service/useCreateService.tsx","components/service/service-form.tsx","components/service/service-list.tsx","pages/service.page.tsx","hooks/user/useGetUsers.tsx","hooks/user/useUpdateUser.tsx","hooks/user/useCreateUser.tsx","components/user/user-form.tsx","hooks/user/useUpdateAccessToLogin.tsx","hooks/password/useChangePassword.tsx","components/password/password-form.tsx","components/user/user-list.tsx","pages/user.page.tsx","lib/item-switch.component.tsx","lib/switch-container.tsx","components/wrapper/list-item-menus.tsx","components/wrapper/list-item-modules.tsx","components/wrapper/wrapper.component.tsx","pages/home.page.tsx","hooks/login/useLogin.tsx","pages/login.page.tsx","components/app/app.component.tsx","store/auth/reducer.tsx","store/page/reducer.tsx","store/alert/reducer.tsx","store/index.ts","index.tsx","components/progress/progress.tsx","hooks/module/useGetModules.tsx"],"names":["ALERT","setAlert","alert","type","payload","not","a","b","filter","value","indexOf","intersection","TrasnferList","setListAvailable","setListCurrent","listAvailable","setChecked","checked","titleAvailable","listCurrent","titleCurrent","loading","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","customList","title","avatar","onClick","indeterminate","disabled","inputProps","subheader","dense","component","role","map","labelId","name","button","tabIndex","disableRipple","id","primary","container","spacing","justify","alignItems","item","direction","variant","size","concat","aria-label","PERMIT_ONE","PERMIT_TWO","PERMIT_TREE","PERMIT_FOUR","ROLSA","MODULE_FORBIDDEN","MENU_FORBIDDEN","UDATE_ROL","gql","useUpdateRole","useMutation","update","cache","updateRole","data","modify","fields","existingRoles","newRolesRef","writeFragment","fragment","error","ModuleTransferList","handleClose","useState","dispatch","useDispatch","optionsGetModules","useGetModules","optionsUpdateRole","useSelector","state","message","text","onSubmit","authReducer","authUser","e","preventDefault","newData","module","variables","roleInput","modules","findError","loadModuleAvailable","useCallback","listModulesAvailableNoModulo","getModules","dispo","some","actual","useEffect","listModulesCurrentNoModulo","xs","style","width","color","autoFocus","index","graphQLErrors","element","extensions","exception","response","index1","getLocal","val","localStorage","getItem","setLocal","key","setItem","POST_REFRESH","isRefreshing","pendingRequests","errorLink","onError","networkError","operation","forward","err","status","forward$","fromPromise","Promise","resolve","client","mutate","mutation","authInput","email","refresh_token","then","access_token","refreshToken","callback","catch","finally","flatMap","console","log","locations","path","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","authorization","ApolloClient","link","from","InMemoryCache","LOGIN_USER","LOGOUT_USER","LOADING_USER","ERROR_USER","initialValue","lastName","setLoading","logout","clear","resetStore","window","location","href","ME","LINK_USER","setLink","page","toUpperCase","connect","whoisme","me","useLazyQuery","pollInterval","useMe","history","useHistory","gotToHome","className","height","src","logo","alt","Footer","target","rel","NoMatch","loadAccess","auth","Component","Notify","filterAccessbyModuleCreate","access","myaccess","i","filterAccessbyModuleEdit","filterAccessbyModuleDelete","filterAccessbyModuleView","DialogTitle","withStyles","theme","createStyles","root","margin","padding","closeButton","position","right","top","palette","grey","props","children","classes","onClose","other","disableTypography","Typography","IconButton","DialogForm","open","dialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","Alert","severity","DialogContent","dividers","overflowY","GET_CATEGORYS","useGetCategorys","useQuery","GET_BRANDS","useGetBrands","UPDATE_BRAND","CREATE_BRAND","initialAlert","BrandForm","brand","initialValueUpdate","category","brandForm","setBrandForm","categorys","setCategorys","optionsUpdateBrand","refetchQueries","query","updateBrand","useUpdateBrand","optionsCreateBrand","registerBrand","useCreateBrand","brandInput","getCategorys","Grid","FormControl","fullWidth","InputLabel","Select","onChange","label","MenuItem","TextField","autoComplete","DialogActions","Button","initialDialog","active","BrandList","user","setDialog","showOptionsForEdit","TableCell","align","Tooltip","TableRow","scope","moment","createdAt","format","updatedAt","BrandPage","brands","setBrands","getBrands","TableContainer","Paper","marginTop","Table","TableHead","TableBody","CREATE_CATEGORY","UPDATE_CATEGORY","CategoryForm","categoryForm","setCategoryForm","optionsUpdateCategory","updateCategory","useUpdateCategory","optionsCreateCategory","registerCategory","useCreateCategory","categoryInput","CategoryList","CategooryPage","GET_MODELS","UPDATE_MODEL","CREATE_MODEL","ModelForm","model","modelForm","setModelForm","optionsUpdateModel","updateModel","useUpdateModel","optionsCreateModel","registerModel","useCreateModel","modelInput","ModelList","ModelPage","useGetModels","models","setModels","getModels","ItemModuleMenu","menu","Chip","onDelete","ItemModuleAccess","UDATE_MODULE","useUpdateModule","GET_MODULES","updateModule","CREATE_MODULE","GET_ACCESS","useGetAllAccess","GET_MENUS","useGetMenus","useStyles","makeStyles","formControl","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","ModuleForm","description","optionsUpdateModule","optionsCreateModule","registerModule","useCreateModule","optionsGetAccess","optionsGetMenus","menuSelected","setMenuSelected","accessSelected","setAccessSelected","listMenus","setListMenus","listAccess","setListAccess","moduleForm","setModuleForm","handleInput","sentToAddMenus","sentToAddAccess","getStyles","personName","fontWeight","typography","fontWeightRegular","fontWeightMedium","moduleInput","menus","listMenusNoModulos","getMenus","getAccess","multiline","multiple","input","Input","renderValue","selected","AccesoForm","optionsGetAllAccess","loadAccessAvailable","res","MenuForm","loadMenusAvailable","listMenusAvailableNoModulos","listMenusCurrentNoModulos","initialValueButton","ItemModule","table","ModulePage","setModules","GET_PRODUCTS","UPDATE_PRODUCT","CREATE_PRODUCT","GET_BRANDS_BY_CATEGORY","GET_MODELS_BY_BRAND","initialAutoCompleteInput","ProductForm","product","price","productForm","setProductForm","valueInput","setValueInput","optionsUpdateProduct","updateProduct","useUpdateProduct","optionsCreateProduct","registerProduct","useCreateProduct","optionsGetBrandsByCategory","useGetBrandsByCategory","optionsGetModelsByBrand","useGetModelsByBrand","dataCategorys","changeBrandByCategory","getBrandsByCategory","changeModelByBrand","getModelsByBrand","productInput","Autocomplete","event","onKeyUp","inputValue","onInputChange","newValue","options","getOptionLabel","getOptionSelected","option","renderInput","params","rows","defaultValue","InputProps","startAdornment","InputAdornment","formatMoney","Intl","NumberFormat","currency","ProductList","ProductPage","useGetProducts","products","setProducts","getProducts","GET_ROLES","useGetRoles","RoleModuleItem","CREATE_ROL","RoleForm","optionsCreateRole","registerRole","useCreateRole","roleForm","setRoleForm","modulesSelected","setModulesSelected","listModules","setListModules","sentToAddModules","listModulesNoModulos","RoleList","RolePage","roles","setRoles","getRoles","GET_SERVICES","UPDATE_SERVICE","CREATE_SERVICE","ServiceForm","service","serviceForm","setServiceForm","optionsUpdateService","updateService","useUpdateService","optionsCreateService","registerService","useCreateService","serviceInput","ServiceList","ServicePage","useGetServices","services","setServices","getServices","GET_USERS","UPDATE_USER","CREATE_USER","UserForm","password","confirmPassword","userForm","setUserForm","listRoles","setListRoles","optionsUpdateUser","updateUser","useUpdateUser","optionsCreateUser","registerUser","useCreateUser","userInput","readOnly","UPDATE_ACTIVATE_USER","UPDATE_DESACTIVATE_USER","UPDATE_PASSWORD_TO_ADMIN","PasswordForm","newPassword","confirmNewPassword","changePasswordToAdmin","useChangePasswordToAdmin","UserList","optionsActivate","activateUser","useActivateUser","optionsDesactivate","desactivateUser","useDesactivateUser","UserPage","users","setUsers","useGetUsers","getUsers","useLocation","formatedLink","pathname","replace","PrivateRoute","toLogin","rest","render","to","createElement","exact","PAGES","SwitchContainer","goToPage","document","ListItemModules","isArrowActive","setArrowActive","isTextModuleActive","setTextModuleActive","findMenus","React","setMenu","ExpandMore","ChevronRight","firsCaracter","charAt","restCaracter","substr","subTitle","toLowerCase","findModules","Home","POST_LOGIN","initialUser","initialError","setError","setUser","loginForm","useLogin","handleInputChange","handleSubmit","login","helperText","CircularProgress","App","initialState","undefined","reducers","combineReducers","action","persistConfig","storage","whitelist","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","StrictMode","getElementById","Progress","justifyContent","disableShrink"],"mappings":"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","file":"static/js/main.94308eef.chunk.js","sourcesContent":["import { IAlert } from \"../../interfaces/alert.interface\";\r\n\r\nexport const ALERT = \"@message/ALERT\";\r\n\r\n//{ alert }: { alert: Alert }\r\nexport const setAlert = (alert: IAlert) => {\r\n  return {\r\n    type: ALERT,\r\n    payload: alert,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Progress from \"../components/progress/progress\";\r\n\r\nfunction not(a: any[], b: any[]) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a: any[], b: any[]) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a: any[], b: any[]) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nconst TrasnferList = ({\r\n  setListAvailable,\r\n  setListCurrent,\r\n  listAvailable,\r\n  setChecked,\r\n  checked,\r\n  titleAvailable,\r\n  listCurrent,\r\n  titleCurrent,\r\n  loading,\r\n}: any) => {\r\n  const leftChecked = intersection(checked, listAvailable);\r\n  const rightChecked = intersection(checked, listCurrent);\r\n\r\n  const handleToggle = (value: any) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items: any[]) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: any[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setListCurrent(listCurrent.concat(leftChecked));\r\n    setListAvailable(not(listAvailable, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setListAvailable(listAvailable.concat(rightChecked));\r\n    setListCurrent(not(listCurrent, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: any[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        //className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n            inputProps={{ \"aria-label\": \"all items selected\" }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List\r\n        //className={classes.list}\r\n        dense\r\n        component=\"div\"\r\n        role=\"list\"\r\n      >\r\n        {loading ? (\r\n          <Progress />\r\n        ) : (\r\n          items.map((value: any) => {\r\n            const labelId = `transfer-list-all-item-${value.name}-label`;\r\n\r\n            return (\r\n              <ListItem\r\n                key={value.id}\r\n                role=\"listitem\"\r\n                button\r\n                onClick={handleToggle(value)}\r\n              >\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    checked={checked.indexOf(value) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{ \"aria-labelledby\": labelId }}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText id={labelId} primary={`${value.name}`} />\r\n              </ListItem>\r\n            );\r\n          })\r\n        )}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n      <Grid item>{customList(titleAvailable, listAvailable)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(titleCurrent, listCurrent)}</Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TrasnferList;\r\n","export const PERMIT_ONE = \"Crear\";\r\nexport const PERMIT_TWO = \"Editar\";\r\nexport const PERMIT_TREE = \"Eliminar\";\r\nexport const PERMIT_FOUR = \"Ver\";\r\nexport const ROLSA = \"SuperAdmin\";\r\nexport const MODULE_FORBIDDEN = \"Administración de modulos\";\r\nexport const MENU_FORBIDDEN = \"Modulos\";\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\n\r\ninterface RoleUpdateInput {\r\n  variables: {\r\n    roleInput: Role;\r\n  };\r\n}\r\n\r\nconst UDATE_ROL = gql`\r\n  mutation updateRole($roleInput: RoleUpdateInput!) {\r\n    updateRole(roleInput: $roleInput) {\r\n      id\r\n      name\r\n      description\r\n      modules {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateRole = () => {\r\n  const [updateRole, { error, loading }] = useMutation(UDATE_ROL, {\r\n    update(cache, { data: { updateRole } }) {\r\n      cache.modify({\r\n        fields: {\r\n          updateRole(existingRoles = []) {\r\n            const newRolesRef = cache.writeFragment({\r\n              data: updateRole,\r\n              fragment: gql`\r\n                fragment NewRole on Role {\r\n                  id\r\n                  name\r\n                  description\r\n                  modules {\r\n                    id\r\n                    name\r\n                  }\r\n                }\r\n              `,\r\n            });\r\n            return [...existingRoles, newRolesRef];\r\n          },\r\n        },\r\n      });\r\n    },\r\n  });\r\n\r\n  return { updateRole, error, loading };\r\n};\r\n","import React, { useState, useEffect, FormEvent, useCallback } from \"react\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { useGetModules } from \"../../hooks/module/useGetModules\";\r\nimport { useUpdateRole } from \"../../hooks/role/useUpdateRole\";\r\nimport TrasnferList from \"../../lib/transfer-list-component\";\r\nimport { MODULE_FORBIDDEN, ROLSA } from \"../../const\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst ModuleTransferList = ({\r\n  role,\r\n  handleClose,\r\n}: {\r\n  role: Role;\r\n  handleClose: () => void;\r\n}) => {\r\n  const [listAvailable, setListAvailable] = useState<Module[]>([]);\r\n  const [listCurrent, setListCurrent] = useState<Module[]>([]);\r\n  const [checked, setChecked] = useState<Module[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsGetModules = useGetModules();\r\n  const optionsUpdateRole = useUpdateRole();\r\n  const alert = useSelector((state: any) => state.message);\r\n  const { type, text } = alert;\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    const newData = listCurrent.map((module) => {\r\n      return {\r\n        name: module.name,\r\n      };\r\n    });\r\n\r\n    try {\r\n      await optionsUpdateRole.updateRole({\r\n        variables: {\r\n          roleInput: {\r\n            id: role.id,\r\n            modules: newData,\r\n          },\r\n        },\r\n      });\r\n      return dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"El rol actualizó sus modulos correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadModuleAvailable = useCallback(() => {\r\n    let res: Module[];\r\n\r\n    res = optionsGetModules.data.getModules.filter(\r\n      (dispo: Module) =>\r\n        !role.modules?.some((actual) => dispo.name === actual.name)\r\n    );\r\n\r\n    const listModulesAvailableNoModulo = res.filter(\r\n      (module) => module.name !== MODULE_FORBIDDEN\r\n    );\r\n\r\n    // if (auth?.role?.name === ROLSA) {\r\n    //   setListAvailable(res);\r\n    // } else {\r\n    //   const resNotSA = res.filter((module) => module.name !== MODULE_FORBIDDEN);\r\n    //   setListAvailable(resNotSA);\r\n    // }\r\n\r\n    setListAvailable(listModulesAvailableNoModulo);\r\n  }, [role, optionsGetModules.data]);\r\n\r\n  useEffect(() => {\r\n    if (role && optionsGetModules.data) {\r\n      const listModulesCurrentNoModulo = role.modules?.filter(\r\n        (module) => module.name !== MODULE_FORBIDDEN\r\n      );\r\n      setListCurrent(listModulesCurrentNoModulo || []);\r\n      loadModuleAvailable();\r\n    }\r\n  }, [role, optionsGetModules.data, loadModuleAvailable]);\r\n\r\n  if (type === \"error\") {\r\n    return <h1>{text}</h1>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TrasnferList\r\n            setListAvailable={setListAvailable}\r\n            setListCurrent={setListCurrent}\r\n            setChecked={setChecked}\r\n            checked={checked}\r\n            listAvailable={listAvailable}\r\n            titleAvailable=\"Modulos disponibles\"\r\n            listCurrent={listCurrent}\r\n            titleCurrent=\"Modulos actuales\"\r\n            loading={optionsGetModules.loading}\r\n          />\r\n        </Grid>\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disabled={optionsUpdateRole.loading ? true : false}\r\n          >\r\n            {module.id ? \"Actualizar\" : \"Registrar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ModuleTransferList;\r\n","export const findError = (error: any) => {\r\n  for (let index = 0; index < error.graphQLErrors.length; index++) {\r\n    const element =\r\n      error.graphQLErrors[index].extensions.exception.response.message;\r\n    for (let index1 = 0; index1 < element.length; index1++) {\r\n      const element1 = element[index1];\r\n      return element1;\r\n    }\r\n  }\r\n};\r\n","export const getLocal = (val: string) => {\r\n  return localStorage.getItem(val);\r\n};\r\n\r\nexport const setLocal = (key: string, val: string) => {\r\n  return localStorage.setItem(key, val);\r\n};\r\n\r\nexport const deleteLocal = (val: string) => {\r\n  return localStorage.removeItem(val);\r\n};\r\n\r\nexport const clearAllLocal = () => {\r\n  return localStorage.clear();\r\n};\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.get(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: any) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(`En localstorage ${e}`);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.8da9e76e.png\";","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Token } from \"../../interfaces/auth.interface\";\r\n\r\ninterface AuthRefreshTokenInput {\r\n  variables: {\r\n    authInput: Token;\r\n  };\r\n}\r\n\r\nexport const POST_REFRESH = gql`\r\n  mutation refreshToken($authInput: AuthRefreshTokenInput!) {\r\n    refreshToken(authInput: $authInput) {\r\n      access_token\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable no-loop-func */\r\nimport {\r\n  ApolloClient,\r\n  createHttpLink,\r\n  InMemoryCache,\r\n  from,\r\n  fromPromise,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { getLocal, setLocal } from \"./lib/local-storage\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { POST_REFRESH } from \"./hooks/login/useRefreshToken\";\r\n\r\nlet isRefreshing = false;\r\nlet pendingRequests: any = [];\r\n\r\nconst resolvePendingRequests = () => {\r\n  pendingRequests.map((callback: any) => callback());\r\n  pendingRequests = [];\r\n};\r\n\r\nconst errorLink = onError(\r\n  ({ graphQLErrors, networkError, operation, forward }) => {\r\n    if (graphQLErrors) {\r\n      for (let err of graphQLErrors) {\r\n        switch (err.extensions!.exception.status) {\r\n          case 401:\r\n            let forward$;\r\n            if (!isRefreshing) {\r\n              isRefreshing = true;\r\n              forward$ = fromPromise(\r\n                client\r\n                  .mutate({\r\n                    mutation: POST_REFRESH,\r\n                    variables: {\r\n                      authInput: {\r\n                        email: getLocal(\"username\"),\r\n                        refresh_token: getLocal(\"refreshToken\"),\r\n                      },\r\n                    },\r\n                  })\r\n                  .then(\r\n                    ({\r\n                      data: {\r\n                        refreshToken: { access_token },\r\n                      },\r\n                    }) => {\r\n                      setLocal(\"accessToken\", access_token);\r\n                      return true;\r\n                    }\r\n                  )\r\n                  .then(() => {\r\n                    resolvePendingRequests();\r\n                    return true;\r\n                  })\r\n                  .catch(() => {\r\n                    pendingRequests = [];\r\n                    return false;\r\n                  })\r\n                  .finally(() => {\r\n                    isRefreshing = false;\r\n                  })\r\n              );\r\n            } else {\r\n              forward$ = fromPromise(\r\n                new Promise((resolve: any) => {\r\n                  pendingRequests.push(() => resolve());\r\n                })\r\n              );\r\n            }\r\n\r\n            return forward$.flatMap(() => forward(operation));\r\n          default:\r\n            console.log(\r\n              `[ERROR]: Message: ${err.message}, Location: ${err.locations}, Path: ${err.path}`\r\n            );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (networkError) console.log(`[Network error]: ${networkError}`);\r\n  }\r\n);\r\n//http://localhost:3000/graphql\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://app.kemaytechnology.com/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = getLocal(\"accessToken\");\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: from([errorLink, authLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { clearAllLocal } from \"../../lib/local-storage\";\r\nimport client from \"../../apollo-client\";\r\n\r\nexport const LOGIN_USER = \"@auth/LOGIN_USER\";\r\nexport const LOGOUT_USER = \"@auth/LOGOUT_USER\";\r\nexport const LOADING_USER = \"@auth/LOADING_USER\";\r\nexport const ERROR_USER = \"@auth/ERROR_USER\";\r\n\r\nconst initialValue = {\r\n  name: \"Anonimo\",\r\n  lastName: \"\",\r\n};\r\n\r\nexport const setLoading = (loading: boolean) => {\r\n  return {\r\n    type: LOADING_USER,\r\n    payload: loading,\r\n  };\r\n};\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n  clearAllLocal();\r\n  client.resetStore();\r\n  window.location.href = \"/\";\r\n  await dispatch({\r\n    type: LOGOUT_USER,\r\n    payload: initialValue,\r\n  });\r\n};\r\n\r\nexport const whoisme = (payload: any) => async (dispatch: any) => {\r\n  try {\r\n    await dispatch(setLoading(true));\r\n    await dispatch({\r\n      type: LOGIN_USER,\r\n      payload: payload.me,\r\n    });\r\n    await dispatch(setLoading(false));\r\n  } catch (e) {\r\n    await dispatch({\r\n      type: ERROR_USER,\r\n      payload: e.message,\r\n    });\r\n  }\r\n};\r\n","import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport { logout } from \"../../store/auth/action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ME = gql`\r\n  query me {\r\n    me {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      status\r\n      role {\r\n        name\r\n        modules {\r\n          id\r\n          name\r\n          access {\r\n            name\r\n          }\r\n          menus {\r\n            id\r\n            name\r\n            link\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useMe = () => {\r\n  const [me, { data, loading, error }] = useLazyQuery(ME, {\r\n    pollInterval: 500,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (error && error?.graphQLErrors[0].extensions?.exception.status === 401) {\r\n    alert(error.graphQLErrors[0].extensions.exception.response.message);\r\n    dispatch(logout());\r\n  }\r\n\r\n  return { me, data, loading };\r\n};\r\n","export const LINK_USER = \"@page/LINK_USER\";\r\n\r\nexport const setLink = (module: any, link: any) => async (dispatch: any) => {\r\n  await dispatch({\r\n    type: LINK_USER,\r\n    payload: {\r\n      link,\r\n      module,\r\n      page: link === \"/\" ? \"HOME\" : link.toUpperCase(),\r\n    },\r\n  });\r\n};\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect } from \"react\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport { useMe } from \"../../hooks/user/useMe\";\r\nimport { connect } from \"react-redux\";\r\nimport { whoisme, setLoading, logout } from \"../../store/auth/action\";\r\nimport { setLink } from \"../../store/page/action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./header.css\";\r\nimport { setLocal } from \"../../lib/local-storage\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    loading: state.authReducer.loading,\r\n    authUser: state.authReducer.authUser,\r\n  };\r\n};\r\n\r\nconst Header = ({ authUser, loading, whoisme, setLink, logout }: any) => {\r\n  const { me, data } = useMe();\r\n  const history = useHistory();\r\n\r\n  const gotToHome = () => {\r\n    history.push(`/`);\r\n    setLink(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    me();\r\n    whoisme(data);\r\n    setLocal(\"username\", data?.me?.email);\r\n  }, [me, whoisme, data]);\r\n\r\n  if (data?.me?.status === 2) {\r\n    logout();\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"content-logo\">\r\n        <div onClick={() => gotToHome()} className=\"logo\">\r\n          <img width=\"60\" height=\"60\" src={logo} alt=\"Logo\" />\r\n        </div>\r\n        <div onClick={() => gotToHome()} className=\"title-logo\">\r\n          <p>RPUM</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"content-options\">\r\n        <div className=\"options\">\r\n          <a>\r\n            {loading\r\n              ? `Cargando usuario...`\r\n              : `Bienvenido, ${authUser?.name} ${authUser?.lastName}`}\r\n          </a>\r\n\r\n          <button className=\"buttonLogout\" onClick={() => logout()}>\r\n            Cerrar sesion\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setLoading,\r\n  whoisme,\r\n  logout,\r\n  setLink,\r\n})(Header);\r\n","import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"center\">\r\n        <p>\r\n          © 2020-2021 by{\" \"}\r\n          <a\r\n            href=\"https://kemaytechnology.com/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Kemay Technology\r\n          </a>\r\n          . Todos los derechos reservados. Si tuviese algún inconveniente por\r\n          favor contactarnos al siguiente correo:\r\n          <a\r\n            href=\"mailto:dperez@kemaytechnology.com\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            dperez@kemaytechnology.com\r\n          </a>\r\n          <br /> Version: 0.0.1 | Powered by\r\n          <a\r\n            href=\"http://github.com/davisperezg\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            @davisperezg\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst NoMatch = () => {\r\n  return <>4040404040404040</>;\r\n};\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\r\nimport {\r\n  PERMIT_ONE,\r\n  PERMIT_TWO,\r\n  PERMIT_TREE,\r\n  PERMIT_FOUR,\r\n  ROLSA,\r\n} from \"../../const\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\nexport const loadAccess = (\r\n  value: string,\r\n  auth: User,\r\n  page: any,\r\n  Component: any,\r\n  Notify?: any\r\n) => {\r\n  switch (value) {\r\n    case PERMIT_ONE:\r\n      //find access by modules\r\n      const filterAccessbyModuleCreate = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleCreate?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    case PERMIT_TWO:\r\n      //find access by modules\r\n      const filterAccessbyModuleEdit = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleEdit?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    case PERMIT_TREE:\r\n      //find access by modules\r\n      const filterAccessbyModuleDelete = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleDelete?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    case PERMIT_FOUR:\r\n      //find access by modules\r\n      const filterAccessbyModuleView = auth?.role?.modules?.map((module) =>\r\n        module.access?.filter(\r\n          (myaccess) => module.name === page && myaccess.name === value\r\n        )\r\n      );\r\n      //find access type create\r\n      return filterAccessbyModuleView?.map((access, i) => {\r\n        return access ? access?.length > 0 && <Component key={i} /> : \"\";\r\n      });\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","import React from \"react\";\r\n//dialog\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  Theme,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//fullscreen\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useSelector } from \"react-redux\";\r\n//icons\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\ninterface DialogOption {\r\n  open: boolean;\r\n  dialog?: any;\r\n  title: string;\r\n  component?: JSX.Element;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: \"absolute\",\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogForm = ({\r\n  open,\r\n  dialog,\r\n  title,\r\n  component,\r\n  handleClose,\r\n}: DialogOption) => {\r\n  const alert = useSelector((state: any) => state.message);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  /*  https://thoughtbot.com/blog/using-redux-with-react-hooks\r\n    const { count, user } = useSelector(state => ({\r\n      count: state.counter.count,\r\n      user: state.user,\r\n    }));\r\n  */\r\n  return (\r\n    <Dialog\r\n      fullScreen={fullScreen}\r\n      open={open}\r\n      aria-labelledby=\"idModal\"\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n    >\r\n      <DialogTitle id=\"idModal\" onClose={handleClose}>\r\n        {title} {dialog?.name}\r\n      </DialogTitle>\r\n      {alert.type && <Alert severity={alert.type}>{alert.text}</Alert>}\r\n      <DialogContent dividers style={{ overflowY: \"visible\" }}>\r\n        {component}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DialogForm;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_CATEGORYS = gql`\r\n  query getCategorys {\r\n    getCategorys {\r\n      id\r\n      name\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetCategorys = () => {\r\n  const { data, error, loading }: any = useQuery(GET_CATEGORYS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_BRANDS = gql`\r\n  query getBrands {\r\n    getBrands {\r\n      id\r\n      name\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetBrands = () => {\r\n  const { data, error, loading } = useQuery(GET_BRANDS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { GET_BRANDS } from \"./useGetBrands\";\r\n\r\ninterface UpdateBrandInput {\r\n  variables: {\r\n    brandInput: Brand;\r\n  };\r\n}\r\n\r\nconst UPDATE_BRAND = gql`\r\n  mutation updateBrand($brandInput: UpdateBrandInput!) {\r\n    updateBrand(brandInput: $brandInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateBrand = () => {\r\n  const [updateBrand, { error, loading }] = useMutation(UPDATE_BRAND, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_BRANDS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateBrand, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { GET_BRANDS } from \"./useGetBrands\";\r\n\r\ninterface CreateBrandInput {\r\n  variables: {\r\n    brandInput: Brand;\r\n  };\r\n}\r\n\r\nconst CREATE_BRAND = gql`\r\n  mutation registerBrand($brandInput: CreateBrandInput!) {\r\n    registerBrand(brandInput: $brandInput) {\r\n      id\r\n      name\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateBrand = () => {\r\n  const [registerBrand, { error, loading }] = useMutation(CREATE_BRAND, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_BRANDS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerBrand, error, loading };\r\n};\r\n","import { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { useUpdateBrand } from \"../../hooks/brand/useUpdateBrand\";\r\nimport { useCreateBrand } from \"../../hooks/brand/useCreateBrand\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  brand?: Brand;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst BrandForm = ({ handleClose, brand }: Options) => {\r\n  const initialValueCreate: Brand = {\r\n    name: \"\",\r\n    category: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Brand = {\r\n    id: brand?.id || \"\",\r\n    name: brand?.name || \"\",\r\n    category: brand?.category?.name || \"\",\r\n  };\r\n\r\n  const [brandForm, setBrandForm] = useState<Brand>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateBrand = useUpdateBrand();\r\n  const optionsCreateBrand = useCreateBrand();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setBrandForm({ ...brandForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setBrandForm({\r\n      ...brandForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (brandForm.id) {\r\n      try {\r\n        await optionsUpdateBrand.updateBrand({\r\n          variables: {\r\n            brandInput: brandForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La marca se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateBrand.registerBrand({\r\n          variables: {\r\n            brandInput: brandForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La marca ha sido registrada correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategorys(data.getCategorys);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel id=\"idCategory\">Categoria</InputLabel>\r\n            <Select\r\n              labelId=\"Categoria\"\r\n              id=\"idCategory\"\r\n              value={brandForm.category}\r\n              onChange={handleSelect}\r\n              label=\"Categoria\"\r\n              name=\"category\"\r\n            >\r\n              {categorys.map((category) => (\r\n                <MenuItem key={category.id} value={category.name}>\r\n                  {category.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Marca\"\r\n            variant=\"outlined\"\r\n            value={brandForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {brandForm.id ? (\r\n            optionsUpdateBrand.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateBrand.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BrandForm;\r\n","import { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useState } from \"react\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport BrandForm from \"./brand-form\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst BrandList = ({ brand }: { brand: Brand }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Marca\":\r\n        return <BrandForm brand={brand} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={brand}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar Marca\"\r\n          onClick={() => setDialog({ name: \"Marca\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {brand.category!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {brand.name}\r\n        </TableCell>\r\n        <TableCell>{moment(brand.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(brand.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default BrandList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport BrandList from \"../components/brand/brand-list\";\r\nimport BrandForm from \"../components/brand/brand-form\";\r\nimport { Brand } from \"../interfaces/brand.interface\";\r\nimport { useGetBrands } from \"../hooks/brand/useGetBrands\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst BrandPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetBrands();\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <BrandForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBrands(data.getBrands);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Marca`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Marca\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Marca</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {brands.map((brand) => (\r\n              <BrandList key={brand.id} brand={brand} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrandPage;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_CATEGORYS } from \"./useGetCategorys\";\r\n\r\ninterface CreateCategoryInput {\r\n  variables: {\r\n    categoryInput: Category;\r\n  };\r\n}\r\n\r\nconst CREATE_CATEGORY = gql`\r\n  mutation registerCategory($categoryInput: CreateCategoryInput!) {\r\n    registerCategory(categoryInput: $categoryInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateCategory = () => {\r\n  const [registerCategory, { error, loading }] = useMutation(CREATE_CATEGORY, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_CATEGORYS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerCategory, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { GET_CATEGORYS } from \"./useGetCategorys\";\r\n\r\ninterface UpdateCategoryInput {\r\n  variables: {\r\n    categoryInput: Category;\r\n  };\r\n}\r\n\r\nconst UPDATE_CATEGORY = gql`\r\n  mutation updateCategory($categoryInput: UpdateCategoryInput!) {\r\n    updateCategory(categoryInput: $categoryInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateCategory = () => {\r\n  const [updateCategory, { error, loading }] = useMutation(\r\n    UPDATE_CATEGORY\r\n    //   , {\r\n    //   refetchQueries: () => [\r\n    //     {\r\n    //       query: GET_CATEGORYS,\r\n    //     },\r\n    //   ],\r\n    // }\r\n  );\r\n\r\n  return { updateCategory, error, loading };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { useCreateCategory } from \"../../hooks/category/useCreateCategory\";\r\nimport { useUpdateCategory } from \"../../hooks/category/useUpdateCategory\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst CategoryForm = ({ handleClose, category }: any) => {\r\n  const initialValueCreate: Category = {\r\n    name: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Category = {\r\n    id: category?.id || \"\",\r\n    name: category?.name || \"\",\r\n  };\r\n\r\n  const [categoryForm, setCategoryForm] = useState<Category>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateCategory = useUpdateCategory();\r\n  const optionsCreateCategory = useCreateCategory();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setCategoryForm({ ...categoryForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (categoryForm.id) {\r\n      try {\r\n        await optionsUpdateCategory.updateCategory({\r\n          variables: {\r\n            categoryInput: categoryForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La categoria se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateCategory.registerCategory({\r\n          variables: {\r\n            categoryInput: categoryForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"La categoria ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Nombre\"\r\n            variant=\"outlined\"\r\n            value={categoryForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {categoryForm.id ? (\r\n            optionsUpdateCategory.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateCategory.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n","import { useState } from \"react\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport CategoryForm from \"./category-form\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst CategoryList = ({ category }: { category: Category }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Categoria\":\r\n        return <CategoryForm category={category} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={category}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar categoria\"\r\n          onClick={() => setDialog({ name: \"Categoria\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {category.name}\r\n        </TableCell>\r\n        <TableCell>{moment(category.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(category.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default CategoryList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport { Category } from \"../interfaces/category.interface\";\r\nimport CategoryForm from \"../components/category/category-form\";\r\nimport CategoryList from \"../components/category/category-list\";\r\nimport { useGetCategorys } from \"../hooks/category/useGetCategorys\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst CategooryPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetCategorys();\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <CategoryForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategorys(data.getCategorys);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Categoria`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Categoria\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categorys.map((category) => (\r\n              <CategoryList key={category.id} category={category} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategooryPage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_MODELS = gql`\r\n  query getModels {\r\n    getModels {\r\n      id\r\n      name\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetModels = () => {\r\n  const { data, error, loading } = useQuery(GET_MODELS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { GET_MODELS } from \"./useGetModels\";\r\n\r\ninterface UpdateModelInput {\r\n  variables: {\r\n    modelInput: Model;\r\n  };\r\n}\r\n\r\nconst UPDATE_MODEL = gql`\r\n  mutation updateModel($modelInput: UpdateModelInput!) {\r\n    updateModel(modelInput: $modelInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateModel = () => {\r\n  const [updateModel, { error, loading }] = useMutation(UPDATE_MODEL, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODELS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateModel, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { GET_MODELS } from \"./useGetModels\";\r\n\r\ninterface CreateModelInput {\r\n  variables: {\r\n    modelInput: Model;\r\n  };\r\n}\r\n\r\nconst CREATE_MODEL = gql`\r\n  mutation registerModel($modelInput: CreateModelInput!) {\r\n    registerModel(modelInput: $modelInput) {\r\n      id\r\n      name\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateModel = () => {\r\n  const [registerModel, { error, loading }] = useMutation(CREATE_MODEL, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODELS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerModel, error, loading };\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Progress from \"../progress/progress\";\r\nimport { useUpdateModel } from \"../../hooks/model/useUpdateModel\";\r\nimport { useCreateModel } from \"../../hooks/model/useCreateModel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useGetBrands } from \"../../hooks/brand/useGetBrands\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  model?: Model;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst ModelForm = ({ handleClose, model }: Options) => {\r\n  const initialValueCreate: Model = {\r\n    name: \"\",\r\n    brand: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Model = {\r\n    id: model?.id || \"\",\r\n    name: model?.name || \"\",\r\n    brand: model?.brand?.name || \"\",\r\n  };\r\n\r\n  const [modelForm, setModelForm] = useState<Model>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n  const { data } = useGetBrands();\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateModel = useUpdateModel();\r\n  const optionsCreateModel = useCreateModel();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setModelForm({ ...modelForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setModelForm({\r\n      ...modelForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (modelForm.id) {\r\n      try {\r\n        await optionsUpdateModel.updateModel({\r\n          variables: {\r\n            modelInput: modelForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modelo se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateModel.registerModel({\r\n          variables: {\r\n            modelInput: modelForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modelo ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setBrands(data.getBrands);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel id=\"idMarca\">Marca</InputLabel>\r\n            <Select\r\n              labelId=\"Marca\"\r\n              id=\"idMarca\"\r\n              value={modelForm.brand}\r\n              onChange={handleSelect}\r\n              label=\"Marca\"\r\n              name=\"brand\"\r\n            >\r\n              {brands.map((brand) => (\r\n                <MenuItem key={brand.id} value={brand.name}>\r\n                  {brand.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Modelo\"\r\n            variant=\"outlined\"\r\n            value={modelForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {modelForm.id ? (\r\n            optionsUpdateModel.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateModel.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ModelForm;\r\n","import { Model } from \"../../interfaces/model.interface\";\r\n\r\nimport { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport ModelForm from \"./model-form\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ModelList = ({ model }: { model: Model }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Modelo\":\r\n        return <ModelForm model={model} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={model}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar Modelo\"\r\n          onClick={() => setDialog({ name: \"Modelo\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {model.brand?.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {model.name}\r\n        </TableCell>\r\n        <TableCell>{moment(model.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(model.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default ModelList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport ModelList from \"../components/model/model-list\";\r\nimport { Model } from \"../interfaces/model.interface\";\r\nimport ModelForm from \"../components/model/model-form\";\r\nimport { useGetModels } from \"../hooks/model/useGetModels\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ModelPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetModels();\r\n  const [models, setModels] = useState<Model[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ModelForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setModels(data.getModels);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Modelo`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Modelo\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Marca</TableCell>\r\n              <TableCell>Modelo</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {models.map((model) => (\r\n              <ModelList key={model.id} model={model} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelPage;\r\n","import React from \"react\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { MENU_FORBIDDEN } from \"../../const\";\r\n\r\n/**\r\n * @param columns:any\r\n * @returns {columns: Array(1)}\r\n **/\r\n\r\n/**\r\n * @param {columns}:any\r\n * @returns [{…}]\r\n **/\r\n\r\nconst ItemModuleMenu = ({ menu }: { menu: Menu }) => {\r\n  return (\r\n    <>\r\n      {menu.name === MENU_FORBIDDEN ? (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={menu.name}\r\n          color=\"primary\"\r\n        />\r\n      ) : (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={menu.name}\r\n          onDelete={() => alert(\"keiner\")}\r\n          color=\"primary\"\r\n        />\r\n      )}\r\n      &nbsp;\r\n    </>\r\n  );\r\n};\r\nexport default ItemModuleMenu;\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Access } from \"../../interfaces/access.interface\";\r\n/**\r\n * @param columns:any\r\n * @returns {columns: Array(1)}\r\n **/\r\n\r\n/**\r\n * @param {columns}:any\r\n * @returns [{…}]\r\n **/\r\n\r\nconst ItemModuleAccess = ({ access }: { access: Access }) => {\r\n  return (\r\n    <>\r\n      <Chip\r\n        style={{ margin: \"3px\" }}\r\n        size=\"small\"\r\n        label={access.name}\r\n        onDelete={() => alert(\"keiner\")}\r\n        color=\"primary\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default ItemModuleAccess;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { GET_MODULES } from \"./useGetModules\";\r\n\r\ninterface UpdateModuleInput {\r\n  variables: {\r\n    moduleInput: Module;\r\n  };\r\n}\r\n\r\nconst UDATE_MODULE = gql`\r\n  mutation updateModule($moduleInput: UpdateModuleInput!) {\r\n    updateModule(moduleInput: $moduleInput) {\r\n      id\r\n      name\r\n      description\r\n      menus {\r\n        id\r\n        name\r\n      }\r\n      access {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateModule = () => {\r\n  const [updateModule, { error, loading }] = useMutation(UDATE_MODULE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODULES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateModule, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { GET_MODULES } from \"./useGetModules\";\r\n\r\ninterface CreateModuleInput {\r\n  variables: {\r\n    moduleInput: Module;\r\n  };\r\n}\r\n\r\nconst CREATE_MODULE = gql`\r\n  mutation registerModule($moduleInput: CreateModuleInput!) {\r\n    registerModule(moduleInput: $moduleInput) {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      menus {\r\n        id\r\n        name\r\n      }\r\n      access {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateModule = () => {\r\n  const [registerModule, { error, loading }] = useMutation(CREATE_MODULE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_MODULES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerModule, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\n\r\nconst GET_ACCESS = gql`\r\n  query getAccess {\r\n    getAccess {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetAllAccess = () => {\r\n  const { data, error, loading }: any = useQuery(GET_ACCESS);\r\n  const dispatch = useDispatch();\r\n\r\n  if (error) {\r\n    dispatch(\r\n      setAlert({\r\n        type: \"error\",\r\n        text: error.message,\r\n      })\r\n    );\r\n  }\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\n\r\nconst GET_MENUS = gql`\r\n  query getMenus {\r\n    getMenus {\r\n      id\r\n      name\r\n      link\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetMenus = () => {\r\n  const { data, error, loading }: any = useQuery(GET_MENUS);\r\n  const dispatch = useDispatch();\r\n\r\n  if (error) {\r\n    dispatch(\r\n      setAlert({\r\n        type: \"error\",\r\n        text: error.message,\r\n      })\r\n    );\r\n  }\r\n  return { data, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useUpdateModule } from \"../../hooks/module/useUpdateModule\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { Access } from \"../../interfaces/access.interface\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Progress from \"../progress/progress\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport { useCreateModule } from \"../../hooks/module/useCreateModule\";\r\nimport { useGetAllAccess } from \"../../hooks/access/useGetAllAceess\";\r\nimport { useGetMenus } from \"../../hooks/menu/useGetMenus\";\r\nimport { MENU_FORBIDDEN, MODULE_FORBIDDEN } from \"../../const\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\ntype SelectChange = ChangeEvent<{ value: unknown } | any | HTMLSelectElement>;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst ModuleForm = ({\r\n  module,\r\n  handleClose,\r\n}: {\r\n  module?: Module;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValueUpdate: Module = {\r\n    id: module?.id || \"\",\r\n    name: module?.name || \"\",\r\n    description: module?.description || \"\",\r\n  };\r\n\r\n  const initialValueCreate: Module = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const optionsUpdateModule = useUpdateModule();\r\n  const optionsCreateModule = useCreateModule();\r\n  const optionsGetAccess = useGetAllAccess();\r\n  const optionsGetMenus = useGetMenus();\r\n  const [menuSelected, setMenuSelected] = useState<Menu[]>([]);\r\n  const [accessSelected, setAccessSelected] = useState<Access[]>([]);\r\n  const [listMenus, setListMenus] = useState<Menu[]>([]);\r\n  const [listAccess, setListAccess] = useState<Access[]>([]);\r\n  const [moduleForm, setModuleForm] = useState<Module>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setModuleForm({ ...moduleForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelectMenus = (e: SelectChange) => {\r\n    setMenuSelected(e.target.value);\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelectAccess = (e: SelectChange) => {\r\n    setAccessSelected(e.target.value);\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const sentToAddMenus = menuSelected.map((value) => {\r\n    return { name: value };\r\n  });\r\n\r\n  const sentToAddAccess = accessSelected.map((value) => {\r\n    return { name: value };\r\n  });\r\n\r\n  function getStyles(name: any, personName: Module[], theme: Theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    if (moduleForm.id) {\r\n      try {\r\n        await optionsUpdateModule.updateModule({\r\n          variables: {\r\n            moduleInput: moduleForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modulo se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateModule.registerModule({\r\n          variables: {\r\n            moduleInput: {\r\n              ...moduleForm,\r\n              access: sentToAddAccess,\r\n              menus: sentToAddMenus,\r\n            },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El modulo se registró correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionsGetMenus.data && optionsGetAccess.data) {\r\n      const listMenusNoModulos = optionsGetMenus.data.getMenus.filter(\r\n        (menu: any) => menu.name !== MENU_FORBIDDEN\r\n      );\r\n      setListMenus(listMenusNoModulos);\r\n      setListAccess(optionsGetAccess.data.getAccess);\r\n    }\r\n  }, [optionsGetMenus.data, optionsGetAccess.data, moduleForm.name]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          {moduleForm.id && moduleForm.name === MODULE_FORBIDDEN ? (\r\n            \"\"\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                onChange={handleInput}\r\n                name=\"name\"\r\n                id=\"idName\"\r\n                label=\"Modulo\"\r\n                variant=\"outlined\"\r\n                value={moduleForm.name}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"description\"\r\n              id=\"idDescription\"\r\n              label=\"Descripción\"\r\n              multiline\r\n              value={moduleForm.description}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          {!initialValueUpdate.id && (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"menus-mutiple-chip-label\">Menus</InputLabel>\r\n                  <Select\r\n                    labelId=\"menus-mutiple-chip-label\"\r\n                    id=\"menus-mutiple-chip\"\r\n                    multiple\r\n                    value={menuSelected}\r\n                    onChange={handleSelectMenus}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={(selected) => (\r\n                      <div className={classes.chips}>\r\n                        {(selected as any[]).map((menu) => {\r\n                          return (\r\n                            <Chip\r\n                              key={menu}\r\n                              label={menu}\r\n                              className={menu.chip}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {listMenus.map((menu) => (\r\n                      <MenuItem\r\n                        key={menu.id}\r\n                        value={menu.name}\r\n                        style={getStyles(\r\n                          menu.name,\r\n                          moduleForm.menus || [],\r\n                          theme\r\n                        )}\r\n                      >\r\n                        {menu.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"access-mutiple-chip-label\">\r\n                    Accesos\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"access-mutiple-chip-label\"\r\n                    id=\"access-mutiple-chip\"\r\n                    multiple\r\n                    value={accessSelected}\r\n                    onChange={handleSelectAccess}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={(selected) => (\r\n                      <div className={classes.chips}>\r\n                        {(selected as any[]).map((access) => {\r\n                          return (\r\n                            <Chip\r\n                              key={access}\r\n                              label={access}\r\n                              className={access.chip}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                  >\r\n                    {listAccess.map((access) => (\r\n                      <MenuItem\r\n                        key={access.id}\r\n                        value={access.name}\r\n                        style={getStyles(\r\n                          access.name,\r\n                          moduleForm.access || [],\r\n                          theme\r\n                        )}\r\n                      >\r\n                        {access.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={() => handleClose()} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {moduleForm.id ? (\r\n              optionsUpdateModule.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreateModule.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModuleForm;\r\n","import React, { useState, FormEvent, useCallback, useEffect } from \"react\";\r\nimport { Access } from \"../../interfaces/access.interface\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useUpdateModule } from \"../../hooks/module/useUpdateModule\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useGetAllAccess } from \"../../hooks/access/useGetAllAceess\";\r\nimport TrasnferList from \"../../lib/transfer-list-component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst AccesoForm = ({\r\n  module,\r\n  handleClose,\r\n}: {\r\n  module: Module;\r\n  handleClose: () => void;\r\n}) => {\r\n  const [listAvailable, setListAvailable] = useState<Access[]>([]);\r\n  const [listCurrent, setListCurrent] = useState<Access[]>([]);\r\n  const [checked, setChecked] = useState<Access[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateModule = useUpdateModule();\r\n  const optionsGetAllAccess = useGetAllAccess();\r\n  const alert = useSelector((state: any) => state.message);\r\n  const { type, text } = alert;\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    const newData = listCurrent.map((access) => {\r\n      return {\r\n        name: access.name,\r\n      };\r\n    });\r\n\r\n    try {\r\n      await optionsUpdateModule.updateModule({\r\n        variables: {\r\n          moduleInput: {\r\n            id: module.id,\r\n            access: newData,\r\n          },\r\n        },\r\n      });\r\n      return dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"El modulo actualizó sus accesos correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadAccessAvailable = useCallback(() => {\r\n    const res = optionsGetAllAccess.data.getAccess.filter(\r\n      (dispo: Access) =>\r\n        !module.access?.some((actual) => dispo.name === actual.name)\r\n    );\r\n\r\n    setListAvailable(res);\r\n  }, [module, optionsGetAllAccess.data]);\r\n\r\n  useEffect(() => {\r\n    if (module && optionsGetAllAccess.data) {\r\n      setListCurrent(module.access || []);\r\n      loadAccessAvailable();\r\n    }\r\n  }, [module, optionsGetAllAccess.data, loadAccessAvailable]);\r\n\r\n  if (type === \"error\") {\r\n    return <h1>{text}</h1>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TrasnferList\r\n            setListAvailable={setListAvailable}\r\n            setListCurrent={setListCurrent}\r\n            setChecked={setChecked}\r\n            checked={checked}\r\n            listAvailable={listAvailable}\r\n            titleAvailable=\"Accesos disponibles\"\r\n            listCurrent={listCurrent}\r\n            titleCurrent=\"Accesos actuales\"\r\n            loading={optionsGetAllAccess.loading}\r\n          />\r\n        </Grid>\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disabled={optionsUpdateModule.loading ? true : false}\r\n          >\r\n            {module.id ? \"Actualizar\" : \"Registrar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccesoForm;\r\n","import React, { useState, useEffect, FormEvent, useCallback } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { useGetMenus } from \"../../hooks/menu/useGetMenus\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useUpdateModule } from \"../../hooks/module/useUpdateModule\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TrasnferList from \"../../lib/transfer-list-component\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { MENU_FORBIDDEN } from \"../../const\";\r\n\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst MenuForm = ({\r\n  module,\r\n  handleClose,\r\n}: {\r\n  module: Module;\r\n  handleClose: () => void;\r\n}) => {\r\n  const [listAvailable, setListAvailable] = useState<Menu[]>([]);\r\n  const [listCurrent, setListCurrent] = useState<Menu[]>([]);\r\n  const [checked, setChecked] = useState<Menu[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsGetMenus = useGetMenus();\r\n  const optionsUpdateModule = useUpdateModule();\r\n  const alert = useSelector((state: any) => state.message);\r\n  const { type, text } = alert;\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    const newData = listCurrent.map((menu) => {\r\n      return {\r\n        name: menu.name,\r\n      };\r\n    });\r\n\r\n    try {\r\n      await optionsUpdateModule.updateModule({\r\n        variables: {\r\n          moduleInput: {\r\n            id: module.id,\r\n            menus: newData,\r\n          },\r\n        },\r\n      });\r\n      return dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"El modulo actualizó sus menu correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const loadMenusAvailable = useCallback(() => {\r\n    const res = optionsGetMenus.data.getMenus.filter(\r\n      (dispo: Menu) =>\r\n        !module.menus?.some((actual) => dispo.name === actual.name)\r\n    );\r\n\r\n    const listMenusAvailableNoModulos = res.filter(\r\n      (menu: any) => menu.name !== MENU_FORBIDDEN\r\n    );\r\n\r\n    setListAvailable(listMenusAvailableNoModulos);\r\n  }, [module, optionsGetMenus.data]);\r\n\r\n  useEffect(() => {\r\n    if (module && optionsGetMenus.data) {\r\n      const listMenusCurrentNoModulos = module.menus?.filter(\r\n        (module) => module.name !== MENU_FORBIDDEN\r\n      );\r\n      setListCurrent(listMenusCurrentNoModulos || []);\r\n\r\n      loadMenusAvailable();\r\n    }\r\n  }, [module, optionsGetMenus.data, loadMenusAvailable]);\r\n\r\n  if (type === \"error\") {\r\n    return <h1>{text}</h1>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <TrasnferList\r\n            setListAvailable={setListAvailable}\r\n            setListCurrent={setListCurrent}\r\n            setChecked={setChecked}\r\n            checked={checked}\r\n            listAvailable={listAvailable}\r\n            titleAvailable=\"Menus disponibles\"\r\n            listCurrent={listCurrent}\r\n            titleCurrent=\"Menus actuales\"\r\n            loading={optionsGetMenus.loading}\r\n          />\r\n        </Grid>\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            variant=\"contained\"\r\n            disabled={optionsUpdateModule.loading ? true : false}\r\n          >\r\n            {module.id ? \"Actualizar\" : \"Registrar\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MenuForm;\r\n","import React, { useState } from \"react\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport ItemModuleMenu from \"./item-module-menu\";\r\nimport ItemModuleAccess from \"./item-module-access\";\r\n//tables\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n//button\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n//icon\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuRoundedIcon from \"@material-ui/icons/MenuRounded\";\r\nimport VerifiedUserRoundedIcon from \"@material-ui/icons/VerifiedUserRounded\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\n//dates\r\nimport moment from \"moment\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport ModuleForm from \"../module/module-form.component\";\r\nimport AccesoForm from \"../acceso/access-form.component\";\r\nimport MenuForm from \"../menu/menu-form.component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { MODULE_FORBIDDEN } from \"../../const\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ItemModule = ({ module }: { module: Module }) => {\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Modulo\":\r\n        return <ModuleForm module={module} handleClose={handleClose} />;\r\n\r\n      case \"Acceso\":\r\n        return <AccesoForm module={module} handleClose={handleClose} />;\r\n\r\n      case \"Menu\":\r\n        return <MenuForm module={module} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //[\"error\",\"info\",\"success\",\"warning\"]\r\n  return (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={module}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {module.name}\r\n        </TableCell>\r\n        <TableCell>{module.description}</TableCell>\r\n        <TableCell>{moment(module.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(module.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell align=\"center\">\r\n          {module.menus &&\r\n            module.menus.map((menu) => (\r\n              <ItemModuleMenu key={menu.id} menu={menu} />\r\n            ))}\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          {module.name === MODULE_FORBIDDEN ? (\r\n            <Chip\r\n              style={{ margin: \"3px\" }}\r\n              size=\"small\"\r\n              label=\"Todos los permisos\"\r\n              color=\"primary\"\r\n            />\r\n          ) : (\r\n            module.access &&\r\n            module.access.map((access) => (\r\n              <ItemModuleAccess key={access.id} access={access} />\r\n            ))\r\n          )}\r\n        </TableCell>\r\n\r\n        {module.name === MODULE_FORBIDDEN ? (\r\n          <TableCell align=\"center\">\r\n            <Tooltip\r\n              title=\"Asignar menu\"\r\n              onClick={() => setDialog({ name: \"Menu\", active: true })}\r\n            >\r\n              <IconButton aria-label=\"menu\" size=\"small\">\r\n                <MenuRoundedIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </TableCell>\r\n        ) : (\r\n          <>\r\n            <TableCell align=\"right\">\r\n              <Tooltip\r\n                title=\"Asignar menu\"\r\n                onClick={() => setDialog({ name: \"Menu\", active: true })}\r\n              >\r\n                <IconButton aria-label=\"menu\" size=\"small\">\r\n                  <MenuRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Asignar acceso\"\r\n                onClick={() => setDialog({ name: \"Acceso\", active: true })}\r\n              >\r\n                <IconButton aria-label=\"acceso\" size=\"small\">\r\n                  <VerifiedUserRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip\r\n                title=\"Editar modulo\"\r\n                onClick={() => setDialog({ name: \"Modulo\", active: true })}\r\n              >\r\n                <IconButton aria-label=\"acceso\" size=\"small\">\r\n                  <EditRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </TableCell>\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemModule;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useGetModules } from \"../hooks/module/useGetModules\";\r\nimport { Module } from \"../interfaces/module.interface\";\r\n//css library materialui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//tables\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n//end tables\r\nimport ItemModule from \"../components/table/item-module.component\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ModuleForm from \"../components/module/module-form.component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { ROLSA } from \"../const\";\r\nimport { findError } from \"../helpers/control-errors\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ModulePage = () => {\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n  const { data, loading, error } = useGetModules();\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ModuleForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setModules(data.getModules);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {auth?.role?.name === ROLSA ? (\r\n        <>\r\n          <DialogForm\r\n            open={dialog.active}\r\n            title={`${dialog.name} Modulo`}\r\n            component={component(dialog.name)}\r\n            handleClose={handleClose}\r\n          />\r\n\r\n          <Tooltip title=\"Crear Rol\">\r\n            <IconButton\r\n              aria-label=\"add\"\r\n              size=\"small\"\r\n              onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n            >\r\n              <AddRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Modulo</TableCell>\r\n                  <TableCell>Descripción</TableCell>\r\n                  <TableCell>Fecha creada</TableCell>\r\n                  <TableCell>Fecha modificada</TableCell>\r\n                  <TableCell align=\"center\">Menus</TableCell>\r\n                  <TableCell align=\"center\">Permisos</TableCell>\r\n                  <TableCell align=\"right\">Opciones</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {modules.map((module) => (\r\n                  <ItemModule key={module.id} module={module} />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1>No tiene permiso para acceder a este recurso.</h1>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModulePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_PRODUCTS = gql`\r\n  query getProducts {\r\n    getProducts {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n      model {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetProducts = () => {\r\n  const { data, error, loading } = useQuery(GET_PRODUCTS);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Product } from \"../../interfaces/product.interface\";\r\nimport { GET_PRODUCTS } from \"./useGetProducts\";\r\n\r\ninterface UpdateProductInput {\r\n  variables: {\r\n    productInput: Product;\r\n  };\r\n}\r\n\r\nconst UPDATE_PRODUCT = gql`\r\n  mutation updateService($productInput: UpdateProductInput!) {\r\n    updateProduct(productInput: $productInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n      model {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateProduct = () => {\r\n  const [updateProduct, { error, loading }] = useMutation(UPDATE_PRODUCT, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_PRODUCTS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateProduct, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Product } from \"../../interfaces/product.interface\";\r\nimport { GET_PRODUCTS } from \"./useGetProducts\";\r\n\r\ninterface CreateProductInput {\r\n  variables: {\r\n    productInput: Product;\r\n  };\r\n}\r\n\r\nconst CREATE_PRODUCT = gql`\r\n  mutation registerProduct($productInput: CreateProductInput!) {\r\n    registerProduct(productInput: $productInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n      brand {\r\n        id\r\n        name\r\n      }\r\n      model {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateProduct = () => {\r\n  const [registerProduct, { error, loading }] = useMutation(CREATE_PRODUCT, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_PRODUCTS,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerProduct, error, loading };\r\n};\r\n","import { gql, useQuery, useLazyQuery } from \"@apollo/client\";\r\n\r\nconst GET_BRANDS_BY_CATEGORY = gql`\r\n  query getBrandsByCategory($category: String!) {\r\n    getBrandsByCategory(category: $category) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetBrandsByCategory = (category: string) => {\r\n  const { error, loading, data } = useQuery(GET_BRANDS_BY_CATEGORY, {\r\n    variables: { category },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst GET_MODELS_BY_BRAND = gql`\r\n  query getModelsByBrand($brand: String!) {\r\n    getModelsByBrand(brand: $brand) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetModelsByBrand = (brand: string) => {\r\n  const { error, loading, data } = useQuery(GET_MODELS_BY_BRAND, {\r\n    variables: { brand },\r\n  });\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { Product } from \"../../interfaces/product.interface\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Progress from \"../progress/progress\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { FormChange, InputChange } from \"../../lib/types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { useUpdateProduct } from \"../../hooks/product/useUpdateProduct\";\r\nimport { useCreateProduct } from \"../../hooks/product/useCreateProduct\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Brand } from \"../../interfaces/brand.interface\";\r\nimport { useGetBrandsByCategory } from \"../../hooks/brand/useBrandsByCategory\";\r\nimport { useGetModelsByBrand } from \"../../hooks/model/useGetModelsByBrand\";\r\nimport { Model } from \"../../interfaces/model.interface\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  product?: Product;\r\n}\r\n\r\ninterface AutoCompleteInput {\r\n  category: string;\r\n  brand: string;\r\n  model: string;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialAutoCompleteInput = {\r\n  category: \"\",\r\n  brand: \"\",\r\n  model: \"\",\r\n};\r\n\r\nconst ProductForm = ({ handleClose, product }: Options) => {\r\n  const initialValueCreate: Product = {\r\n    name: \"\",\r\n    description: \"\",\r\n    price: 0,\r\n    category: \"\",\r\n    brand: \"\",\r\n    model: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Product = {\r\n    id: product?.id || \"\",\r\n    name: product?.name || \"\",\r\n    description: product?.description || \"\",\r\n    price: product?.price || 0,\r\n    category: product?.category?.name || \"\",\r\n    brand: product?.brand?.name || \"\",\r\n    model: product?.model?.name || \"\",\r\n  };\r\n\r\n  const [productForm, setProductForm] = useState<Product>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [valueInput, setValueInput] = useState<AutoCompleteInput>(\r\n    initialAutoCompleteInput\r\n  );\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n  const [models, setModels] = useState<Model[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateProduct = useUpdateProduct();\r\n  const optionsCreateProduct = useCreateProduct();\r\n  const optionsGetBrandsByCategory = useGetBrandsByCategory(\r\n    productForm.category || \"\"\r\n  );\r\n\r\n  const optionsGetModelsByBrand = useGetModelsByBrand(productForm.brand || \"\");\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setProductForm({ ...productForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  //https://stackoverflow.com/questions/62588055/how-to-get-the-name-of-material-ui-autocomplete-component\r\n\r\n  const dataCategorys = useCallback(() => {\r\n    setCategorys(data.getCategorys);\r\n  }, [data]);\r\n\r\n  const changeBrandByCategory = useCallback(() => {\r\n    setBrands(optionsGetBrandsByCategory?.data?.getBrandsByCategory || []);\r\n  }, [optionsGetBrandsByCategory]);\r\n\r\n  const changeModelByBrand = useCallback(() => {\r\n    setModels(optionsGetModelsByBrand?.data?.getModelsByBrand || []);\r\n  }, [optionsGetModelsByBrand]);\r\n\r\n  const handleKeyUpCategory = (e: any) => {\r\n    if (\r\n      e.target.value.length < productForm.category.length ||\r\n      e.target.value.length === 0\r\n    ) {\r\n      setProductForm({\r\n        ...productForm,\r\n        category: \"\",\r\n        brand: \"\",\r\n        model: \"\",\r\n      });\r\n      setValueInput({\r\n        ...valueInput,\r\n        category: \"\",\r\n        brand: \"\",\r\n        model: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleKeyUpBrand = (e: any) => {\r\n    if (\r\n      e.target.value.length < productForm.brand.length ||\r\n      e.target.value.length === 0\r\n    ) {\r\n      setProductForm({ ...productForm, brand: \"\", model: \"\" });\r\n      setValueInput({\r\n        ...valueInput,\r\n        brand: \"\",\r\n        model: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleKeyUpModel = (e: any) => {\r\n    if (\r\n      e.target.value.length < productForm.model.length ||\r\n      e.target.value.length === 0\r\n    ) {\r\n      setProductForm({ ...productForm, model: \"\" });\r\n      setValueInput({\r\n        ...valueInput,\r\n        model: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (productForm.id) {\r\n      try {\r\n        await optionsUpdateProduct.updateProduct({\r\n          variables: {\r\n            productInput: productForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El producto se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateProduct.registerProduct({\r\n          variables: {\r\n            productInput: productForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El producto ha sido registrada correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dataCategorys();\r\n      changeBrandByCategory();\r\n      changeModelByBrand();\r\n    }\r\n  }, [data, dataCategorys, changeBrandByCategory, changeModelByBrand]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Autocomplete\r\n            id=\"idCategory\"\r\n            onChange={(event, value) => {\r\n              setProductForm({\r\n                ...productForm,\r\n                category: value?.name || \"\",\r\n                brand: \"\",\r\n                model: \"\",\r\n              });\r\n              setValueInput({\r\n                ...valueInput,\r\n                brand: \"\",\r\n                model: \"\",\r\n              });\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            onKeyUp={handleKeyUpCategory}\r\n            inputValue={\r\n              valueInput.category ? valueInput.category : productForm.category\r\n            }\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, category: newValue });\r\n            }}\r\n            options={categorys}\r\n            getOptionLabel={(category) => (category.name ? category.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"category\"\r\n                label=\"Categoria\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Autocomplete\r\n            id=\"idBrand\"\r\n            onChange={(event, value) => {\r\n              setProductForm({\r\n                ...productForm,\r\n                brand: value?.name || \"\",\r\n                model: \"\",\r\n              });\r\n              setValueInput({\r\n                ...valueInput,\r\n                model: \"\",\r\n              });\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            onKeyUp={handleKeyUpBrand}\r\n            inputValue={valueInput.brand ? valueInput.brand : productForm.brand}\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, brand: newValue });\r\n            }}\r\n            options={brands}\r\n            getOptionLabel={(brand) => (brand.name ? brand.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                name=\"brand\"\r\n                label=\"Marca\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Autocomplete\r\n            id=\"idModel\"\r\n            onChange={(event, value) => {\r\n              setProductForm({ ...productForm, model: value?.name || \"\" });\r\n              dispatch(setAlert(initialAlert));\r\n            }}\r\n            onKeyUp={handleKeyUpModel}\r\n            inputValue={valueInput.model ? valueInput.model : productForm.model}\r\n            onInputChange={(e, newValue) => {\r\n              setValueInput({ ...valueInput, model: newValue });\r\n            }}\r\n            options={models}\r\n            getOptionLabel={(model) => (model.name ? model.name : \"\")}\r\n            getOptionSelected={(option, value) =>\r\n              option.name !== value.name ? false : true\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                name=\"model\"\r\n                {...params}\r\n                label=\"Modelo\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Producto\"\r\n            variant=\"outlined\"\r\n            value={productForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"description\"\r\n            onChange={handleInput}\r\n            id=\"idDescription\"\r\n            label=\"Descripción\"\r\n            multiline\r\n            rows={6}\r\n            defaultValue={productForm.description}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"price\"\r\n            autoComplete=\"off\"\r\n            id=\"idPrice\"\r\n            label=\"Precio\"\r\n            variant=\"outlined\"\r\n            value={productForm.price}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {productForm.id ? (\r\n            optionsUpdateProduct.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateProduct.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","export const formatMoney = (value: any) =>\r\n  new Intl.NumberFormat(\"de-DE\", {\r\n    style: \"currency\",\r\n    currency: \"PEN\",\r\n  }).format(value);\r\n","import { Product } from \"../../interfaces/product.interface\";\r\nimport ProductForm from \"./product-form\";\r\nimport { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ProductList = ({ product }: { product: Product }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Producto\":\r\n        return <ProductForm product={product} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={product}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar Producto\"\r\n          onClick={() => setDialog({ name: \"Producto\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"product\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.category!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.brand!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.model!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {product.description}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {formatMoney(product.price)}\r\n        </TableCell>\r\n        <TableCell>{moment(product.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(product.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default ProductList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport { Product } from \"../interfaces/product.interface\";\r\nimport ProductList from \"../components/product/product-list\";\r\nimport ProductForm from \"../components/product/product-form\";\r\nimport { useGetProducts } from \"../hooks/product/useGetProducts\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ProductPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetProducts();\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ProductForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setProducts(data.getProducts);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Producto`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Producto\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Marca</TableCell>\r\n              <TableCell>Model</TableCell>\r\n              <TableCell>Producto</TableCell>\r\n              <TableCell>Descripción</TableCell>\r\n              <TableCell>Precio</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map((product) => (\r\n              <ProductList key={product.id} product={product} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_ROLES = gql`\r\n  query getRoles {\r\n    getRoles {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      modules {\r\n        id\r\n        name\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetRoles = () => {\r\n  const { data, loading, error } = useQuery(GET_ROLES);\r\n  return { data, loading, error };\r\n};\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { MODULE_FORBIDDEN } from \"../../const\";\r\n\r\nconst RoleModuleItem = ({ module }: { module: Module }) => {\r\n  return (\r\n    <>\r\n      {module.name === MODULE_FORBIDDEN ? (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={module.name}\r\n          color=\"primary\"\r\n        />\r\n      ) : (\r\n        <Chip\r\n          style={{ margin: \"3px\" }}\r\n          size=\"small\"\r\n          label={module.name}\r\n          onDelete={() => alert(\"keiner\")}\r\n          color=\"primary\"\r\n        />\r\n      )}\r\n      &nbsp;\r\n    </>\r\n  );\r\n};\r\nexport default RoleModuleItem;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { GET_ROLES } from \"./useGetRoles\";\r\n\r\ninterface RoleInput {\r\n  variables: {\r\n    roleInput: Role;\r\n  };\r\n}\r\n\r\nconst CREATE_ROL = gql`\r\n  mutation registerRole($roleInput: RoleInput!) {\r\n    registerRole(roleInput: $roleInput) {\r\n      id\r\n      name\r\n      description\r\n      modules {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateRole = () => {\r\n  const [registerRole, { error, loading }] = useMutation(CREATE_ROL, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_ROLES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerRole, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { useUpdateRole } from \"../../hooks/role/useUpdateRole\";\r\nimport { useCreateRole } from \"../../hooks/role/useCreateRole\";\r\nimport Progress from \"../progress/progress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { useGetModules } from \"../../hooks/module/useGetModules\";\r\nimport { MODULE_FORBIDDEN, ROLSA } from \"../../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\ntype SelectChange = ChangeEvent<{ value: unknown } | any | HTMLSelectElement>;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n    },\r\n    chips: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst RoleForm = ({\r\n  role,\r\n  handleClose,\r\n}: {\r\n  role?: Role;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValueUpdate: Role = {\r\n    id: role?.id || \"\",\r\n    name: role?.name || \"\",\r\n    description: role?.description || \"\",\r\n  };\r\n\r\n  const initialValueCreate: Role = {\r\n    name: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const optionsUpdateRole = useUpdateRole();\r\n  const optionsCreateRole = useCreateRole();\r\n  const optionsGetModules = useGetModules();\r\n  const [roleForm, setRoleForm] = useState<Role>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [modulesSelected, setModulesSelected] = useState<Module[]>([]);\r\n  const [listModules, setListModules] = useState<Module[]>([]);\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setRoleForm({ ...roleForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setModulesSelected(e.target.value);\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const sentToAddModules = modulesSelected.map((value) => {\r\n    return { name: value };\r\n  });\r\n\r\n  function getStyles(name: any, personName: Module[], theme: Theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    if (roleForm.id) {\r\n      try {\r\n        await optionsUpdateRole.updateRole({\r\n          variables: {\r\n            roleInput: roleForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El rol se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateRole.registerRole({\r\n          variables: {\r\n            roleInput: { ...roleForm, modules: sentToAddModules },\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El rol se registró correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (optionsGetModules.data) {\r\n      const listModulesNoModulos = optionsGetModules.data.getModules.filter(\r\n        (menu: any) => menu.name !== MODULE_FORBIDDEN\r\n      );\r\n      setListModules(listModulesNoModulos);\r\n    }\r\n  }, [optionsGetModules.data]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          {roleForm.id && roleForm.name === ROLSA ? (\r\n            \"\"\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                onChange={handleInput}\r\n                name=\"name\"\r\n                id=\"idName\"\r\n                label=\"Role\"\r\n                variant=\"outlined\"\r\n                value={roleForm.name}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"description\"\r\n              id=\"idDescription\"\r\n              label=\"Descripción\"\r\n              multiline\r\n              value={roleForm.description}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          {!initialValueUpdate.id && (\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"outlined\" fullWidth>\r\n                <InputLabel id=\"module-mutiple-chip-label\">Modulos</InputLabel>\r\n                <Select\r\n                  labelId=\"module-mutiple-chip-label\"\r\n                  id=\"module-mutiple-chip\"\r\n                  multiple\r\n                  value={modulesSelected}\r\n                  onChange={handleSelect}\r\n                  input={<Input id=\"select-multiple-chip\" />}\r\n                  renderValue={(selected) => (\r\n                    <div className={classes.chips}>\r\n                      {(selected as any[]).map((module) => {\r\n                        return (\r\n                          <Chip\r\n                            key={module}\r\n                            label={module}\r\n                            className={classes.chip}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  MenuProps={MenuProps}\r\n                >\r\n                  {listModules.map((module) =>\r\n                    auth?.role?.name === ROLSA ? (\r\n                      <MenuItem\r\n                        key={module.id}\r\n                        value={module.name}\r\n                        style={getStyles(\r\n                          module.name,\r\n                          roleForm.modules || [],\r\n                          theme\r\n                        )}\r\n                      >\r\n                        {module.name}\r\n                      </MenuItem>\r\n                    ) : (\r\n                      module.name !== MODULE_FORBIDDEN && (\r\n                        <MenuItem\r\n                          key={module.id}\r\n                          value={module.name}\r\n                          style={getStyles(\r\n                            module.name,\r\n                            roleForm.modules || [],\r\n                            theme\r\n                          )}\r\n                        >\r\n                          {module.name}\r\n                        </MenuItem>\r\n                      )\r\n                    )\r\n                  )}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          )}\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={() => handleClose()} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {roleForm.id ? (\r\n              optionsUpdateRole.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreateRole.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleForm;\r\n","import React, { useState } from \"react\";\r\n//tables\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n//button\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n//icon\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\n//dates\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport RoleModuleItem from \"./role-module-item\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport RoleForm from \"./rol-form\";\r\nimport ModuleTransferList from \"../module/module-transfer-list\";\r\nimport ViewModuleRoundedIcon from \"@material-ui/icons/ViewModuleRounded\";\r\nimport { PERMIT_FOUR, PERMIT_TWO, ROLSA } from \"../../const\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst RoleList = ({ role }: { role: Role }) => {\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Modulo\":\r\n        return <ModuleTransferList role={role} handleClose={handleClose} />;\r\n\r\n      case \"Rol\":\r\n        return <RoleForm role={role} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={role}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      {role.name === ROLSA ? (\r\n        <TableCell align=\"center\">\r\n          <Tooltip\r\n            title=\"Asignar modulos\"\r\n            onClick={() => setDialog({ name: \"Modulo\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"modules\" size=\"small\">\r\n              <ViewModuleRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      ) : (\r\n        <TableCell align=\"right\">\r\n          <Tooltip\r\n            title=\"Asignar modulos\"\r\n            onClick={() => setDialog({ name: \"Modulo\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"modules\" size=\"small\">\r\n              <ViewModuleRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip\r\n            title=\"Editar rol\"\r\n            onClick={() => setDialog({ name: \"Rol\", active: true })}\r\n          >\r\n            <IconButton aria-label=\"role\" size=\"small\">\r\n              <EditRoundedIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        {auth?.role?.name === ROLSA ? (\r\n          <>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {role.name}\r\n            </TableCell>\r\n            <TableCell>{role.description}</TableCell>\r\n            <TableCell>{moment(role.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            <TableCell>{moment(role.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            <TableCell align=\"center\">\r\n              {role.modules &&\r\n                role.modules.map((module) => (\r\n                  <RoleModuleItem key={module.id} module={module} />\r\n                ))}\r\n            </TableCell>\r\n            {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {role.name === ROLSA || (\r\n              <>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {role.name}\r\n                </TableCell>\r\n                <TableCell>{role.description}</TableCell>\r\n                <TableCell>\r\n                  {moment(role.createdAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(role.updatedAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {role.modules &&\r\n                    role.modules.map((module) => (\r\n                      <RoleModuleItem key={module.id} module={module} />\r\n                    ))}\r\n                </TableCell>\r\n                {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default RoleList;\r\n","import React, { useState, useEffect } from \"react\";\r\n//css library materialui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//tables\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Role } from \"../interfaces/role.interface\";\r\nimport { useGetRoles } from \"../hooks/role/useGetRoles\";\r\n//end tables\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport RoleList from \"../components/role/role-list\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RoleForm from \"../components/role/rol-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport { findError } from \"../helpers/control-errors\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst RolePage = () => {\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetRoles();\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <RoleForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setRoles(data.getRoles);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialog = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Rol`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n\r\n      <Tooltip title=\"Crear Rol\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialog)}\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Rol</TableCell>\r\n              <TableCell>Descripción</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              <TableCell align=\"center\">Modulos</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {roles.map((role) => (\r\n              <RoleList key={role.id} role={role} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RolePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_SERVICES = gql`\r\n  query getServices {\r\n    getServices {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      createdAt\r\n      updatedAt\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetServices = () => {\r\n  const { data, error, loading } = useQuery(GET_SERVICES);\r\n\r\n  return { data, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Service } from \"../../interfaces/service.interface\";\r\nimport { GET_SERVICES } from \"./useGetServices\";\r\n\r\ninterface UpdateServiceInput {\r\n  variables: {\r\n    serviceInput: Service;\r\n  };\r\n}\r\n\r\nconst UPDATE_SERVICE = gql`\r\n  mutation updateService($serviceInput: UpdateServiceInput!) {\r\n    updateService(serviceInput: $serviceInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateService = () => {\r\n  const [updateService, { error, loading }] = useMutation(UPDATE_SERVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_SERVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { updateService, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { Service } from \"../../interfaces/service.interface\";\r\nimport { GET_SERVICES } from \"./useGetServices\";\r\n\r\ninterface CreateServiceInput {\r\n  variables: {\r\n    serviceInput: Service;\r\n  };\r\n}\r\n\r\nconst CREATE_SERVICE = gql`\r\n  mutation registerService($serviceInput: CreateServiceInput!) {\r\n    registerService(serviceInput: $serviceInput) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n      category {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//https://stackoverflow.com/questions/58431224/how-does-apollo-client-graphql-refetchqueries-works\r\nexport const useCreateService = () => {\r\n  const [registerService, { error, loading }] = useMutation(CREATE_SERVICE, {\r\n    refetchQueries: () => [\r\n      {\r\n        query: GET_SERVICES,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return { registerService, error, loading };\r\n};\r\n","import { Service } from \"../../interfaces/service.interface\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Category } from \"../../interfaces/category.interface\";\r\nimport { useGetCategorys } from \"../../hooks/category/useGetCategorys\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useUpdateService } from \"../../hooks/service/useUpdateService\";\r\nimport { useCreateService } from \"../../hooks/service/useCreateService\";\r\nimport { FormChange, InputChange, SelectChange } from \"../../lib/types\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Progress from \"../progress/progress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\ninterface Options {\r\n  handleClose: () => void;\r\n  service?: Service;\r\n}\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst ServiceForm = ({ handleClose, service }: Options) => {\r\n  const initialValueCreate: Service = {\r\n    name: \"\",\r\n    description: \"\",\r\n    price: 0,\r\n    category: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: Service = {\r\n    id: service?.id || \"\",\r\n    name: service?.name || \"\",\r\n    description: service?.description || \"\",\r\n    price: service?.price || 0,\r\n    category: service?.category?.name || \"\",\r\n  };\r\n\r\n  const [serviceForm, setServiceForm] = useState<Service>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n\r\n  const [categorys, setCategorys] = useState<Category[]>([]);\r\n  const { data } = useGetCategorys();\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateService = useUpdateService();\r\n  const optionsCreateService = useCreateService();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setServiceForm({ ...serviceForm, [e.target.name]: e.target.value });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setServiceForm({\r\n      ...serviceForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n\r\n    if (serviceForm.id) {\r\n      try {\r\n        await optionsUpdateService.updateService({\r\n          variables: {\r\n            serviceInput: serviceForm\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El servicio se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateService.registerService({\r\n          variables: {\r\n            serviceInput: serviceForm\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El servicio ha sido registrada correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCategorys(data.getCategorys);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <InputLabel id=\"idCategory\">Categoria</InputLabel>\r\n            <Select\r\n              labelId=\"Categoria\"\r\n              id=\"idCategory\"\r\n              value={serviceForm.category}\r\n              onChange={handleSelect}\r\n              label=\"Categoria\"\r\n              name=\"category\"\r\n            >\r\n              {categorys.map((category) => (\r\n                <MenuItem key={category.id} value={category.name}>\r\n                  {category.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            id=\"idName\"\r\n            label=\"Servicio\"\r\n            variant=\"outlined\"\r\n            value={serviceForm.name}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"description\"\r\n            autoComplete=\"off\"\r\n            id=\"idDescription\"\r\n            label=\"Descripción\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            value={serviceForm.description}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"price\"\r\n            autoComplete=\"off\"\r\n            id=\"idPrice\"\r\n            label=\"Precio\"\r\n            variant=\"outlined\"\r\n            value={serviceForm.price}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">S/</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {serviceForm.id ? (\r\n            optionsUpdateService.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Actualizar\r\n              </Button>\r\n            )\r\n          ) : optionsCreateService.loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Registrar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ServiceForm;\r\n","import { Service } from \"../../interfaces/service.interface\";\r\nimport { useState } from \"react\";\r\n\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO } from \"../../const\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { Dialog } from \"../../interfaces/dialog.interface\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport ServiceForm from \"./service-form\";\r\nimport { formatMoney } from \"../../lib/currency/money\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ServiceList = ({ service }: { service: Service }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Servicio\":\r\n        return <ServiceForm service={service} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={service}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        <Tooltip\r\n          title=\"Editar Servicio\"\r\n          onClick={() => setDialog({ name: \"Servicio\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"service\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {service.category!.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {service.name}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {service.description}\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {formatMoney(service.price)}\r\n        </TableCell>\r\n        <TableCell>{moment(service.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        <TableCell>{moment(service.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n        {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default ServiceList;\r\n","import { useState, useEffect } from \"react\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport { Dialog } from \"../interfaces/dialog.interface\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport { User } from \"../interfaces/user.interface\";\r\n\r\nimport { Service } from \"../interfaces/service.interface\";\r\nimport ServiceForm from \"../components/service/service-form\";\r\nimport ServiceList from \"../components/service/service-list\";\r\nimport { useGetServices } from \"../hooks/service/useGetServices\";\r\n\r\nconst initialAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst initialDialog = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst ServicePage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialDialog);\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, loading, error } = useGetServices();\r\n  const [services, setServices] = useState<Service[]>([]);\r\n\r\n  const handleClose = () => {\r\n    setDialog(initialDialog);\r\n    dispatch(setAlert(initialAlert));\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <ServiceForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setServices(data.getServices);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialogToCreate = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Servicio`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Servicio\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialogToCreate)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          //className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Categoria</TableCell>\r\n              <TableCell>Servicio</TableCell>\r\n              <TableCell>Descripción</TableCell>\r\n              <TableCell>Precio</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {services.map((service) => (\r\n              <ServiceList key={service.id} service={service} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServicePage;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_USERS = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      status\r\n      createdAt\r\n      updatedAt\r\n      role {\r\n        name\r\n        description\r\n        modules {\r\n          access {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetUsers = () => {\r\n  const { data, loading, error } = useQuery(GET_USERS);\r\n\r\n  return { data, loading, error };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { GET_USERS } from \"./useGetUsers\";\r\n\r\ninterface UserUpdateInput {\r\n  variables: {\r\n    userInput: User;\r\n  };\r\n}\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateRole($userInput: UserUpdateInput!) {\r\n    updateUser(userInput: $userInput) {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      role {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useUpdateUser = () => {\r\n  const [updateUser, { error, loading }] = useMutation(\r\n    UPDATE_USER\r\n    //   , {\r\n    //   refetchQueries: () => [\r\n    //     {\r\n    //       query: GET_USERS,\r\n    //     },\r\n    //   ],\r\n    // }\r\n  );\r\n\r\n  return { updateUser, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { GET_USERS } from \"./useGetUsers\";\r\n\r\ninterface UserInput {\r\n  variables: {\r\n    userInput: User;\r\n  };\r\n}\r\n\r\nconst CREATE_USER = gql`\r\n  mutation registerUser($userInput: UserInput!) {\r\n    registerUser(userInput: $userInput) {\r\n      id\r\n      name\r\n      lastName\r\n      email\r\n      createdAt\r\n      updatedAt\r\n      role {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useCreateUser = () => {\r\n  const [registerUser, { error, loading }] = useMutation(CREATE_USER, {\r\n    refetchQueries: () => [{ query: GET_USERS }],\r\n  });\r\n  return { registerUser, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useUpdateUser } from \"../../hooks/user/useUpdateUser\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { useGetRoles } from \"../../hooks/role/useGetRoles\";\r\nimport { Role } from \"../../interfaces/role.interface\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useCreateUser } from \"../../hooks/user/useCreateUser\";\r\nimport Progress from \"../progress/progress\";\r\nimport { ROLSA } from \"../../const\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\ntype SelectChange = ChangeEvent<{ value: unknown } | any | HTMLSelectElement>;\r\n\r\nconst UserForm = ({\r\n  user,\r\n  handleClose,\r\n}: {\r\n  user?: User;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValueCreate: User = {\r\n    name: \"\",\r\n    lastName: \"\",\r\n    role: {\r\n      name: \"\",\r\n    },\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n\r\n  const initialValueUpdate: User = {\r\n    id: user?.id || \"\",\r\n    name: user?.name || \"\",\r\n    lastName: user?.lastName || \"\",\r\n    role: {\r\n      name: user?.role?.name || \"\",\r\n    },\r\n    email: user?.email || \"\",\r\n  };\r\n\r\n  const [userForm, setUserForm] = useState<User>(\r\n    initialValueUpdate.id ? initialValueUpdate : initialValueCreate\r\n  );\r\n  const [listRoles, setListRoles] = useState<Role[]>([]);\r\n  const dispatch = useDispatch();\r\n  const optionsUpdateUser = useUpdateUser();\r\n  const { data } = useGetRoles();\r\n  const optionsCreateUser = useCreateUser();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setUserForm({ ...userForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelect = (e: SelectChange) => {\r\n    setUserForm({\r\n      ...userForm,\r\n      [e.target.name]: { name: e.target.value },\r\n    });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    if (userForm.id) {\r\n      try {\r\n        await optionsUpdateUser.updateUser({\r\n          variables: {\r\n            userInput: userForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El usuario se actualizó correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      try {\r\n        await optionsCreateUser.registerUser({\r\n          variables: {\r\n            userInput: userForm,\r\n          },\r\n        });\r\n        dispatch(\r\n          setAlert({\r\n            type: \"success\",\r\n            text: \"El usuario ha sido registrado correctamente.\",\r\n          })\r\n        );\r\n      } catch (e) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setListRoles(data.getRoles);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"name\"\r\n              autoComplete=\"off\"\r\n              id=\"idNombres\"\r\n              label=\"Nombres\"\r\n              variant=\"outlined\"\r\n              value={userForm.name}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"lastName\"\r\n              autoComplete=\"off\"\r\n              id=\"idApellidos\"\r\n              label=\"Apellidos\"\r\n              value={userForm.lastName}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          {userForm.role?.name === ROLSA || (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <FormControl variant=\"outlined\" fullWidth>\r\n                  <InputLabel id=\"idRole\">Rol</InputLabel>\r\n                  <Select\r\n                    labelId=\"Rol\"\r\n                    id=\"idRole\"\r\n                    value={userForm.role?.name}\r\n                    onChange={handleSelect}\r\n                    label=\"Rol\"\r\n                    name=\"role\"\r\n                  >\r\n                    {listRoles.map((role) =>\r\n                      auth?.role?.name === ROLSA ? (\r\n                        <MenuItem key={role.id} value={role.name}>\r\n                          {role.name}\r\n                        </MenuItem>\r\n                      ) : (\r\n                        role.name !== ROLSA && (\r\n                          <MenuItem key={role.id} value={role.name}>\r\n                            {role.name}\r\n                          </MenuItem>\r\n                        )\r\n                      )\r\n                    )}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </>\r\n          )}\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              onChange={handleInput}\r\n              name=\"email\"\r\n              autoComplete=\"off\"\r\n              id=\"idEmail\"\r\n              label=\"Correo\"\r\n              value={userForm.email}\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: userForm.id ? true : false,\r\n              }}\r\n            />\r\n          </Grid>\r\n          {userForm.id ? (\r\n            \"\"\r\n          ) : (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  onChange={handleInput}\r\n                  name=\"password\"\r\n                  autoComplete=\"off\"\r\n                  id=\"idPassword\"\r\n                  label=\"Contraseña\"\r\n                  value={userForm.password}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  onChange={handleInput}\r\n                  name=\"confirmPassword\"\r\n                  autoComplete=\"off\"\r\n                  id=\"idConfirmPassword\"\r\n                  label=\"Repetir contraseña\"\r\n                  value={userForm.confirmPassword}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n          <DialogActions style={{ width: \"100%\" }}>\r\n            <Button onClick={() => handleClose()} color=\"primary\">\r\n              Cancelar\r\n            </Button>\r\n            {userForm.id ? (\r\n              optionsUpdateUser.loading ? (\r\n                <Progress />\r\n              ) : (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                  variant=\"contained\"\r\n                >\r\n                  Actualizar\r\n                </Button>\r\n              )\r\n            ) : optionsCreateUser.loading ? (\r\n              <Progress />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                autoFocus\r\n                variant=\"contained\"\r\n              >\r\n                Registrar\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Grid>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst UPDATE_ACTIVATE_USER = gql`\r\n  mutation activateUser($id: String!) {\r\n    activateUser(id: $id) {\r\n      id\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_DESACTIVATE_USER = gql`\r\n  mutation desactivateUser($id: String!) {\r\n    desactivateUser(id: $id) {\r\n      id\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useActivateUser = () => {\r\n  const [activateUser, { error, loading }] = useMutation(UPDATE_ACTIVATE_USER);\r\n\r\n  return { activateUser, error, loading };\r\n};\r\n\r\nexport const useDesactivateUser = () => {\r\n  const [desactivateUser, { error, loading }] = useMutation(\r\n    UPDATE_DESACTIVATE_USER\r\n  );\r\n\r\n  return { desactivateUser, error, loading };\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { AuthUser } from \"../../interfaces/auth.interface\";\r\n\r\ninterface AuthChangePasswordInputToAdmin {\r\n  variables: {\r\n    authInput: AuthUser;\r\n  };\r\n}\r\n\r\ninterface AuthChangePasswordInputToUser {\r\n  variables: {\r\n    authInput: AuthUser;\r\n  };\r\n}\r\nconst UPDATE_PASSWORD_TO_ADMIN = gql`\r\n  mutation changePasswordToAdmin($authInput: AuthChangePasswordInputToAdmin!) {\r\n    changePasswordToAdmin(authInput: $authInput)\r\n  }\r\n`;\r\n\r\nconst UPDATE_PASSWORD_TO_USER = gql`\r\n  mutation changePasswordToUser($authInput: AuthChangePasswordInputToUser!) {\r\n    changePasswordToUser(authInput: $authInput)\r\n  }\r\n`;\r\n\r\n//TO ADMIN\r\nexport const useChangePasswordToAdmin = () => {\r\n  const [changePasswordToAdmin, { error, loading }] = useMutation(\r\n    UPDATE_PASSWORD_TO_ADMIN\r\n  );\r\n\r\n  return { changePasswordToAdmin, error, loading };\r\n};\r\n\r\n//TO USER\r\nexport const useChangePasswordToUser = () => {\r\n  const [changePasswordToUser, { error, loading }] = useMutation(\r\n    UPDATE_PASSWORD_TO_USER\r\n  );\r\n\r\n  return { changePasswordToUser, error, loading };\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport Progress from \"../progress/progress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useChangePasswordToAdmin } from \"../../hooks/password/useChangePassword\";\r\nimport { AuthUser } from \"../../interfaces/auth.interface\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst PasswordForm = ({\r\n  user,\r\n  handleClose,\r\n}: {\r\n  user?: User;\r\n  handleClose: () => void;\r\n}) => {\r\n  const initialValue: AuthUser = {\r\n    id: user?.id || \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  };\r\n\r\n  const [userForm, setUserForm] = useState<AuthUser>(initialValue);\r\n  const dispatch = useDispatch();\r\n  const { changePasswordToAdmin, error, loading } = useChangePasswordToAdmin();\r\n\r\n  const handleInput = (e: InputChange) => {\r\n    setUserForm({ ...userForm, [e.target.name]: e.target.value });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    try {\r\n      await changePasswordToAdmin({\r\n        variables: {\r\n          authInput: userForm,\r\n        },\r\n      });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"success\",\r\n          text: \"La contraseña ha sido cambiada correctamente.\",\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Grid container spacing={3}>\r\n        {/* <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"currentPassword\"\r\n            autoComplete=\"off\"\r\n            id=\"idPassword\"\r\n            label=\"Contraseña Actual\"\r\n            variant=\"outlined\"\r\n            value={userForm.currentPassword}\r\n          />\r\n        </Grid> */}\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"newPassword\"\r\n            autoComplete=\"off\"\r\n            id=\"idNewPassword\"\r\n            label=\"Nueva Contraseña\"\r\n            value={userForm.newPassword}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            onChange={handleInput}\r\n            name=\"confirmNewPassword\"\r\n            autoComplete=\"off\"\r\n            id=\"idConfirmNewPassword\"\r\n            label=\"Confirmar nueva contraseña\"\r\n            value={userForm.confirmNewPassword}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <DialogActions style={{ width: \"100%\" }}>\r\n          <Button onClick={() => handleClose()} color=\"primary\">\r\n            Cancelar\r\n          </Button>\r\n          {loading ? (\r\n            <Progress />\r\n          ) : (\r\n            <Button type=\"submit\" color=\"primary\" autoFocus variant=\"contained\">\r\n              Actualizar\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PasswordForm;\r\n","import React, { useState } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport RemoveRoundedIcon from \"@material-ui/icons/RemoveRounded\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { setAlert } from \"../../store/alert/action\";\r\nimport DialogForm from \"../dialog/dialog.component\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport UserForm from \"./user-form\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport {\r\n  useActivateUser,\r\n  useDesactivateUser,\r\n} from \"../../hooks/user/useUpdateAccessToLogin\";\r\nimport { loadAccess } from \"../acceso/filter-access.component\";\r\nimport { PERMIT_FOUR, PERMIT_TWO, ROLSA } from \"../../const\";\r\nimport LockRoundedIcon from \"@material-ui/icons/LockRounded\";\r\nimport PasswordForm from \"../password/password-form\";\r\nimport { findError } from \"../../helpers/control-errors\";\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst UserList = ({ user }: { user: User }) => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const dispatch = useDispatch();\r\n  const optionsActivate = useActivateUser();\r\n  const optionsDesactivate = useDesactivateUser();\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const desactivateUser = async () => {\r\n    try {\r\n      await optionsDesactivate.desactivateUser({\r\n        variables: { id: user.id },\r\n      });\r\n    } catch (e) {\r\n      setDialog({ name: \"error\", active: true });\r\n      dispatch(\r\n        setAlert({\r\n          type: \"error\",\r\n          text: findError(e),\r\n        })\r\n      );\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={dialog.name}\r\n        handleClose={handleClose}\r\n      />;\r\n    }\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Usuario\":\r\n        return <UserForm user={user} handleClose={handleClose} />;\r\n\r\n      case \"Contraseña\":\r\n        return <PasswordForm user={user} handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const showOptionsForEdit = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        dialog={user}\r\n        title={dialog.name}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <TableCell align=\"right\">\r\n        {user.role?.name === ROLSA ? (\r\n          \"\"\r\n        ) : (\r\n          <>\r\n            {user.status === 2 ? (\r\n              <Tooltip\r\n                title=\"Activar usuario\"\r\n                onClick={() =>\r\n                  optionsActivate.activateUser({\r\n                    variables: { id: user.id },\r\n                  })\r\n                }\r\n              >\r\n                <IconButton\r\n                  aria-label=\"desactivate\"\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <RemoveRoundedIcon style={{ color: \"#F44336\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : user.status === 1 ? (\r\n              <Tooltip title=\"Desactivar usuario\" onClick={desactivateUser}>\r\n                <IconButton\r\n                  aria-label=\"activate\"\r\n                  size=\"small\"\r\n                  style={{ color: \"#4CAF50\" }}\r\n                >\r\n                  <CheckRoundedIcon style={{ color: \"#4CAF50\" }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <Tooltip\r\n          title=\"Editar usuario\"\r\n          onClick={() => setDialog({ name: \"Usuario\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"role\" size=\"small\">\r\n            <EditRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        <Tooltip\r\n          title=\"Cambiar contraseña\"\r\n          onClick={() => setDialog({ name: \"Contraseña\", active: true })}\r\n        >\r\n          <IconButton aria-label=\"password\" size=\"small\">\r\n            <LockRoundedIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </>\r\n  );\r\n\r\n  const showData = () => (\r\n    <>\r\n      <TableRow>\r\n        {auth?.role?.name === ROLSA ? (\r\n          <>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {user.name} {user.lastName}\r\n            </TableCell>\r\n            <TableCell>{user.role?.name}</TableCell>\r\n            <TableCell>{user.email}</TableCell>\r\n            <TableCell>{moment(user.createdAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            <TableCell>{moment(user.updatedAt).format(\"DD/MM/YYYY\")}</TableCell>\r\n            {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {user.role?.name === ROLSA || (\r\n              <>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {user.name} {user.lastName}\r\n                </TableCell>\r\n                <TableCell>{user.role?.name}</TableCell>\r\n                <TableCell>{user.email}</TableCell>\r\n                <TableCell>\r\n                  {moment(user.createdAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(user.updatedAt).format(\"DD/MM/YYYY\")}\r\n                </TableCell>\r\n                {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    </>\r\n  );\r\n\r\n  return <>{loadAccess(PERMIT_FOUR, auth, page, showData)}</>;\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useGetUsers } from \"../hooks/user/useGetUsers\";\r\nimport { User } from \"../interfaces/user.interface\";\r\nimport UserList from \"../components/user/user-list\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\r\nimport DialogForm from \"../components/dialog/dialog.component\";\r\nimport UserForm from \"../components/user/user-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../store/alert/action\";\r\nimport { PERMIT_ONE, PERMIT_TWO } from \"../const\";\r\nimport { loadAccess } from \"../components/acceso/filter-access.component\";\r\nimport { findError } from \"../helpers/control-errors\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\ninterface Dialog {\r\n  name: string;\r\n  active: boolean;\r\n}\r\n\r\nconst initialValueButton = {\r\n  name: \"\",\r\n  active: false,\r\n};\r\n\r\nconst UserPage = () => {\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n  const page = useSelector((state: any) => state.page.user.module);\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [dialog, setDialog] = useState<Dialog>(initialValueButton);\r\n  const { data, loading, error } = useGetUsers();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setDialog({ ...dialog, active: false });\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const component = (name: string) => {\r\n    switch (name) {\r\n      case \"Crear\":\r\n        return <UserForm handleClose={handleClose} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setUsers(data.getUsers);\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <h1>Cargando...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>{findError(error)}</h1>;\r\n  }\r\n\r\n  const showDialog = () => (\r\n    <>\r\n      <DialogForm\r\n        open={dialog.active}\r\n        title={`${dialog.name} Usuario`}\r\n        component={component(dialog.name)}\r\n        handleClose={handleClose}\r\n      />\r\n      <Tooltip title=\"Crear Usuario\">\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          size=\"small\"\r\n          onClick={() => setDialog({ name: \"Crear\", active: true })}\r\n        >\r\n          <AddRoundedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n\r\n  const showOptionsForEdit = () => (\r\n    <TableCell align=\"right\">Opciones</TableCell>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {loadAccess(PERMIT_ONE, auth, page, showDialog)}\r\n      <TableContainer component={Paper} style={{ marginTop: 10 }}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nombres</TableCell>\r\n              <TableCell>Rol</TableCell>\r\n              <TableCell>Correo</TableCell>\r\n              <TableCell>Fecha creada</TableCell>\r\n              <TableCell>Fecha modificada</TableCell>\r\n              {loadAccess(PERMIT_TWO, auth, page, showOptionsForEdit)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users.map((user) => (\r\n              <UserList key={user.id} user={user} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { createElement } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\nimport NoMatch from \"../pages/404.page\";\r\nimport BrandPage from \"../pages/brand.page\";\r\nimport CategooryPage from \"../pages/category.page\";\r\nimport ModelPage from \"../pages/model.page\";\r\nimport ModulePage from \"../pages/module.page\";\r\nimport ProductPage from \"../pages/product.page\";\r\nimport RolePage from \"../pages/role.page\";\r\nimport ServicePage from \"../pages/service.page\";\r\nimport UserPage from \"../pages/user.page\";\r\nimport { getLocal } from \"./local-storage\";\r\n\r\ninterface RootState {\r\n  page: {\r\n    user: {\r\n      link: string;\r\n      page: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const {\r\n    page: {\r\n      user: { link, page },\r\n    },\r\n  } = state;\r\n  return { link, page };\r\n};\r\n\r\nconst ItemSwitch = ({ link, page }: any) => {\r\n  const location = useLocation();\r\n  const formatedLink = location.pathname.replace(\"/\", \"\");\r\n\r\n  const PrivateRoute = ({ component, toLogin, ...rest }: any) => {\r\n    const routeComponent = (props: any) => {\r\n      switch (toLogin) {\r\n        case true:\r\n          return getLocal(\"accessToken\") ? (\r\n            <Redirect to={{ pathname: \"/\" }} />\r\n          ) : (\r\n            createElement(component, props)\r\n          );\r\n\r\n        case false:\r\n          return getLocal(\"accessToken\") ? (\r\n            createElement(component, props)\r\n          ) : (\r\n            <Redirect to={{ pathname: \"/\" }} />\r\n          );\r\n      }\r\n    };\r\n\r\n    return <Route {...rest} render={routeComponent} />;\r\n  };\r\n\r\n  const PAGES = (page: string) => {\r\n    switch (page) {\r\n      case \"HOME\":\r\n        const Home = () => {\r\n          return <h1>Hola Home</h1>;\r\n        };\r\n        return Home;\r\n\r\n      case \"MODULOS\":\r\n        const Modulos = () => <ModulePage />;\r\n        return Modulos;\r\n\r\n      case \"ROLES\":\r\n        const Roles = () => <RolePage />;\r\n        return Roles;\r\n\r\n      case \"USUARIOS\":\r\n        const Usuarios = () => <UserPage />;\r\n        return Usuarios;\r\n\r\n      case \"CATEGORIAS\":\r\n        const Categorias = () => <CategooryPage />;\r\n        return Categorias;\r\n\r\n      case \"MARCAS\":\r\n        const Marcas = () => <BrandPage />;\r\n        return Marcas;\r\n\r\n      case \"MODELOS\":\r\n        const Modelos = () => <ModelPage />;\r\n        return Modelos;\r\n\r\n      case \"PRODUCTOS\":\r\n        const Productos = () => <ProductPage />;\r\n        return Productos;\r\n\r\n      case \"SERVICIOS\":\r\n        const Servicios = () => <ServicePage />;\r\n        return Servicios;\r\n\r\n      default:\r\n        const ERROR = () => <NoMatch />;\r\n        return ERROR;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {link === formatedLink || link === location.pathname ? (\r\n        <PrivateRoute\r\n          exact\r\n          path={`/${link}`}\r\n          toLogin={false}\r\n          component={PAGES(`${page}`)}\r\n        />\r\n      ) : (\r\n        <PrivateRoute toLogin={false} path=\"*\" component={NoMatch} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n/**\r\n *\r\n   {menu.link === formatedLink ? (\r\n        <>\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/caja\" toLogin={false} component={Caja} />\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Switch>\r\n            <Route path=\"*\" component={NoMatch} />\r\n          </Switch>\r\n        </>\r\n      )}\r\n * \r\n */\r\nexport default connect(mapStateToProps, null)(ItemSwitch);\r\n","import React from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport ItemSwitch from \"./item-switch.component\";\r\n\r\nconst SwitchContainer = () => {\r\n  return (\r\n    <Switch>\r\n      <ItemSwitch />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default SwitchContainer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MENU_FORBIDDEN, ROLSA } from \"../../const\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { setLink } from \"../../store/page/action\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\n\r\n/** #1\r\n * @param { name, link }: Menu = {}\r\n * @returns name, link\r\n **/\r\n\r\n/** #2\r\n * @param { menu }: {menu: Menu}\r\n * @returns menu.name, menu.link\r\n **/\r\n\r\n/** #3\r\n * menu:Menu\r\n * const {name, link} = menu\r\n * @returns name, link\r\n **/\r\n\r\nconst ListItemMenus = ({\r\n  menu,\r\n  setLink,\r\n  module,\r\n}: {\r\n  menu: Menu;\r\n  setLink: any;\r\n  module: Module;\r\n}) => {\r\n  const history = useHistory();\r\n  const auth: User = useSelector((state: any) => state.authReducer.authUser);\r\n\r\n  const goToPage = () => {\r\n    setLink(module.name, menu.link);\r\n    document.title = `RPUM - ${menu.link.toUpperCase()}`;\r\n    history.push(`/${menu.link}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {auth?.role?.name === ROLSA ? (\r\n        <li onClick={() => goToPage()}>{menu.name}</li>\r\n      ) : (\r\n        menu.name !== MENU_FORBIDDEN && (\r\n          <li onClick={() => goToPage()}>{menu.name}</li>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { setLink })(ListItemMenus);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ChevronRight, ExpandMore } from \"@material-ui/icons\";\r\nimport ListItemMenus from \"./list-item-menus\";\r\nimport { Menu } from \"../../interfaces/menu.interface\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\n\r\nconst ListItemModules = ({ module }: { module: Module }) => {\r\n  const [isArrowActive, setArrowActive] = useState<Boolean>(false);\r\n  const [isTextModuleActive, setTextModuleActive] = useState<Boolean>(false);\r\n  const findMenus = module.menus;\r\n  const [menus, setMenu] = React.useState<Menu[]>([]);\r\n\r\n  const handleArrow = () => {\r\n    setArrowActive(!isArrowActive);\r\n    setTextModuleActive(!isTextModuleActive);\r\n  };\r\n\r\n  const stylesModuleActive = {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const stylesModuleInactive = {\r\n    color: \"#67677e\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMenu(findMenus || []);\r\n  }, [findMenus]);\r\n\r\n  return (\r\n    <>\r\n      <li\r\n        style={isTextModuleActive ? stylesModuleActive : stylesModuleInactive}\r\n        onClick={() => handleArrow()}\r\n      >\r\n        {module.name} {isArrowActive ? <ExpandMore /> : <ChevronRight />}\r\n      </li>\r\n      {isArrowActive && (\r\n        <ul>\r\n          {menus.map((menu) => (\r\n            <ListItemMenus key={menu.id} menu={menu} module={module} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItemModules;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Footer from \"../footer/footer.component\";\r\nimport SwitchContainer from \"../../lib/switch-container\";\r\nimport { connect } from \"react-redux\";\r\nimport { Module } from \"../../interfaces/module.interface\";\r\nimport { User } from \"../../interfaces/user.interface\";\r\nimport ListItemModules from \"./list-item-modules\";\r\nimport \"./wrapper.css\";\r\n\r\ninterface RootState {\r\n  authReducer: {\r\n    loading: boolean;\r\n    authUser: User;\r\n  };\r\n  page: {\r\n    user: {\r\n      link: string;\r\n      page: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  const {\r\n    authReducer: { loading, authUser },\r\n    page: {\r\n      user: { link, page },\r\n    },\r\n  } = state;\r\n\r\n  return { loading, authUser, page, link };\r\n};\r\n\r\nconst Wrapper = ({ authUser, page }: any) => {\r\n  const data: User = authUser;\r\n  const title: String = page;\r\n  const firsCaracter: String = title.charAt(0).toUpperCase();\r\n  const restCaracter: String = title.substr(1, title.length);\r\n  const subTitle: String = `${firsCaracter}${restCaracter.toLowerCase()}`;\r\n  const findModules = data?.role?.modules;\r\n  const [modules, setModules] = useState<Module[]>([]);\r\n\r\n  useEffect(() => {\r\n    setModules(findModules || []);\r\n  }, [findModules]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <aside>\r\n        <div className=\"sidebar\">\r\n          <ul>\r\n            {modules.map((module) => (\r\n              <ListItemModules key={module.id} module={module} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </aside>\r\n      <section>\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"content-wrapper-header items-center\">\r\n            <h1>{title}</h1>\r\n            <ol>\r\n              <li className=\"list-style-none text-active\">\r\n                <strong>Home</strong>\r\n              </li>\r\n              <li className=\"list-style-none text-inactive\">{subTitle}</li>\r\n            </ol>\r\n          </div>\r\n          <div className=\"content-wrapper-main\">\r\n            <SwitchContainer />\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Wrapper);\r\n","import React from \"react\";\r\nimport Header from \"../components/header/header.component\";\r\nimport Wrapper from \"../components/wrapper/wrapper.component\";\r\nimport \"./css/home.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Wrapper />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { Login } from \"../../interfaces/auth.interface\";\r\n\r\ninterface AuthInput {\r\n  variables: {\r\n    authInput: Login;\r\n  };\r\n}\r\n\r\nconst POST_LOGIN = gql`\r\n  mutation login($authInput: AuthInput!) {\r\n    login(authInput: $authInput) {\r\n      access_token\r\n      refresh_token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useLogin = (): any => {\r\n  const [login] = useMutation(POST_LOGIN);\r\n\r\n  return login;\r\n};\r\n","import React, { useState, ChangeEvent, FormEvent } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { useLogin } from \"../hooks/login/useLogin\";\r\nimport { Error } from \"../interfaces/error.interface\";\r\nimport { Login } from \"../interfaces/auth.interface\";\r\nimport { setLocal } from \"../lib/local-storage\";\r\nimport client from \"../apollo-client\";\r\nimport { setLoading } from \"../store/auth/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./css/login.css\";\r\nimport { findError } from \"../helpers/control-errors\";\r\nimport { setAlert } from \"../store/alert/action\";\r\n\r\n//for inputs\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\n//for selects\r\n//type SelectChange = ChangeEvent<HTMLSelectElement>;\r\n//for forms\r\ntype FormChange = FormEvent<HTMLFormElement>;\r\n\r\nconst initialUser = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst initialError = {\r\n  path: \"\",\r\n  message: \"\",\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    loading: state.authReducer.loading,\r\n  };\r\n};\r\n\r\nconst LoginPage: React.FC = ({ loading, setLoading }: any) => {\r\n  const [error, setError] = useState<Error>(initialError);\r\n  const [user, setUser] = useState<Login>(initialUser);\r\n  const alert = useSelector((state: any) => state.message);\r\n  const loginForm = useLogin();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (e: InputChange) => {\r\n    dispatch(\r\n      setAlert({\r\n        type: \"\",\r\n        text: \"\",\r\n      })\r\n    );\r\n    setError(initialError);\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: FormChange) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const res = await loginForm({\r\n        variables: {\r\n          authInput: { email: user.email, password: user.password },\r\n        },\r\n      });\r\n\r\n      const {\r\n        data: {\r\n          login: { access_token, refresh_token },\r\n        },\r\n      } = res;\r\n\r\n      setLocal(\"accessToken\", access_token);\r\n      setLocal(\"refreshToken\", refresh_token);\r\n      client.resetStore();\r\n      window.location.href = \"/\";\r\n    } catch (e) {\r\n      if (e.graphQLErrors[0].extensions.exception.status === 401) {\r\n        dispatch(\r\n          setAlert({\r\n            type: \"error\",\r\n            text: findError(e),\r\n          })\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      setError(e.graphQLErrors[0].extensions.exception.response);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"content-login-logo content-items-center\">\r\n        <img width=\"250\" height=\"250\" src={logo} alt=\"Logo\" />\r\n      </div>\r\n      <div className=\"content-login-form content-items-center\">\r\n        <div className=\"content-login-form-main\">\r\n          <div className=\"content-login-form-header content-items-center\">\r\n            <h1>SISTEMA RPUM</h1>\r\n          </div>\r\n          {alert.type && <Alert severity={alert.type}>{alert.text}</Alert>}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"content-login-form-body\">\r\n              <div className=\"content-login-form-input\">\r\n                <TextField\r\n                  error={error?.path === \"username\" ? true : false}\r\n                  id=\"idUsername\"\r\n                  label=\"Usuario\"\r\n                  helperText={error?.path === \"username\" ? error?.message : \"\"}\r\n                  name=\"email\"\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </div>\r\n              <br />\r\n              <div className=\"content-login-form-input\">\r\n                <TextField\r\n                  error={error?.path === \"password\" ? true : false}\r\n                  id=\"idPassword\"\r\n                  label=\"Contraseña\"\r\n                  helperText={error?.path === \"password\" ? error?.message : \"\"}\r\n                  name=\"password\"\r\n                  onChange={handleInputChange}\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                />\r\n              </div>\r\n              <br />\r\n              <div className=\"content-login-form-input content-items-center\">\r\n                {loading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <Button\r\n                    disabled={loading ? true : false}\r\n                    type=\"submit\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                  >\r\n                    Iniciar sesion\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <br />\r\n              <div className=\"content-login-form-footer content-items-center\">\r\n                ¿Olvidaste tu contraseña?\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, { setLoading })(LoginPage);\r\n","import React from \"react\";\r\nimport { Redirect, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { getLocal } from \"../../lib/local-storage\";\r\nimport Home from \"../../pages/home.page\";\r\nimport LoginPage from \"../../pages/login.page\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      {getLocal(\"accessToken\") ? (\r\n        <Home />\r\n      ) : (\r\n        <>\r\n          <LoginPage />\r\n          <Redirect to=\"/\" />\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { LOADING_USER, ERROR_USER, LOGIN_USER, LOGOUT_USER } from \"./action\";\r\n\r\ninterface RootState {\r\n  loading: boolean;\r\n  authUser: undefined;\r\n  error: undefined;\r\n}\r\n\r\nconst initialState: RootState = {\r\n  loading: false,\r\n  authUser: undefined,\r\n  error: undefined,\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state: RootState = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n      };\r\n\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        authUser: action.payload,\r\n      };\r\n\r\n    case ERROR_USER:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LINK_USER } from \"./action\";\r\n\r\ninterface RootState {\r\n  user: {\r\n    link: string;\r\n    module: string;\r\n    page: string;\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  user: {\r\n    link: \"/\",\r\n    module: \"\",\r\n    page: \"HOME\",\r\n  },\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state: RootState = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case LINK_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IAlert } from \"../../interfaces/alert.interface\";\r\nimport { ALERT } from \"./action\";\r\n\r\nconst initialState: IAlert = {\r\n  type: \"\",\r\n  text: \"\",\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state: any = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ALERT:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport authReducer from \"./auth/reducer\";\r\nimport pageReducer from \"./page/reducer\";\r\nimport alertReducer from \"./alert/reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  authReducer,\r\n  page: pageReducer,\r\n  message: alertReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"page\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/app.component\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport client from \"./apollo-client\";\nimport \"./pages/css/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Progress = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CircularProgress disableShrink />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const GET_MODULES = gql`\r\n  query getModules {\r\n    getModules {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      menus {\r\n        id\r\n        name\r\n        link\r\n      }\r\n      access {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetModules = () => {\r\n  const { data, loading, error } = useQuery(GET_MODULES);\r\n  return { data, loading, error };\r\n};\r\n"],"sourceRoot":""}